# Generated by the protocol buffer compiler.  DO NOT EDIT!
# source: rpc.proto

import sys
_b=sys.version_info[0]<3 and (lambda x:x) or (lambda x:x.encode('latin1'))
from google.protobuf import descriptor as _descriptor
from google.protobuf import message as _message
from google.protobuf import reflection as _reflection
from google.protobuf import symbol_database as _symbol_database
from google.protobuf import descriptor_pb2
# @@protoc_insertion_point(imports)

_sym_db = _symbol_database.Default()


from google.api import annotations_pb2 as google_dot_api_dot_annotations__pb2


DESCRIPTOR = _descriptor.FileDescriptor(
  name='rpc.proto',
  package='lnrpc',
  syntax='proto3',
  serialized_pb=_b('\n\trpc.proto\x12\x05lnrpc\x1a\x1cgoogle/api/annotations.proto\"\xf1\x01\n\x0bTransaction\x12\x18\n\x07tx_hash\x18\x01 \x01(\tR\x07tx_hash\x12\x16\n\x06\x61mount\x18\x02 \x01(\x03R\x06\x61mount\x12,\n\x11num_confirmations\x18\x03 \x01(\x05R\x11num_confirmations\x12\x1e\n\nblock_hash\x18\x04 \x01(\tR\nblock_hash\x12\"\n\x0c\x62lock_height\x18\x05 \x01(\x05R\x0c\x62lock_height\x12\x1e\n\ntime_stamp\x18\x06 \x01(\x03R\ntime_stamp\x12\x1e\n\ntotal_fees\x18\x07 \x01(\x03R\ntotal_fees\"\x18\n\x16GetTransactionsRequest\"L\n\x12TransactionDetails\x12\x36\n\x0ctransactions\x18\x01 \x03(\x0b\x32\x12.lnrpc.TransactionR\x0ctransactions\"\x89\x01\n\x0bSendRequest\x12\x0c\n\x04\x64\x65st\x18\x01 \x01(\x0c\x12\x13\n\x0b\x64\x65st_string\x18\x02 \x01(\t\x12\x0b\n\x03\x61mt\x18\x03 \x01(\x03\x12\x14\n\x0cpayment_hash\x18\x04 \x01(\x0c\x12\x1b\n\x13payment_hash_string\x18\x05 \x01(\t\x12\x17\n\x0fpayment_request\x18\x06 \x01(\t\"\x94\x01\n\x0cSendResponse\x12$\n\rpayment_error\x18\x01 \x01(\tR\rpayment_error\x12*\n\x10payment_preimage\x18\x02 \x01(\x0cR\x10payment_preimage\x12\x32\n\rpayment_route\x18\x03 \x01(\x0b\x32\x0c.lnrpc.RouteR\rpayment_route\"\x82\x01\n\x0c\x43hannelPoint\x12\"\n\x0c\x66unding_txid\x18\x01 \x01(\x0cR\x0c\x66unding_txid\x12*\n\x10\x66unding_txid_str\x18\x02 \x01(\tR\x10\x66unding_txid_str\x12\"\n\x0coutput_index\x18\x03 \x01(\rR\x0coutput_index\">\n\x10LightningAddress\x12\x16\n\x06pubkey\x18\x01 \x01(\tR\x06pubkey\x12\x12\n\x04host\x18\x02 \x01(\tR\x04host\"\x86\x01\n\x0fSendManyRequest\x12>\n\x0c\x41\x64\x64rToAmount\x18\x01 \x03(\x0b\x32(.lnrpc.SendManyRequest.AddrToAmountEntry\x1a\x33\n\x11\x41\x64\x64rToAmountEntry\x12\x0b\n\x03key\x18\x01 \x01(\t\x12\r\n\x05value\x18\x02 \x01(\x03:\x02\x38\x01\"&\n\x10SendManyResponse\x12\x12\n\x04txid\x18\x01 \x01(\tR\x04txid\"0\n\x10SendCoinsRequest\x12\x0c\n\x04\x61\x64\x64r\x18\x01 \x01(\t\x12\x0e\n\x06\x61mount\x18\x02 \x01(\x03\"\'\n\x11SendCoinsResponse\x12\x12\n\x04txid\x18\x01 \x01(\tR\x04txid\"\x98\x01\n\x11NewAddressRequest\x12\x32\n\x04type\x18\x01 \x01(\x0e\x32$.lnrpc.NewAddressRequest.AddressType\"O\n\x0b\x41\x64\x64ressType\x12\x17\n\x13WITNESS_PUBKEY_HASH\x10\x00\x12\x16\n\x12NESTED_PUBKEY_HASH\x10\x01\x12\x0f\n\x0bPUBKEY_HASH\x10\x02\"\x1a\n\x18NewWitnessAddressRequest\".\n\x12NewAddressResponse\x12\x18\n\x07\x61\x64\x64ress\x18\x01 \x01(\tR\x07\x61\x64\x64ress\"&\n\x12SignMessageRequest\x12\x10\n\x03msg\x18\x01 \x01(\x0cR\x03msg\"3\n\x13SignMessageResponse\x12\x1c\n\tsignature\x18\x01 \x01(\tR\tsignature\"F\n\x14VerifyMessageRequest\x12\x10\n\x03msg\x18\x01 \x01(\x0cR\x03msg\x12\x1c\n\tsignature\x18\x02 \x01(\tR\tsignature\"E\n\x15VerifyMessageResponse\x12\x14\n\x05valid\x18\x01 \x01(\x08R\x05valid\x12\x16\n\x06pubkey\x18\x02 \x01(\tR\x06pubkey\"I\n\x12\x43onnectPeerRequest\x12%\n\x04\x61\x64\x64r\x18\x01 \x01(\x0b\x32\x17.lnrpc.LightningAddress\x12\x0c\n\x04perm\x18\x02 \x01(\x08\"/\n\x13\x43onnectPeerResponse\x12\x18\n\x07peer_id\x18\x01 \x01(\x05R\x07peer_id\"1\n\x15\x44isconnectPeerRequest\x12\x18\n\x07pub_key\x18\x01 \x01(\tR\x07pub_key\"\x18\n\x16\x44isconnectPeerResponse\"\xb2\x01\n\x04HTLC\x12\x1a\n\x08incoming\x18\x01 \x01(\x08R\x08incoming\x12\x16\n\x06\x61mount\x18\x02 \x01(\x03R\x06\x61mount\x12\x1c\n\thash_lock\x18\x03 \x01(\x0cR\thash_lock\x12,\n\x11\x65xpiration_height\x18\x04 \x01(\rR\x11\x65xpiration_height\x12*\n\x10revocation_delay\x18\x05 \x01(\rR\x10revocation_delay\"\xcc\x04\n\rActiveChannel\x12\x16\n\x06\x61\x63tive\x18\x01 \x01(\x08R\x06\x61\x63tive\x12$\n\rremote_pubkey\x18\x02 \x01(\tR\rremote_pubkey\x12$\n\rchannel_point\x18\x03 \x01(\tR\rchannel_point\x12\x18\n\x07\x63han_id\x18\x04 \x01(\x04R\x07\x63han_id\x12\x1a\n\x08\x63\x61pacity\x18\x05 \x01(\x03R\x08\x63\x61pacity\x12$\n\rlocal_balance\x18\x06 \x01(\x03R\rlocal_balance\x12&\n\x0eremote_balance\x18\x07 \x01(\x03R\x0eremote_balance\x12\x1e\n\ncommit_fee\x18\x08 \x01(\x03R\ncommit_fee\x12$\n\rcommit_weight\x18\t \x01(\x03R\rcommit_weight\x12\x1e\n\nfee_per_kw\x18\n \x01(\x03R\nfee_per_kw\x12,\n\x11unsettled_balance\x18\x0b \x01(\x03R\x11unsettled_balance\x12\x30\n\x13total_satoshis_sent\x18\x0c \x01(\x03R\x13total_satoshis_sent\x12\x38\n\x17total_satoshis_received\x18\r \x01(\x03R\x17total_satoshis_received\x12 \n\x0bnum_updates\x18\x0e \x01(\x04R\x0bnum_updates\x12\x31\n\rpending_htlcs\x18\x0f \x03(\x0b\x32\x0b.lnrpc.HTLCR\rpending_htlcs\"\x15\n\x13ListChannelsRequest\"H\n\x14ListChannelsResponse\x12\x30\n\x08\x63hannels\x18\x0b \x03(\x0b\x32\x14.lnrpc.ActiveChannelR\x08\x63hannels\"\x84\x02\n\x04Peer\x12\x18\n\x07pub_key\x18\x01 \x01(\tR\x07pub_key\x12\x18\n\x07peer_id\x18\x02 \x01(\x05R\x07peer_id\x12\x18\n\x07\x61\x64\x64ress\x18\x03 \x01(\tR\x07\x61\x64\x64ress\x12\x1e\n\nbytes_sent\x18\x04 \x01(\x04R\nbytes_sent\x12\x1e\n\nbytes_recv\x18\x05 \x01(\x04R\nbytes_recv\x12\x1a\n\x08sat_sent\x18\x06 \x01(\x03R\x08sat_sent\x12\x1a\n\x08sat_recv\x18\x07 \x01(\x03R\x08sat_recv\x12\x18\n\x07inbound\x18\x08 \x01(\x08R\x07inbound\x12\x1c\n\tping_time\x18\t \x01(\x03R\tping_time\"\x12\n\x10ListPeersRequest\"6\n\x11ListPeersResponse\x12!\n\x05peers\x18\x01 \x03(\x0b\x32\x0b.lnrpc.PeerR\x05peers\"\x10\n\x0eGetInfoRequest\"\xf5\x02\n\x0fGetInfoResponse\x12(\n\x0fidentity_pubkey\x18\x01 \x01(\tR\x0fidentity_pubkey\x12\x14\n\x05\x61lias\x18\x02 \x01(\tR\x05\x61lias\x12\x32\n\x14num_pending_channels\x18\x03 \x01(\rR\x14num_pending_channels\x12\x30\n\x13num_active_channels\x18\x04 \x01(\rR\x13num_active_channels\x12\x1c\n\tnum_peers\x18\x05 \x01(\rR\tnum_peers\x12\"\n\x0c\x62lock_height\x18\x06 \x01(\rR\x0c\x62lock_height\x12\x1e\n\nblock_hash\x18\x08 \x01(\tR\nblock_hash\x12(\n\x0fsynced_to_chain\x18\t \x01(\x08R\x0fsynced_to_chain\x12\x18\n\x07testnet\x18\n \x01(\x08R\x07testnet\x12\x16\n\x06\x63hains\x18\x0b \x03(\tR\x06\x63hains\"U\n\x12\x43onfirmationUpdate\x12\x11\n\tblock_sha\x18\x01 \x01(\x0c\x12\x14\n\x0c\x62lock_height\x18\x02 \x01(\x05\x12\x16\n\x0enum_confs_left\x18\x03 \x01(\r\"N\n\x11\x43hannelOpenUpdate\x12\x39\n\rchannel_point\x18\x01 \x01(\x0b\x32\x13.lnrpc.ChannelPointR\rchannel_point\"R\n\x12\x43hannelCloseUpdate\x12\"\n\x0c\x63losing_txid\x18\x01 \x01(\x0cR\x0c\x63losing_txid\x12\x18\n\x07success\x18\x02 \x01(\x08R\x07success\"d\n\x13\x43loseChannelRequest\x12*\n\rchannel_point\x18\x01 \x01(\x0b\x32\x13.lnrpc.ChannelPoint\x12\x12\n\ntime_limit\x18\x02 \x01(\x03\x12\r\n\x05\x66orce\x18\x03 \x01(\x08\"\xd9\x01\n\x11\x43loseStatusUpdate\x12<\n\rclose_pending\x18\x01 \x01(\x0b\x32\x14.lnrpc.PendingUpdateH\x00R\rclose_pending\x12?\n\x0c\x63onfirmation\x18\x02 \x01(\x0b\x32\x19.lnrpc.ConfirmationUpdateH\x00R\x0c\x63onfirmation\x12;\n\nchan_close\x18\x03 \x01(\x0b\x32\x19.lnrpc.ChannelCloseUpdateH\x00R\nchan_closeB\x08\n\x06update\"G\n\rPendingUpdate\x12\x12\n\x04txid\x18\x01 \x01(\x0cR\x04txid\x12\"\n\x0coutput_index\x18\x02 \x01(\rR\x0coutput_index\"\xfc\x01\n\x12OpenChannelRequest\x12&\n\x0etarget_peer_id\x18\x01 \x01(\x05R\x0etarget_peer_id\x12 \n\x0bnode_pubkey\x18\x02 \x01(\x0cR\x0bnode_pubkey\x12.\n\x12node_pubkey_string\x18\x03 \x01(\tR\x12node_pubkey_string\x12\x32\n\x14local_funding_amount\x18\x04 \x01(\x03R\x14local_funding_amount\x12\x1a\n\x08push_sat\x18\x05 \x01(\x03R\x08push_sat\x12\x1c\n\tnum_confs\x18\x06 \x01(\rR\tnum_confs\"\xd3\x01\n\x10OpenStatusUpdate\x12:\n\x0c\x63han_pending\x18\x01 \x01(\x0b\x32\x14.lnrpc.PendingUpdateH\x00R\x0c\x63han_pending\x12?\n\x0c\x63onfirmation\x18\x02 \x01(\x0b\x32\x19.lnrpc.ConfirmationUpdateH\x00R\x0c\x63onfirmation\x12\x38\n\tchan_open\x18\x03 \x01(\x0b\x32\x18.lnrpc.ChannelOpenUpdateH\x00R\tchan_openB\x08\n\x06update\"\x17\n\x15PendingChannelRequest\"\xfe\t\n\x16PendingChannelResponse\x12\x30\n\x13total_limbo_balance\x18\x01 \x01(\x03R\x13total_limbo_balance\x12\x66\n\x15pending_open_channels\x18\x02 \x03(\x0b\x32\x30.lnrpc.PendingChannelResponse.PendingOpenChannelR\x15pending_open_channels\x12g\n\x18pending_closing_channels\x18\x03 \x03(\x0b\x32+.lnrpc.PendingChannelResponse.ClosedChannelR\x18pending_closing_channels\x12x\n\x1epending_force_closing_channels\x18\x04 \x03(\x0b\x32\x30.lnrpc.PendingChannelResponse.ForceClosedChannelR\x1epending_force_closing_channels\x1a\xca\x01\n\x0ePendingChannel\x12(\n\x0fremote_node_pub\x18\x01 \x01(\tR\x0fremote_node_pub\x12$\n\rchannel_point\x18\x02 \x01(\tR\rchannel_point\x12\x1a\n\x08\x63\x61pacity\x18\x03 \x01(\x03R\x08\x63\x61pacity\x12$\n\rlocal_balance\x18\x04 \x01(\x03R\rlocal_balance\x12&\n\x0eremote_balance\x18\x05 \x01(\x03R\x0eremote_balance\x1a\xa0\x02\n\x12PendingOpenChannel\x12\x46\n\x07\x63hannel\x18\x01 \x01(\x0b\x32,.lnrpc.PendingChannelResponse.PendingChannelR\x07\x63hannel\x12\x30\n\x13\x63onfirmation_height\x18\x02 \x01(\rR\x13\x63onfirmation_height\x12*\n\x10\x62locks_till_open\x18\x03 \x01(\rR\x10\x62locks_till_open\x12\x1e\n\ncommit_fee\x18\x04 \x01(\x03R\ncommit_fee\x12$\n\rcommit_weight\x18\x05 \x01(\x03R\rcommit_weight\x12\x1e\n\nfee_per_kw\x18\x06 \x01(\x03R\nfee_per_kw\x1ar\n\rClosedChannel\x12=\n\x07\x63hannel\x18\x01 \x01(\x0b\x32,.lnrpc.PendingChannelResponse.PendingChannel\x12\"\n\x0c\x63losing_txid\x18\x02 \x01(\tR\x0c\x63losing_txid\x1a\x82\x02\n\x12\x46orceClosedChannel\x12\x46\n\x07\x63hannel\x18\x01 \x01(\x0b\x32,.lnrpc.PendingChannelResponse.PendingChannelR\x07\x63hannel\x12\"\n\x0c\x63losing_txid\x18\x02 \x01(\tR\x0c\x63losing_txid\x12$\n\rlimbo_balance\x18\x03 \x01(\x03R\rlimbo_balance\x12(\n\x0fmaturity_height\x18\x04 \x01(\rR\x0fmaturity_height\x12\x30\n\x13\x62locks_til_maturity\x18\x05 \x01(\rR\x13\x62locks_til_maturity\",\n\x14WalletBalanceRequest\x12\x14\n\x0cwitness_only\x18\x01 \x01(\x08\"1\n\x15WalletBalanceResponse\x12\x18\n\x07\x62\x61lance\x18\x01 \x01(\x03R\x07\x62\x61lance\"\x17\n\x15\x43hannelBalanceRequest\"2\n\x16\x43hannelBalanceResponse\x12\x18\n\x07\x62\x61lance\x18\x01 \x01(\x03R\x07\x62\x61lance\"2\n\x12QueryRoutesRequest\x12\x0f\n\x07pub_key\x18\x01 \x01(\t\x12\x0b\n\x03\x61mt\x18\x02 \x01(\x03\";\n\x13QueryRoutesResponse\x12$\n\x06routes\x18\x01 \x03(\x0b\x32\x0c.lnrpc.RouteR\x06routes\"\x7f\n\x03Hop\x12\x18\n\x07\x63han_id\x18\x01 \x01(\x04R\x07\x63han_id\x12$\n\rchan_capacity\x18\x02 \x01(\x03R\rchan_capacity\x12&\n\x0e\x61mt_to_forward\x18\x03 \x01(\x03R\x0e\x61mt_to_forward\x12\x10\n\x03\x66\x65\x65\x18\x04 \x01(\x03R\x03\x66\x65\x65\"\x8f\x01\n\x05Route\x12(\n\x0ftotal_time_lock\x18\x01 \x01(\rR\x0ftotal_time_lock\x12\x1e\n\ntotal_fees\x18\x02 \x01(\x03R\ntotal_fees\x12\x1c\n\ttotal_amt\x18\x03 \x01(\x03R\ttotal_amt\x12\x1e\n\x04hops\x18\x04 \x03(\x0b\x32\n.lnrpc.HopR\x04hops\"\"\n\x0fNodeInfoRequest\x12\x0f\n\x07pub_key\x18\x01 \x01(\t\"\x80\x01\n\x08NodeInfo\x12(\n\x04node\x18\x01 \x01(\x0b\x32\x14.lnrpc.LightningNodeR\x04node\x12\"\n\x0cnum_channels\x18\x02 \x01(\rR\x0cnum_channels\x12&\n\x0etotal_capacity\x18\x03 \x01(\x03R\x0etotal_capacity\"\x93\x01\n\rLightningNode\x12 \n\x0blast_update\x18\x01 \x01(\rR\x0blast_update\x12\x18\n\x07pub_key\x18\x02 \x01(\tR\x07pub_key\x12\x14\n\x05\x61lias\x18\x03 \x01(\tR\x05\x61lias\x12\x30\n\taddresses\x18\x04 \x03(\x0b\x32\x12.lnrpc.NodeAddressR\taddresses\";\n\x0bNodeAddress\x12\x18\n\x07network\x18\x01 \x01(\tR\x07network\x12\x12\n\x04\x61\x64\x64r\x18\x02 \x01(\tR\x04\x61\x64\x64r\"\xad\x01\n\rRoutingPolicy\x12(\n\x0ftime_lock_delta\x18\x01 \x01(\rR\x0ftime_lock_delta\x12\x1a\n\x08min_htlc\x18\x02 \x01(\x03R\x08min_htlc\x12$\n\rfee_base_msat\x18\x03 \x01(\x03R\rfee_base_msat\x12\x30\n\x13\x66\x65\x65_rate_milli_msat\x18\x04 \x01(\x03R\x13\x66\x65\x65_rate_milli_msat\"\xbb\x02\n\x0b\x43hannelEdge\x12\x1e\n\nchannel_id\x18\x01 \x01(\x04R\nchannel_id\x12\x1e\n\nchan_point\x18\x02 \x01(\tR\nchan_point\x12 \n\x0blast_update\x18\x03 \x01(\rR\x0blast_update\x12\x1c\n\tnode1_pub\x18\x04 \x01(\tR\tnode1_pub\x12\x1c\n\tnode2_pub\x18\x05 \x01(\tR\tnode2_pub\x12\x1a\n\x08\x63\x61pacity\x18\x06 \x01(\x03R\x08\x63\x61pacity\x12\x38\n\x0cnode1_policy\x18\x07 \x01(\x0b\x32\x14.lnrpc.RoutingPolicyR\x0cnode1_policy\x12\x38\n\x0cnode2_policy\x18\x08 \x01(\x0b\x32\x14.lnrpc.RoutingPolicyR\x0cnode2_policy\"\x15\n\x13\x43hannelGraphRequest\"d\n\x0c\x43hannelGraph\x12*\n\x05nodes\x18\x01 \x03(\x0b\x32\x14.lnrpc.LightningNodeR\x05nodes\x12(\n\x05\x65\x64ges\x18\x02 \x03(\x0b\x32\x12.lnrpc.ChannelEdgeR\x05\x65\x64ges\"\"\n\x0f\x43hanInfoRequest\x12\x0f\n\x07\x63han_id\x18\x01 \x01(\x04\"\x14\n\x12NetworkInfoRequest\"\x83\x03\n\x0bNetworkInfo\x12&\n\x0egraph_diameter\x18\x01 \x01(\rR\x0egraph_diameter\x12&\n\x0e\x61vg_out_degree\x18\x02 \x01(\x01R\x0e\x61vg_out_degree\x12&\n\x0emax_out_degree\x18\x03 \x01(\rR\x0emax_out_degree\x12\x1c\n\tnum_nodes\x18\x04 \x01(\rR\tnum_nodes\x12\"\n\x0cnum_channels\x18\x05 \x01(\rR\x0cnum_channels\x12\x36\n\x16total_network_capacity\x18\x06 \x01(\x03R\x16total_network_capacity\x12*\n\x10\x61vg_channel_size\x18\x07 \x01(\x01R\x10\x61vg_channel_size\x12*\n\x10min_channel_size\x18\x08 \x01(\x03R\x10min_channel_size\x12*\n\x10max_channel_size\x18\t \x01(\x03R\x10max_channel_size\"\r\n\x0bStopRequest\"\x0e\n\x0cStopResponse\"\x1b\n\x19GraphTopologySubscription\"\xa3\x01\n\x13GraphTopologyUpdate\x12\'\n\x0cnode_updates\x18\x01 \x03(\x0b\x32\x11.lnrpc.NodeUpdate\x12\x31\n\x0f\x63hannel_updates\x18\x02 \x03(\x0b\x32\x18.lnrpc.ChannelEdgeUpdate\x12\x30\n\x0c\x63losed_chans\x18\x03 \x03(\x0b\x32\x1a.lnrpc.ClosedChannelUpdate\"]\n\nNodeUpdate\x12\x11\n\taddresses\x18\x01 \x03(\t\x12\x14\n\x0cidentity_key\x18\x02 \x01(\t\x12\x17\n\x0fglobal_features\x18\x03 \x01(\x0c\x12\r\n\x05\x61lias\x18\x04 \x01(\t\"\xc0\x01\n\x11\x43hannelEdgeUpdate\x12\x0f\n\x07\x63han_id\x18\x01 \x01(\x04\x12\'\n\nchan_point\x18\x02 \x01(\x0b\x32\x13.lnrpc.ChannelPoint\x12\x10\n\x08\x63\x61pacity\x18\x03 \x01(\x03\x12,\n\x0erouting_policy\x18\x04 \x01(\x0b\x32\x14.lnrpc.RoutingPolicy\x12\x18\n\x10\x61\x64vertising_node\x18\x05 \x01(\t\x12\x17\n\x0f\x63onnecting_node\x18\x06 \x01(\t\"x\n\x13\x43losedChannelUpdate\x12\x0f\n\x07\x63han_id\x18\x01 \x01(\x04\x12\x10\n\x08\x63\x61pacity\x18\x02 \x01(\x03\x12\x15\n\rclosed_height\x18\x03 \x01(\r\x12\'\n\nchan_point\x18\x04 \x01(\x0b\x32\x13.lnrpc.ChannelPoint\"$\n\x0fSetAliasRequest\x12\x11\n\tnew_alias\x18\x01 \x01(\t\"\x12\n\x10SetAliasResponse\"\x91\x02\n\x07Invoice\x12\x12\n\x04memo\x18\x01 \x01(\tR\x04memo\x12\x18\n\x07receipt\x18\x02 \x01(\x0cR\x07receipt\x12\x1e\n\nr_preimage\x18\x03 \x01(\x0cR\nr_preimage\x12\x16\n\x06r_hash\x18\x04 \x01(\x0cR\x06r_hash\x12\x14\n\x05value\x18\x05 \x01(\x03R\x05value\x12\x18\n\x07settled\x18\x06 \x01(\x08R\x07settled\x12$\n\rcreation_date\x18\x07 \x01(\x03R\rcreation_date\x12 \n\x0bsettle_date\x18\x08 \x01(\x03R\x0bsettle_date\x12(\n\x0fpayment_request\x18\t \x01(\tR\x0fpayment_request\"V\n\x12\x41\x64\x64InvoiceResponse\x12\x16\n\x06r_hash\x18\x01 \x01(\x0cR\x06r_hash\x12(\n\x0fpayment_request\x18\x02 \x01(\tR\x0fpayment_request\"E\n\x0bPaymentHash\x12\x1e\n\nr_hash_str\x18\x01 \x01(\tR\nr_hash_str\x12\x16\n\x06r_hash\x18\x02 \x01(\x0cR\x06r_hash\"*\n\x12ListInvoiceRequest\x12\x14\n\x0cpending_only\x18\x01 \x01(\x08\"A\n\x13ListInvoiceResponse\x12*\n\x08invoices\x18\x01 \x03(\x0b\x32\x0e.lnrpc.InvoiceR\x08invoices\"\x15\n\x13InvoiceSubscription\"\x8f\x01\n\x07Payment\x12\"\n\x0cpayment_hash\x18\x01 \x01(\tR\x0cpayment_hash\x12\x14\n\x05value\x18\x02 \x01(\x03R\x05value\x12$\n\rcreation_date\x18\x03 \x01(\x03R\rcreation_date\x12\x12\n\x04path\x18\x04 \x03(\tR\x04path\x12\x10\n\x03\x66\x65\x65\x18\x05 \x01(\x03R\x03\x66\x65\x65\"\x15\n\x13ListPaymentsRequest\"B\n\x14ListPaymentsResponse\x12*\n\x08payments\x18\x01 \x03(\x0b\x32\x0e.lnrpc.PaymentR\x08payments\"\x1a\n\x18\x44\x65leteAllPaymentsRequest\"\x1b\n\x19\x44\x65leteAllPaymentsResponse\"5\n\x11\x44\x65\x62ugLevelRequest\x12\x0c\n\x04show\x18\x01 \x01(\x08\x12\x12\n\nlevel_spec\x18\x02 \x01(\t\"6\n\x12\x44\x65\x62ugLevelResponse\x12 \n\x0bsub_systems\x18\x01 \x01(\tR\x0bsub_systems\"\x1f\n\x0cPayReqString\x12\x0f\n\x07pay_req\x18\x01 \x01(\t\"r\n\x06PayReq\x12 \n\x0b\x64\x65stination\x18\x01 \x01(\tR\x0b\x64\x65stination\x12\"\n\x0cpayment_hash\x18\x02 \x01(\tR\x0cpayment_hash\x12\"\n\x0cnum_satoshis\x18\x03 \x01(\x03R\x0cnum_satoshis2\x85\x1a\n\tLightning\x12j\n\rWalletBalance\x12\x1b.lnrpc.WalletBalanceRequest\x1a\x1c.lnrpc.WalletBalanceResponse\"\x1e\x82\xd3\xe4\x93\x02\x18\x12\x16/v1/balance/blockchain\x12k\n\x0e\x43hannelBalance\x12\x1c.lnrpc.ChannelBalanceRequest\x1a\x1d.lnrpc.ChannelBalanceResponse\"\x1c\x82\xd3\xe4\x93\x02\x16\x12\x14/v1/balance/channels\x12\x65\n\x0fGetTransactions\x12\x1d.lnrpc.GetTransactionsRequest\x1a\x19.lnrpc.TransactionDetails\"\x18\x82\xd3\xe4\x93\x02\x12\x12\x10/v1/transactions\x12[\n\tSendCoins\x12\x17.lnrpc.SendCoinsRequest\x1a\x18.lnrpc.SendCoinsResponse\"\x1b\x82\xd3\xe4\x93\x02\x15\"\x10/v1/transactions:\x01*\x12L\n\x15SubscribeTransactions\x12\x1d.lnrpc.GetTransactionsRequest\x1a\x12.lnrpc.Transaction0\x01\x12;\n\x08SendMany\x12\x16.lnrpc.SendManyRequest\x1a\x17.lnrpc.SendManyResponse\x12\x41\n\nNewAddress\x12\x18.lnrpc.NewAddressRequest\x1a\x19.lnrpc.NewAddressResponse\x12g\n\x11NewWitnessAddress\x12\x1f.lnrpc.NewWitnessAddressRequest\x1a\x19.lnrpc.NewAddressResponse\"\x16\x82\xd3\xe4\x93\x02\x10\x12\x0e/v1/newaddress\x12\x44\n\x0bSignMessage\x12\x19.lnrpc.SignMessageRequest\x1a\x1a.lnrpc.SignMessageResponse\x12J\n\rVerifyMessage\x12\x1b.lnrpc.VerifyMessageRequest\x1a\x1c.lnrpc.VerifyMessageResponse\x12Z\n\x0b\x43onnectPeer\x12\x19.lnrpc.ConnectPeerRequest\x1a\x1a.lnrpc.ConnectPeerResponse\"\x14\x82\xd3\xe4\x93\x02\x0e\"\t/v1/peers:\x01*\x12j\n\x0e\x44isconnectPeer\x12\x1c.lnrpc.DisconnectPeerRequest\x1a\x1d.lnrpc.DisconnectPeerResponse\"\x1b\x82\xd3\xe4\x93\x02\x15*\x13/v1/peers/{pub_key}\x12Q\n\tListPeers\x12\x17.lnrpc.ListPeersRequest\x1a\x18.lnrpc.ListPeersResponse\"\x11\x82\xd3\xe4\x93\x02\x0b\x12\t/v1/peers\x12M\n\x07GetInfo\x12\x15.lnrpc.GetInfoRequest\x1a\x16.lnrpc.GetInfoResponse\"\x13\x82\xd3\xe4\x93\x02\r\x12\x0b/v1/getinfo\x12l\n\x0fPendingChannels\x12\x1c.lnrpc.PendingChannelRequest\x1a\x1d.lnrpc.PendingChannelResponse\"\x1c\x82\xd3\xe4\x93\x02\x16\x12\x14/v1/channels/pending\x12]\n\x0cListChannels\x12\x1a.lnrpc.ListChannelsRequest\x1a\x1b.lnrpc.ListChannelsResponse\"\x14\x82\xd3\xe4\x93\x02\x0e\x12\x0c/v1/channels\x12Z\n\x0fOpenChannelSync\x12\x19.lnrpc.OpenChannelRequest\x1a\x13.lnrpc.ChannelPoint\"\x17\x82\xd3\xe4\x93\x02\x11\"\x0c/v1/channels:\x01*\x12\x43\n\x0bOpenChannel\x12\x19.lnrpc.OpenChannelRequest\x1a\x17.lnrpc.OpenStatusUpdate0\x01\x12\x9e\x01\n\x0c\x43loseChannel\x12\x1a.lnrpc.CloseChannelRequest\x1a\x18.lnrpc.CloseStatusUpdate\"V\x82\xd3\xe4\x93\x02P*N/v1/channels/{channel_point.funding_txid}/{channel_point.output_index}/{force}0\x01\x12:\n\x0bSendPayment\x12\x12.lnrpc.SendRequest\x1a\x13.lnrpc.SendResponse(\x01\x30\x01\x12`\n\x0fSendPaymentSync\x12\x12.lnrpc.SendRequest\x1a\x13.lnrpc.SendResponse\"$\x82\xd3\xe4\x93\x02\x1e\"\x19/v1/channels/transactions:\x01*\x12P\n\nAddInvoice\x12\x0e.lnrpc.Invoice\x1a\x19.lnrpc.AddInvoiceResponse\"\x17\x82\xd3\xe4\x93\x02\x11\"\x0c/v1/invoices:\x01*\x12j\n\x0cListInvoices\x12\x19.lnrpc.ListInvoiceRequest\x1a\x1a.lnrpc.ListInvoiceResponse\"#\x82\xd3\xe4\x93\x02\x1d\x12\x1b/v1/invoices/{pending_only}\x12V\n\rLookupInvoice\x12\x12.lnrpc.PaymentHash\x1a\x0e.lnrpc.Invoice\"!\x82\xd3\xe4\x93\x02\x1b\x12\x19/v1/invoices/{r_hash_str}\x12\x61\n\x11SubscribeInvoices\x12\x1a.lnrpc.InvoiceSubscription\x1a\x0e.lnrpc.Invoice\"\x1e\x82\xd3\xe4\x93\x02\x18\x12\x16/v1/invoices/subscribe0\x01\x12P\n\x0c\x44\x65\x63odePayReq\x12\x13.lnrpc.PayReqString\x1a\r.lnrpc.PayReq\"\x1c\x82\xd3\xe4\x93\x02\x16\x12\x14/v1/payreq/{pay_req}\x12]\n\x0cListPayments\x12\x1a.lnrpc.ListPaymentsRequest\x1a\x1b.lnrpc.ListPaymentsResponse\"\x14\x82\xd3\xe4\x93\x02\x0e\x12\x0c/v1/payments\x12l\n\x11\x44\x65leteAllPayments\x12\x1f.lnrpc.DeleteAllPaymentsRequest\x1a .lnrpc.DeleteAllPaymentsResponse\"\x14\x82\xd3\xe4\x93\x02\x0e*\x0c/v1/payments\x12S\n\rDescribeGraph\x12\x1a.lnrpc.ChannelGraphRequest\x1a\x13.lnrpc.ChannelGraph\"\x11\x82\xd3\xe4\x93\x02\x0b\x12\t/v1/graph\x12[\n\x0bGetChanInfo\x12\x16.lnrpc.ChanInfoRequest\x1a\x12.lnrpc.ChannelEdge\" \x82\xd3\xe4\x93\x02\x1a\x12\x18/v1/graph/edge/{chan_id}\x12X\n\x0bGetNodeInfo\x12\x16.lnrpc.NodeInfoRequest\x1a\x0f.lnrpc.NodeInfo\" \x82\xd3\xe4\x93\x02\x1a\x12\x18/v1/graph/node/{pub_key}\x12n\n\x0bQueryRoutes\x12\x19.lnrpc.QueryRoutesRequest\x1a\x1a.lnrpc.QueryRoutesResponse\"(\x82\xd3\xe4\x93\x02\"\x12 /v1/graph/routes/{pub_key}/{amt}\x12W\n\x0eGetNetworkInfo\x12\x19.lnrpc.NetworkInfoRequest\x1a\x12.lnrpc.NetworkInfo\"\x16\x82\xd3\xe4\x93\x02\x10\x12\x0e/v1/graph/info\x12\x35\n\nStopDaemon\x12\x12.lnrpc.StopRequest\x1a\x13.lnrpc.StopResponse\x12W\n\x15SubscribeChannelGraph\x12 .lnrpc.GraphTopologySubscription\x1a\x1a.lnrpc.GraphTopologyUpdate0\x01\x12;\n\x08SetAlias\x12\x16.lnrpc.SetAliasRequest\x1a\x17.lnrpc.SetAliasResponse\x12\x41\n\nDebugLevel\x12\x18.lnrpc.DebugLevelRequest\x1a\x19.lnrpc.DebugLevelResponseb\x06proto3')
  ,
  dependencies=[google_dot_api_dot_annotations__pb2.DESCRIPTOR,])



_NEWADDRESSREQUEST_ADDRESSTYPE = _descriptor.EnumDescriptor(
  name='AddressType',
  full_name='lnrpc.NewAddressRequest.AddressType',
  filename=None,
  file=DESCRIPTOR,
  values=[
    _descriptor.EnumValueDescriptor(
      name='WITNESS_PUBKEY_HASH', index=0, number=0,
      options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='NESTED_PUBKEY_HASH', index=1, number=1,
      options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='PUBKEY_HASH', index=2, number=2,
      options=None,
      type=None),
  ],
  containing_type=None,
  options=None,
  serialized_start=1228,
  serialized_end=1307,
)
_sym_db.RegisterEnumDescriptor(_NEWADDRESSREQUEST_ADDRESSTYPE)


_TRANSACTION = _descriptor.Descriptor(
  name='Transaction',
  full_name='lnrpc.Transaction',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='tx_hash', full_name='lnrpc.Transaction.tx_hash', index=0,
      number=1, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None, json_name='tx_hash'),
    _descriptor.FieldDescriptor(
      name='amount', full_name='lnrpc.Transaction.amount', index=1,
      number=2, type=3, cpp_type=2, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None, json_name='amount'),
    _descriptor.FieldDescriptor(
      name='num_confirmations', full_name='lnrpc.Transaction.num_confirmations', index=2,
      number=3, type=5, cpp_type=1, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None, json_name='num_confirmations'),
    _descriptor.FieldDescriptor(
      name='block_hash', full_name='lnrpc.Transaction.block_hash', index=3,
      number=4, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None, json_name='block_hash'),
    _descriptor.FieldDescriptor(
      name='block_height', full_name='lnrpc.Transaction.block_height', index=4,
      number=5, type=5, cpp_type=1, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None, json_name='block_height'),
    _descriptor.FieldDescriptor(
      name='time_stamp', full_name='lnrpc.Transaction.time_stamp', index=5,
      number=6, type=3, cpp_type=2, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None, json_name='time_stamp'),
    _descriptor.FieldDescriptor(
      name='total_fees', full_name='lnrpc.Transaction.total_fees', index=6,
      number=7, type=3, cpp_type=2, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None, json_name='total_fees'),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=51,
  serialized_end=292,
)


_GETTRANSACTIONSREQUEST = _descriptor.Descriptor(
  name='GetTransactionsRequest',
  full_name='lnrpc.GetTransactionsRequest',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=294,
  serialized_end=318,
)


_TRANSACTIONDETAILS = _descriptor.Descriptor(
  name='TransactionDetails',
  full_name='lnrpc.TransactionDetails',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='transactions', full_name='lnrpc.TransactionDetails.transactions', index=0,
      number=1, type=11, cpp_type=10, label=3,
      has_default_value=False, default_value=[],
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None, json_name='transactions'),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=320,
  serialized_end=396,
)


_SENDREQUEST = _descriptor.Descriptor(
  name='SendRequest',
  full_name='lnrpc.SendRequest',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='dest', full_name='lnrpc.SendRequest.dest', index=0,
      number=1, type=12, cpp_type=9, label=1,
      has_default_value=False, default_value=_b(""),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='dest_string', full_name='lnrpc.SendRequest.dest_string', index=1,
      number=2, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='amt', full_name='lnrpc.SendRequest.amt', index=2,
      number=3, type=3, cpp_type=2, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='payment_hash', full_name='lnrpc.SendRequest.payment_hash', index=3,
      number=4, type=12, cpp_type=9, label=1,
      has_default_value=False, default_value=_b(""),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='payment_hash_string', full_name='lnrpc.SendRequest.payment_hash_string', index=4,
      number=5, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='payment_request', full_name='lnrpc.SendRequest.payment_request', index=5,
      number=6, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=399,
  serialized_end=536,
)


_SENDRESPONSE = _descriptor.Descriptor(
  name='SendResponse',
  full_name='lnrpc.SendResponse',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='payment_error', full_name='lnrpc.SendResponse.payment_error', index=0,
      number=1, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None, json_name='payment_error'),
    _descriptor.FieldDescriptor(
      name='payment_preimage', full_name='lnrpc.SendResponse.payment_preimage', index=1,
      number=2, type=12, cpp_type=9, label=1,
      has_default_value=False, default_value=_b(""),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None, json_name='payment_preimage'),
    _descriptor.FieldDescriptor(
      name='payment_route', full_name='lnrpc.SendResponse.payment_route', index=2,
      number=3, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None, json_name='payment_route'),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=539,
  serialized_end=687,
)


_CHANNELPOINT = _descriptor.Descriptor(
  name='ChannelPoint',
  full_name='lnrpc.ChannelPoint',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='funding_txid', full_name='lnrpc.ChannelPoint.funding_txid', index=0,
      number=1, type=12, cpp_type=9, label=1,
      has_default_value=False, default_value=_b(""),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None, json_name='funding_txid'),
    _descriptor.FieldDescriptor(
      name='funding_txid_str', full_name='lnrpc.ChannelPoint.funding_txid_str', index=1,
      number=2, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None, json_name='funding_txid_str'),
    _descriptor.FieldDescriptor(
      name='output_index', full_name='lnrpc.ChannelPoint.output_index', index=2,
      number=3, type=13, cpp_type=3, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None, json_name='output_index'),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=690,
  serialized_end=820,
)


_LIGHTNINGADDRESS = _descriptor.Descriptor(
  name='LightningAddress',
  full_name='lnrpc.LightningAddress',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='pubkey', full_name='lnrpc.LightningAddress.pubkey', index=0,
      number=1, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None, json_name='pubkey'),
    _descriptor.FieldDescriptor(
      name='host', full_name='lnrpc.LightningAddress.host', index=1,
      number=2, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None, json_name='host'),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=822,
  serialized_end=884,
)


_SENDMANYREQUEST_ADDRTOAMOUNTENTRY = _descriptor.Descriptor(
  name='AddrToAmountEntry',
  full_name='lnrpc.SendManyRequest.AddrToAmountEntry',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='key', full_name='lnrpc.SendManyRequest.AddrToAmountEntry.key', index=0,
      number=1, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='value', full_name='lnrpc.SendManyRequest.AddrToAmountEntry.value', index=1,
      number=2, type=3, cpp_type=2, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=_descriptor._ParseOptions(descriptor_pb2.MessageOptions(), _b('8\001')),
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=970,
  serialized_end=1021,
)

_SENDMANYREQUEST = _descriptor.Descriptor(
  name='SendManyRequest',
  full_name='lnrpc.SendManyRequest',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='AddrToAmount', full_name='lnrpc.SendManyRequest.AddrToAmount', index=0,
      number=1, type=11, cpp_type=10, label=3,
      has_default_value=False, default_value=[],
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
  ],
  extensions=[
  ],
  nested_types=[_SENDMANYREQUEST_ADDRTOAMOUNTENTRY, ],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=887,
  serialized_end=1021,
)


_SENDMANYRESPONSE = _descriptor.Descriptor(
  name='SendManyResponse',
  full_name='lnrpc.SendManyResponse',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='txid', full_name='lnrpc.SendManyResponse.txid', index=0,
      number=1, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None, json_name='txid'),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=1023,
  serialized_end=1061,
)


_SENDCOINSREQUEST = _descriptor.Descriptor(
  name='SendCoinsRequest',
  full_name='lnrpc.SendCoinsRequest',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='addr', full_name='lnrpc.SendCoinsRequest.addr', index=0,
      number=1, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='amount', full_name='lnrpc.SendCoinsRequest.amount', index=1,
      number=2, type=3, cpp_type=2, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=1063,
  serialized_end=1111,
)


_SENDCOINSRESPONSE = _descriptor.Descriptor(
  name='SendCoinsResponse',
  full_name='lnrpc.SendCoinsResponse',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='txid', full_name='lnrpc.SendCoinsResponse.txid', index=0,
      number=1, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None, json_name='txid'),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=1113,
  serialized_end=1152,
)


_NEWADDRESSREQUEST = _descriptor.Descriptor(
  name='NewAddressRequest',
  full_name='lnrpc.NewAddressRequest',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='type', full_name='lnrpc.NewAddressRequest.type', index=0,
      number=1, type=14, cpp_type=8, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
    _NEWADDRESSREQUEST_ADDRESSTYPE,
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=1155,
  serialized_end=1307,
)


_NEWWITNESSADDRESSREQUEST = _descriptor.Descriptor(
  name='NewWitnessAddressRequest',
  full_name='lnrpc.NewWitnessAddressRequest',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=1309,
  serialized_end=1335,
)


_NEWADDRESSRESPONSE = _descriptor.Descriptor(
  name='NewAddressResponse',
  full_name='lnrpc.NewAddressResponse',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='address', full_name='lnrpc.NewAddressResponse.address', index=0,
      number=1, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None, json_name='address'),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=1337,
  serialized_end=1383,
)


_SIGNMESSAGEREQUEST = _descriptor.Descriptor(
  name='SignMessageRequest',
  full_name='lnrpc.SignMessageRequest',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='msg', full_name='lnrpc.SignMessageRequest.msg', index=0,
      number=1, type=12, cpp_type=9, label=1,
      has_default_value=False, default_value=_b(""),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None, json_name='msg'),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=1385,
  serialized_end=1423,
)


_SIGNMESSAGERESPONSE = _descriptor.Descriptor(
  name='SignMessageResponse',
  full_name='lnrpc.SignMessageResponse',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='signature', full_name='lnrpc.SignMessageResponse.signature', index=0,
      number=1, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None, json_name='signature'),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=1425,
  serialized_end=1476,
)


_VERIFYMESSAGEREQUEST = _descriptor.Descriptor(
  name='VerifyMessageRequest',
  full_name='lnrpc.VerifyMessageRequest',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='msg', full_name='lnrpc.VerifyMessageRequest.msg', index=0,
      number=1, type=12, cpp_type=9, label=1,
      has_default_value=False, default_value=_b(""),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None, json_name='msg'),
    _descriptor.FieldDescriptor(
      name='signature', full_name='lnrpc.VerifyMessageRequest.signature', index=1,
      number=2, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None, json_name='signature'),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=1478,
  serialized_end=1548,
)


_VERIFYMESSAGERESPONSE = _descriptor.Descriptor(
  name='VerifyMessageResponse',
  full_name='lnrpc.VerifyMessageResponse',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='valid', full_name='lnrpc.VerifyMessageResponse.valid', index=0,
      number=1, type=8, cpp_type=7, label=1,
      has_default_value=False, default_value=False,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None, json_name='valid'),
    _descriptor.FieldDescriptor(
      name='pubkey', full_name='lnrpc.VerifyMessageResponse.pubkey', index=1,
      number=2, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None, json_name='pubkey'),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=1550,
  serialized_end=1619,
)


_CONNECTPEERREQUEST = _descriptor.Descriptor(
  name='ConnectPeerRequest',
  full_name='lnrpc.ConnectPeerRequest',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='addr', full_name='lnrpc.ConnectPeerRequest.addr', index=0,
      number=1, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='perm', full_name='lnrpc.ConnectPeerRequest.perm', index=1,
      number=2, type=8, cpp_type=7, label=1,
      has_default_value=False, default_value=False,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=1621,
  serialized_end=1694,
)


_CONNECTPEERRESPONSE = _descriptor.Descriptor(
  name='ConnectPeerResponse',
  full_name='lnrpc.ConnectPeerResponse',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='peer_id', full_name='lnrpc.ConnectPeerResponse.peer_id', index=0,
      number=1, type=5, cpp_type=1, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None, json_name='peer_id'),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=1696,
  serialized_end=1743,
)


_DISCONNECTPEERREQUEST = _descriptor.Descriptor(
  name='DisconnectPeerRequest',
  full_name='lnrpc.DisconnectPeerRequest',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='pub_key', full_name='lnrpc.DisconnectPeerRequest.pub_key', index=0,
      number=1, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None, json_name='pub_key'),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=1745,
  serialized_end=1794,
)


_DISCONNECTPEERRESPONSE = _descriptor.Descriptor(
  name='DisconnectPeerResponse',
  full_name='lnrpc.DisconnectPeerResponse',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=1796,
  serialized_end=1820,
)


_HTLC = _descriptor.Descriptor(
  name='HTLC',
  full_name='lnrpc.HTLC',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='incoming', full_name='lnrpc.HTLC.incoming', index=0,
      number=1, type=8, cpp_type=7, label=1,
      has_default_value=False, default_value=False,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None, json_name='incoming'),
    _descriptor.FieldDescriptor(
      name='amount', full_name='lnrpc.HTLC.amount', index=1,
      number=2, type=3, cpp_type=2, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None, json_name='amount'),
    _descriptor.FieldDescriptor(
      name='hash_lock', full_name='lnrpc.HTLC.hash_lock', index=2,
      number=3, type=12, cpp_type=9, label=1,
      has_default_value=False, default_value=_b(""),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None, json_name='hash_lock'),
    _descriptor.FieldDescriptor(
      name='expiration_height', full_name='lnrpc.HTLC.expiration_height', index=3,
      number=4, type=13, cpp_type=3, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None, json_name='expiration_height'),
    _descriptor.FieldDescriptor(
      name='revocation_delay', full_name='lnrpc.HTLC.revocation_delay', index=4,
      number=5, type=13, cpp_type=3, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None, json_name='revocation_delay'),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=1823,
  serialized_end=2001,
)


_ACTIVECHANNEL = _descriptor.Descriptor(
  name='ActiveChannel',
  full_name='lnrpc.ActiveChannel',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='active', full_name='lnrpc.ActiveChannel.active', index=0,
      number=1, type=8, cpp_type=7, label=1,
      has_default_value=False, default_value=False,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None, json_name='active'),
    _descriptor.FieldDescriptor(
      name='remote_pubkey', full_name='lnrpc.ActiveChannel.remote_pubkey', index=1,
      number=2, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None, json_name='remote_pubkey'),
    _descriptor.FieldDescriptor(
      name='channel_point', full_name='lnrpc.ActiveChannel.channel_point', index=2,
      number=3, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None, json_name='channel_point'),
    _descriptor.FieldDescriptor(
      name='chan_id', full_name='lnrpc.ActiveChannel.chan_id', index=3,
      number=4, type=4, cpp_type=4, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None, json_name='chan_id'),
    _descriptor.FieldDescriptor(
      name='capacity', full_name='lnrpc.ActiveChannel.capacity', index=4,
      number=5, type=3, cpp_type=2, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None, json_name='capacity'),
    _descriptor.FieldDescriptor(
      name='local_balance', full_name='lnrpc.ActiveChannel.local_balance', index=5,
      number=6, type=3, cpp_type=2, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None, json_name='local_balance'),
    _descriptor.FieldDescriptor(
      name='remote_balance', full_name='lnrpc.ActiveChannel.remote_balance', index=6,
      number=7, type=3, cpp_type=2, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None, json_name='remote_balance'),
    _descriptor.FieldDescriptor(
      name='commit_fee', full_name='lnrpc.ActiveChannel.commit_fee', index=7,
      number=8, type=3, cpp_type=2, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None, json_name='commit_fee'),
    _descriptor.FieldDescriptor(
      name='commit_weight', full_name='lnrpc.ActiveChannel.commit_weight', index=8,
      number=9, type=3, cpp_type=2, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None, json_name='commit_weight'),
    _descriptor.FieldDescriptor(
      name='fee_per_kw', full_name='lnrpc.ActiveChannel.fee_per_kw', index=9,
      number=10, type=3, cpp_type=2, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None, json_name='fee_per_kw'),
    _descriptor.FieldDescriptor(
      name='unsettled_balance', full_name='lnrpc.ActiveChannel.unsettled_balance', index=10,
      number=11, type=3, cpp_type=2, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None, json_name='unsettled_balance'),
    _descriptor.FieldDescriptor(
      name='total_satoshis_sent', full_name='lnrpc.ActiveChannel.total_satoshis_sent', index=11,
      number=12, type=3, cpp_type=2, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None, json_name='total_satoshis_sent'),
    _descriptor.FieldDescriptor(
      name='total_satoshis_received', full_name='lnrpc.ActiveChannel.total_satoshis_received', index=12,
      number=13, type=3, cpp_type=2, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None, json_name='total_satoshis_received'),
    _descriptor.FieldDescriptor(
      name='num_updates', full_name='lnrpc.ActiveChannel.num_updates', index=13,
      number=14, type=4, cpp_type=4, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None, json_name='num_updates'),
    _descriptor.FieldDescriptor(
      name='pending_htlcs', full_name='lnrpc.ActiveChannel.pending_htlcs', index=14,
      number=15, type=11, cpp_type=10, label=3,
      has_default_value=False, default_value=[],
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None, json_name='pending_htlcs'),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=2004,
  serialized_end=2592,
)


_LISTCHANNELSREQUEST = _descriptor.Descriptor(
  name='ListChannelsRequest',
  full_name='lnrpc.ListChannelsRequest',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=2594,
  serialized_end=2615,
)


_LISTCHANNELSRESPONSE = _descriptor.Descriptor(
  name='ListChannelsResponse',
  full_name='lnrpc.ListChannelsResponse',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='channels', full_name='lnrpc.ListChannelsResponse.channels', index=0,
      number=11, type=11, cpp_type=10, label=3,
      has_default_value=False, default_value=[],
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None, json_name='channels'),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=2617,
  serialized_end=2689,
)


_PEER = _descriptor.Descriptor(
  name='Peer',
  full_name='lnrpc.Peer',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='pub_key', full_name='lnrpc.Peer.pub_key', index=0,
      number=1, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None, json_name='pub_key'),
    _descriptor.FieldDescriptor(
      name='peer_id', full_name='lnrpc.Peer.peer_id', index=1,
      number=2, type=5, cpp_type=1, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None, json_name='peer_id'),
    _descriptor.FieldDescriptor(
      name='address', full_name='lnrpc.Peer.address', index=2,
      number=3, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None, json_name='address'),
    _descriptor.FieldDescriptor(
      name='bytes_sent', full_name='lnrpc.Peer.bytes_sent', index=3,
      number=4, type=4, cpp_type=4, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None, json_name='bytes_sent'),
    _descriptor.FieldDescriptor(
      name='bytes_recv', full_name='lnrpc.Peer.bytes_recv', index=4,
      number=5, type=4, cpp_type=4, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None, json_name='bytes_recv'),
    _descriptor.FieldDescriptor(
      name='sat_sent', full_name='lnrpc.Peer.sat_sent', index=5,
      number=6, type=3, cpp_type=2, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None, json_name='sat_sent'),
    _descriptor.FieldDescriptor(
      name='sat_recv', full_name='lnrpc.Peer.sat_recv', index=6,
      number=7, type=3, cpp_type=2, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None, json_name='sat_recv'),
    _descriptor.FieldDescriptor(
      name='inbound', full_name='lnrpc.Peer.inbound', index=7,
      number=8, type=8, cpp_type=7, label=1,
      has_default_value=False, default_value=False,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None, json_name='inbound'),
    _descriptor.FieldDescriptor(
      name='ping_time', full_name='lnrpc.Peer.ping_time', index=8,
      number=9, type=3, cpp_type=2, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None, json_name='ping_time'),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=2692,
  serialized_end=2952,
)


_LISTPEERSREQUEST = _descriptor.Descriptor(
  name='ListPeersRequest',
  full_name='lnrpc.ListPeersRequest',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=2954,
  serialized_end=2972,
)


_LISTPEERSRESPONSE = _descriptor.Descriptor(
  name='ListPeersResponse',
  full_name='lnrpc.ListPeersResponse',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='peers', full_name='lnrpc.ListPeersResponse.peers', index=0,
      number=1, type=11, cpp_type=10, label=3,
      has_default_value=False, default_value=[],
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None, json_name='peers'),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=2974,
  serialized_end=3028,
)


_GETINFOREQUEST = _descriptor.Descriptor(
  name='GetInfoRequest',
  full_name='lnrpc.GetInfoRequest',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=3030,
  serialized_end=3046,
)


_GETINFORESPONSE = _descriptor.Descriptor(
  name='GetInfoResponse',
  full_name='lnrpc.GetInfoResponse',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='identity_pubkey', full_name='lnrpc.GetInfoResponse.identity_pubkey', index=0,
      number=1, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None, json_name='identity_pubkey'),
    _descriptor.FieldDescriptor(
      name='alias', full_name='lnrpc.GetInfoResponse.alias', index=1,
      number=2, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None, json_name='alias'),
    _descriptor.FieldDescriptor(
      name='num_pending_channels', full_name='lnrpc.GetInfoResponse.num_pending_channels', index=2,
      number=3, type=13, cpp_type=3, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None, json_name='num_pending_channels'),
    _descriptor.FieldDescriptor(
      name='num_active_channels', full_name='lnrpc.GetInfoResponse.num_active_channels', index=3,
      number=4, type=13, cpp_type=3, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None, json_name='num_active_channels'),
    _descriptor.FieldDescriptor(
      name='num_peers', full_name='lnrpc.GetInfoResponse.num_peers', index=4,
      number=5, type=13, cpp_type=3, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None, json_name='num_peers'),
    _descriptor.FieldDescriptor(
      name='block_height', full_name='lnrpc.GetInfoResponse.block_height', index=5,
      number=6, type=13, cpp_type=3, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None, json_name='block_height'),
    _descriptor.FieldDescriptor(
      name='block_hash', full_name='lnrpc.GetInfoResponse.block_hash', index=6,
      number=8, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None, json_name='block_hash'),
    _descriptor.FieldDescriptor(
      name='synced_to_chain', full_name='lnrpc.GetInfoResponse.synced_to_chain', index=7,
      number=9, type=8, cpp_type=7, label=1,
      has_default_value=False, default_value=False,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None, json_name='synced_to_chain'),
    _descriptor.FieldDescriptor(
      name='testnet', full_name='lnrpc.GetInfoResponse.testnet', index=8,
      number=10, type=8, cpp_type=7, label=1,
      has_default_value=False, default_value=False,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None, json_name='testnet'),
    _descriptor.FieldDescriptor(
      name='chains', full_name='lnrpc.GetInfoResponse.chains', index=9,
      number=11, type=9, cpp_type=9, label=3,
      has_default_value=False, default_value=[],
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None, json_name='chains'),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=3049,
  serialized_end=3422,
)


_CONFIRMATIONUPDATE = _descriptor.Descriptor(
  name='ConfirmationUpdate',
  full_name='lnrpc.ConfirmationUpdate',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='block_sha', full_name='lnrpc.ConfirmationUpdate.block_sha', index=0,
      number=1, type=12, cpp_type=9, label=1,
      has_default_value=False, default_value=_b(""),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='block_height', full_name='lnrpc.ConfirmationUpdate.block_height', index=1,
      number=2, type=5, cpp_type=1, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='num_confs_left', full_name='lnrpc.ConfirmationUpdate.num_confs_left', index=2,
      number=3, type=13, cpp_type=3, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=3424,
  serialized_end=3509,
)


_CHANNELOPENUPDATE = _descriptor.Descriptor(
  name='ChannelOpenUpdate',
  full_name='lnrpc.ChannelOpenUpdate',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='channel_point', full_name='lnrpc.ChannelOpenUpdate.channel_point', index=0,
      number=1, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None, json_name='channel_point'),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=3511,
  serialized_end=3589,
)


_CHANNELCLOSEUPDATE = _descriptor.Descriptor(
  name='ChannelCloseUpdate',
  full_name='lnrpc.ChannelCloseUpdate',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='closing_txid', full_name='lnrpc.ChannelCloseUpdate.closing_txid', index=0,
      number=1, type=12, cpp_type=9, label=1,
      has_default_value=False, default_value=_b(""),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None, json_name='closing_txid'),
    _descriptor.FieldDescriptor(
      name='success', full_name='lnrpc.ChannelCloseUpdate.success', index=1,
      number=2, type=8, cpp_type=7, label=1,
      has_default_value=False, default_value=False,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None, json_name='success'),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=3591,
  serialized_end=3673,
)


_CLOSECHANNELREQUEST = _descriptor.Descriptor(
  name='CloseChannelRequest',
  full_name='lnrpc.CloseChannelRequest',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='channel_point', full_name='lnrpc.CloseChannelRequest.channel_point', index=0,
      number=1, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='time_limit', full_name='lnrpc.CloseChannelRequest.time_limit', index=1,
      number=2, type=3, cpp_type=2, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='force', full_name='lnrpc.CloseChannelRequest.force', index=2,
      number=3, type=8, cpp_type=7, label=1,
      has_default_value=False, default_value=False,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=3675,
  serialized_end=3775,
)


_CLOSESTATUSUPDATE = _descriptor.Descriptor(
  name='CloseStatusUpdate',
  full_name='lnrpc.CloseStatusUpdate',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='close_pending', full_name='lnrpc.CloseStatusUpdate.close_pending', index=0,
      number=1, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None, json_name='close_pending'),
    _descriptor.FieldDescriptor(
      name='confirmation', full_name='lnrpc.CloseStatusUpdate.confirmation', index=1,
      number=2, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None, json_name='confirmation'),
    _descriptor.FieldDescriptor(
      name='chan_close', full_name='lnrpc.CloseStatusUpdate.chan_close', index=2,
      number=3, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None, json_name='chan_close'),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
    _descriptor.OneofDescriptor(
      name='update', full_name='lnrpc.CloseStatusUpdate.update',
      index=0, containing_type=None, fields=[]),
  ],
  serialized_start=3778,
  serialized_end=3995,
)


_PENDINGUPDATE = _descriptor.Descriptor(
  name='PendingUpdate',
  full_name='lnrpc.PendingUpdate',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='txid', full_name='lnrpc.PendingUpdate.txid', index=0,
      number=1, type=12, cpp_type=9, label=1,
      has_default_value=False, default_value=_b(""),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None, json_name='txid'),
    _descriptor.FieldDescriptor(
      name='output_index', full_name='lnrpc.PendingUpdate.output_index', index=1,
      number=2, type=13, cpp_type=3, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None, json_name='output_index'),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=3997,
  serialized_end=4068,
)


_OPENCHANNELREQUEST = _descriptor.Descriptor(
  name='OpenChannelRequest',
  full_name='lnrpc.OpenChannelRequest',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='target_peer_id', full_name='lnrpc.OpenChannelRequest.target_peer_id', index=0,
      number=1, type=5, cpp_type=1, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None, json_name='target_peer_id'),
    _descriptor.FieldDescriptor(
      name='node_pubkey', full_name='lnrpc.OpenChannelRequest.node_pubkey', index=1,
      number=2, type=12, cpp_type=9, label=1,
      has_default_value=False, default_value=_b(""),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None, json_name='node_pubkey'),
    _descriptor.FieldDescriptor(
      name='node_pubkey_string', full_name='lnrpc.OpenChannelRequest.node_pubkey_string', index=2,
      number=3, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None, json_name='node_pubkey_string'),
    _descriptor.FieldDescriptor(
      name='local_funding_amount', full_name='lnrpc.OpenChannelRequest.local_funding_amount', index=3,
      number=4, type=3, cpp_type=2, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None, json_name='local_funding_amount'),
    _descriptor.FieldDescriptor(
      name='push_sat', full_name='lnrpc.OpenChannelRequest.push_sat', index=4,
      number=5, type=3, cpp_type=2, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None, json_name='push_sat'),
    _descriptor.FieldDescriptor(
      name='num_confs', full_name='lnrpc.OpenChannelRequest.num_confs', index=5,
      number=6, type=13, cpp_type=3, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None, json_name='num_confs'),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=4071,
  serialized_end=4323,
)


_OPENSTATUSUPDATE = _descriptor.Descriptor(
  name='OpenStatusUpdate',
  full_name='lnrpc.OpenStatusUpdate',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='chan_pending', full_name='lnrpc.OpenStatusUpdate.chan_pending', index=0,
      number=1, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None, json_name='chan_pending'),
    _descriptor.FieldDescriptor(
      name='confirmation', full_name='lnrpc.OpenStatusUpdate.confirmation', index=1,
      number=2, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None, json_name='confirmation'),
    _descriptor.FieldDescriptor(
      name='chan_open', full_name='lnrpc.OpenStatusUpdate.chan_open', index=2,
      number=3, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None, json_name='chan_open'),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
    _descriptor.OneofDescriptor(
      name='update', full_name='lnrpc.OpenStatusUpdate.update',
      index=0, containing_type=None, fields=[]),
  ],
  serialized_start=4326,
  serialized_end=4537,
)


_PENDINGCHANNELREQUEST = _descriptor.Descriptor(
  name='PendingChannelRequest',
  full_name='lnrpc.PendingChannelRequest',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=4539,
  serialized_end=4562,
)


_PENDINGCHANNELRESPONSE_PENDINGCHANNEL = _descriptor.Descriptor(
  name='PendingChannel',
  full_name='lnrpc.PendingChannelResponse.PendingChannel',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='remote_node_pub', full_name='lnrpc.PendingChannelResponse.PendingChannel.remote_node_pub', index=0,
      number=1, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None, json_name='remote_node_pub'),
    _descriptor.FieldDescriptor(
      name='channel_point', full_name='lnrpc.PendingChannelResponse.PendingChannel.channel_point', index=1,
      number=2, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None, json_name='channel_point'),
    _descriptor.FieldDescriptor(
      name='capacity', full_name='lnrpc.PendingChannelResponse.PendingChannel.capacity', index=2,
      number=3, type=3, cpp_type=2, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None, json_name='capacity'),
    _descriptor.FieldDescriptor(
      name='local_balance', full_name='lnrpc.PendingChannelResponse.PendingChannel.local_balance', index=3,
      number=4, type=3, cpp_type=2, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None, json_name='local_balance'),
    _descriptor.FieldDescriptor(
      name='remote_balance', full_name='lnrpc.PendingChannelResponse.PendingChannel.remote_balance', index=4,
      number=5, type=3, cpp_type=2, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None, json_name='remote_balance'),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=4973,
  serialized_end=5175,
)

_PENDINGCHANNELRESPONSE_PENDINGOPENCHANNEL = _descriptor.Descriptor(
  name='PendingOpenChannel',
  full_name='lnrpc.PendingChannelResponse.PendingOpenChannel',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='channel', full_name='lnrpc.PendingChannelResponse.PendingOpenChannel.channel', index=0,
      number=1, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None, json_name='channel'),
    _descriptor.FieldDescriptor(
      name='confirmation_height', full_name='lnrpc.PendingChannelResponse.PendingOpenChannel.confirmation_height', index=1,
      number=2, type=13, cpp_type=3, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None, json_name='confirmation_height'),
    _descriptor.FieldDescriptor(
      name='blocks_till_open', full_name='lnrpc.PendingChannelResponse.PendingOpenChannel.blocks_till_open', index=2,
      number=3, type=13, cpp_type=3, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None, json_name='blocks_till_open'),
    _descriptor.FieldDescriptor(
      name='commit_fee', full_name='lnrpc.PendingChannelResponse.PendingOpenChannel.commit_fee', index=3,
      number=4, type=3, cpp_type=2, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None, json_name='commit_fee'),
    _descriptor.FieldDescriptor(
      name='commit_weight', full_name='lnrpc.PendingChannelResponse.PendingOpenChannel.commit_weight', index=4,
      number=5, type=3, cpp_type=2, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None, json_name='commit_weight'),
    _descriptor.FieldDescriptor(
      name='fee_per_kw', full_name='lnrpc.PendingChannelResponse.PendingOpenChannel.fee_per_kw', index=5,
      number=6, type=3, cpp_type=2, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None, json_name='fee_per_kw'),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=5178,
  serialized_end=5466,
)

_PENDINGCHANNELRESPONSE_CLOSEDCHANNEL = _descriptor.Descriptor(
  name='ClosedChannel',
  full_name='lnrpc.PendingChannelResponse.ClosedChannel',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='channel', full_name='lnrpc.PendingChannelResponse.ClosedChannel.channel', index=0,
      number=1, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='closing_txid', full_name='lnrpc.PendingChannelResponse.ClosedChannel.closing_txid', index=1,
      number=2, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None, json_name='closing_txid'),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=5468,
  serialized_end=5582,
)

_PENDINGCHANNELRESPONSE_FORCECLOSEDCHANNEL = _descriptor.Descriptor(
  name='ForceClosedChannel',
  full_name='lnrpc.PendingChannelResponse.ForceClosedChannel',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='channel', full_name='lnrpc.PendingChannelResponse.ForceClosedChannel.channel', index=0,
      number=1, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None, json_name='channel'),
    _descriptor.FieldDescriptor(
      name='closing_txid', full_name='lnrpc.PendingChannelResponse.ForceClosedChannel.closing_txid', index=1,
      number=2, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None, json_name='closing_txid'),
    _descriptor.FieldDescriptor(
      name='limbo_balance', full_name='lnrpc.PendingChannelResponse.ForceClosedChannel.limbo_balance', index=2,
      number=3, type=3, cpp_type=2, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None, json_name='limbo_balance'),
    _descriptor.FieldDescriptor(
      name='maturity_height', full_name='lnrpc.PendingChannelResponse.ForceClosedChannel.maturity_height', index=3,
      number=4, type=13, cpp_type=3, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None, json_name='maturity_height'),
    _descriptor.FieldDescriptor(
      name='blocks_til_maturity', full_name='lnrpc.PendingChannelResponse.ForceClosedChannel.blocks_til_maturity', index=4,
      number=5, type=13, cpp_type=3, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None, json_name='blocks_til_maturity'),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=5585,
  serialized_end=5843,
)

_PENDINGCHANNELRESPONSE = _descriptor.Descriptor(
  name='PendingChannelResponse',
  full_name='lnrpc.PendingChannelResponse',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='total_limbo_balance', full_name='lnrpc.PendingChannelResponse.total_limbo_balance', index=0,
      number=1, type=3, cpp_type=2, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None, json_name='total_limbo_balance'),
    _descriptor.FieldDescriptor(
      name='pending_open_channels', full_name='lnrpc.PendingChannelResponse.pending_open_channels', index=1,
      number=2, type=11, cpp_type=10, label=3,
      has_default_value=False, default_value=[],
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None, json_name='pending_open_channels'),
    _descriptor.FieldDescriptor(
      name='pending_closing_channels', full_name='lnrpc.PendingChannelResponse.pending_closing_channels', index=2,
      number=3, type=11, cpp_type=10, label=3,
      has_default_value=False, default_value=[],
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None, json_name='pending_closing_channels'),
    _descriptor.FieldDescriptor(
      name='pending_force_closing_channels', full_name='lnrpc.PendingChannelResponse.pending_force_closing_channels', index=3,
      number=4, type=11, cpp_type=10, label=3,
      has_default_value=False, default_value=[],
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None, json_name='pending_force_closing_channels'),
  ],
  extensions=[
  ],
  nested_types=[_PENDINGCHANNELRESPONSE_PENDINGCHANNEL, _PENDINGCHANNELRESPONSE_PENDINGOPENCHANNEL, _PENDINGCHANNELRESPONSE_CLOSEDCHANNEL, _PENDINGCHANNELRESPONSE_FORCECLOSEDCHANNEL, ],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=4565,
  serialized_end=5843,
)


_WALLETBALANCEREQUEST = _descriptor.Descriptor(
  name='WalletBalanceRequest',
  full_name='lnrpc.WalletBalanceRequest',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='witness_only', full_name='lnrpc.WalletBalanceRequest.witness_only', index=0,
      number=1, type=8, cpp_type=7, label=1,
      has_default_value=False, default_value=False,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=5845,
  serialized_end=5889,
)


_WALLETBALANCERESPONSE = _descriptor.Descriptor(
  name='WalletBalanceResponse',
  full_name='lnrpc.WalletBalanceResponse',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='balance', full_name='lnrpc.WalletBalanceResponse.balance', index=0,
      number=1, type=3, cpp_type=2, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None, json_name='balance'),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=5891,
  serialized_end=5940,
)


_CHANNELBALANCEREQUEST = _descriptor.Descriptor(
  name='ChannelBalanceRequest',
  full_name='lnrpc.ChannelBalanceRequest',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=5942,
  serialized_end=5965,
)


_CHANNELBALANCERESPONSE = _descriptor.Descriptor(
  name='ChannelBalanceResponse',
  full_name='lnrpc.ChannelBalanceResponse',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='balance', full_name='lnrpc.ChannelBalanceResponse.balance', index=0,
      number=1, type=3, cpp_type=2, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None, json_name='balance'),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=5967,
  serialized_end=6017,
)


_QUERYROUTESREQUEST = _descriptor.Descriptor(
  name='QueryRoutesRequest',
  full_name='lnrpc.QueryRoutesRequest',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='pub_key', full_name='lnrpc.QueryRoutesRequest.pub_key', index=0,
      number=1, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='amt', full_name='lnrpc.QueryRoutesRequest.amt', index=1,
      number=2, type=3, cpp_type=2, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=6019,
  serialized_end=6069,
)


_QUERYROUTESRESPONSE = _descriptor.Descriptor(
  name='QueryRoutesResponse',
  full_name='lnrpc.QueryRoutesResponse',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='routes', full_name='lnrpc.QueryRoutesResponse.routes', index=0,
      number=1, type=11, cpp_type=10, label=3,
      has_default_value=False, default_value=[],
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None, json_name='routes'),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=6071,
  serialized_end=6130,
)


_HOP = _descriptor.Descriptor(
  name='Hop',
  full_name='lnrpc.Hop',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='chan_id', full_name='lnrpc.Hop.chan_id', index=0,
      number=1, type=4, cpp_type=4, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None, json_name='chan_id'),
    _descriptor.FieldDescriptor(
      name='chan_capacity', full_name='lnrpc.Hop.chan_capacity', index=1,
      number=2, type=3, cpp_type=2, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None, json_name='chan_capacity'),
    _descriptor.FieldDescriptor(
      name='amt_to_forward', full_name='lnrpc.Hop.amt_to_forward', index=2,
      number=3, type=3, cpp_type=2, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None, json_name='amt_to_forward'),
    _descriptor.FieldDescriptor(
      name='fee', full_name='lnrpc.Hop.fee', index=3,
      number=4, type=3, cpp_type=2, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None, json_name='fee'),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=6132,
  serialized_end=6259,
)


_ROUTE = _descriptor.Descriptor(
  name='Route',
  full_name='lnrpc.Route',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='total_time_lock', full_name='lnrpc.Route.total_time_lock', index=0,
      number=1, type=13, cpp_type=3, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None, json_name='total_time_lock'),
    _descriptor.FieldDescriptor(
      name='total_fees', full_name='lnrpc.Route.total_fees', index=1,
      number=2, type=3, cpp_type=2, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None, json_name='total_fees'),
    _descriptor.FieldDescriptor(
      name='total_amt', full_name='lnrpc.Route.total_amt', index=2,
      number=3, type=3, cpp_type=2, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None, json_name='total_amt'),
    _descriptor.FieldDescriptor(
      name='hops', full_name='lnrpc.Route.hops', index=3,
      number=4, type=11, cpp_type=10, label=3,
      has_default_value=False, default_value=[],
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None, json_name='hops'),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=6262,
  serialized_end=6405,
)


_NODEINFOREQUEST = _descriptor.Descriptor(
  name='NodeInfoRequest',
  full_name='lnrpc.NodeInfoRequest',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='pub_key', full_name='lnrpc.NodeInfoRequest.pub_key', index=0,
      number=1, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=6407,
  serialized_end=6441,
)


_NODEINFO = _descriptor.Descriptor(
  name='NodeInfo',
  full_name='lnrpc.NodeInfo',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='node', full_name='lnrpc.NodeInfo.node', index=0,
      number=1, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None, json_name='node'),
    _descriptor.FieldDescriptor(
      name='num_channels', full_name='lnrpc.NodeInfo.num_channels', index=1,
      number=2, type=13, cpp_type=3, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None, json_name='num_channels'),
    _descriptor.FieldDescriptor(
      name='total_capacity', full_name='lnrpc.NodeInfo.total_capacity', index=2,
      number=3, type=3, cpp_type=2, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None, json_name='total_capacity'),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=6444,
  serialized_end=6572,
)


_LIGHTNINGNODE = _descriptor.Descriptor(
  name='LightningNode',
  full_name='lnrpc.LightningNode',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='last_update', full_name='lnrpc.LightningNode.last_update', index=0,
      number=1, type=13, cpp_type=3, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None, json_name='last_update'),
    _descriptor.FieldDescriptor(
      name='pub_key', full_name='lnrpc.LightningNode.pub_key', index=1,
      number=2, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None, json_name='pub_key'),
    _descriptor.FieldDescriptor(
      name='alias', full_name='lnrpc.LightningNode.alias', index=2,
      number=3, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None, json_name='alias'),
    _descriptor.FieldDescriptor(
      name='addresses', full_name='lnrpc.LightningNode.addresses', index=3,
      number=4, type=11, cpp_type=10, label=3,
      has_default_value=False, default_value=[],
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None, json_name='addresses'),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=6575,
  serialized_end=6722,
)


_NODEADDRESS = _descriptor.Descriptor(
  name='NodeAddress',
  full_name='lnrpc.NodeAddress',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='network', full_name='lnrpc.NodeAddress.network', index=0,
      number=1, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None, json_name='network'),
    _descriptor.FieldDescriptor(
      name='addr', full_name='lnrpc.NodeAddress.addr', index=1,
      number=2, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None, json_name='addr'),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=6724,
  serialized_end=6783,
)


_ROUTINGPOLICY = _descriptor.Descriptor(
  name='RoutingPolicy',
  full_name='lnrpc.RoutingPolicy',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='time_lock_delta', full_name='lnrpc.RoutingPolicy.time_lock_delta', index=0,
      number=1, type=13, cpp_type=3, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None, json_name='time_lock_delta'),
    _descriptor.FieldDescriptor(
      name='min_htlc', full_name='lnrpc.RoutingPolicy.min_htlc', index=1,
      number=2, type=3, cpp_type=2, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None, json_name='min_htlc'),
    _descriptor.FieldDescriptor(
      name='fee_base_msat', full_name='lnrpc.RoutingPolicy.fee_base_msat', index=2,
      number=3, type=3, cpp_type=2, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None, json_name='fee_base_msat'),
    _descriptor.FieldDescriptor(
      name='fee_rate_milli_msat', full_name='lnrpc.RoutingPolicy.fee_rate_milli_msat', index=3,
      number=4, type=3, cpp_type=2, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None, json_name='fee_rate_milli_msat'),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=6786,
  serialized_end=6959,
)


_CHANNELEDGE = _descriptor.Descriptor(
  name='ChannelEdge',
  full_name='lnrpc.ChannelEdge',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='channel_id', full_name='lnrpc.ChannelEdge.channel_id', index=0,
      number=1, type=4, cpp_type=4, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None, json_name='channel_id'),
    _descriptor.FieldDescriptor(
      name='chan_point', full_name='lnrpc.ChannelEdge.chan_point', index=1,
      number=2, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None, json_name='chan_point'),
    _descriptor.FieldDescriptor(
      name='last_update', full_name='lnrpc.ChannelEdge.last_update', index=2,
      number=3, type=13, cpp_type=3, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None, json_name='last_update'),
    _descriptor.FieldDescriptor(
      name='node1_pub', full_name='lnrpc.ChannelEdge.node1_pub', index=3,
      number=4, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None, json_name='node1_pub'),
    _descriptor.FieldDescriptor(
      name='node2_pub', full_name='lnrpc.ChannelEdge.node2_pub', index=4,
      number=5, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None, json_name='node2_pub'),
    _descriptor.FieldDescriptor(
      name='capacity', full_name='lnrpc.ChannelEdge.capacity', index=5,
      number=6, type=3, cpp_type=2, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None, json_name='capacity'),
    _descriptor.FieldDescriptor(
      name='node1_policy', full_name='lnrpc.ChannelEdge.node1_policy', index=6,
      number=7, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None, json_name='node1_policy'),
    _descriptor.FieldDescriptor(
      name='node2_policy', full_name='lnrpc.ChannelEdge.node2_policy', index=7,
      number=8, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None, json_name='node2_policy'),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=6962,
  serialized_end=7277,
)


_CHANNELGRAPHREQUEST = _descriptor.Descriptor(
  name='ChannelGraphRequest',
  full_name='lnrpc.ChannelGraphRequest',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=7279,
  serialized_end=7300,
)


_CHANNELGRAPH = _descriptor.Descriptor(
  name='ChannelGraph',
  full_name='lnrpc.ChannelGraph',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='nodes', full_name='lnrpc.ChannelGraph.nodes', index=0,
      number=1, type=11, cpp_type=10, label=3,
      has_default_value=False, default_value=[],
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None, json_name='nodes'),
    _descriptor.FieldDescriptor(
      name='edges', full_name='lnrpc.ChannelGraph.edges', index=1,
      number=2, type=11, cpp_type=10, label=3,
      has_default_value=False, default_value=[],
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None, json_name='edges'),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=7302,
  serialized_end=7402,
)


_CHANINFOREQUEST = _descriptor.Descriptor(
  name='ChanInfoRequest',
  full_name='lnrpc.ChanInfoRequest',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='chan_id', full_name='lnrpc.ChanInfoRequest.chan_id', index=0,
      number=1, type=4, cpp_type=4, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=7404,
  serialized_end=7438,
)


_NETWORKINFOREQUEST = _descriptor.Descriptor(
  name='NetworkInfoRequest',
  full_name='lnrpc.NetworkInfoRequest',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=7440,
  serialized_end=7460,
)


_NETWORKINFO = _descriptor.Descriptor(
  name='NetworkInfo',
  full_name='lnrpc.NetworkInfo',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='graph_diameter', full_name='lnrpc.NetworkInfo.graph_diameter', index=0,
      number=1, type=13, cpp_type=3, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None, json_name='graph_diameter'),
    _descriptor.FieldDescriptor(
      name='avg_out_degree', full_name='lnrpc.NetworkInfo.avg_out_degree', index=1,
      number=2, type=1, cpp_type=5, label=1,
      has_default_value=False, default_value=float(0),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None, json_name='avg_out_degree'),
    _descriptor.FieldDescriptor(
      name='max_out_degree', full_name='lnrpc.NetworkInfo.max_out_degree', index=2,
      number=3, type=13, cpp_type=3, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None, json_name='max_out_degree'),
    _descriptor.FieldDescriptor(
      name='num_nodes', full_name='lnrpc.NetworkInfo.num_nodes', index=3,
      number=4, type=13, cpp_type=3, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None, json_name='num_nodes'),
    _descriptor.FieldDescriptor(
      name='num_channels', full_name='lnrpc.NetworkInfo.num_channels', index=4,
      number=5, type=13, cpp_type=3, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None, json_name='num_channels'),
    _descriptor.FieldDescriptor(
      name='total_network_capacity', full_name='lnrpc.NetworkInfo.total_network_capacity', index=5,
      number=6, type=3, cpp_type=2, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None, json_name='total_network_capacity'),
    _descriptor.FieldDescriptor(
      name='avg_channel_size', full_name='lnrpc.NetworkInfo.avg_channel_size', index=6,
      number=7, type=1, cpp_type=5, label=1,
      has_default_value=False, default_value=float(0),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None, json_name='avg_channel_size'),
    _descriptor.FieldDescriptor(
      name='min_channel_size', full_name='lnrpc.NetworkInfo.min_channel_size', index=7,
      number=8, type=3, cpp_type=2, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None, json_name='min_channel_size'),
    _descriptor.FieldDescriptor(
      name='max_channel_size', full_name='lnrpc.NetworkInfo.max_channel_size', index=8,
      number=9, type=3, cpp_type=2, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None, json_name='max_channel_size'),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=7463,
  serialized_end=7850,
)


_STOPREQUEST = _descriptor.Descriptor(
  name='StopRequest',
  full_name='lnrpc.StopRequest',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=7852,
  serialized_end=7865,
)


_STOPRESPONSE = _descriptor.Descriptor(
  name='StopResponse',
  full_name='lnrpc.StopResponse',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=7867,
  serialized_end=7881,
)


_GRAPHTOPOLOGYSUBSCRIPTION = _descriptor.Descriptor(
  name='GraphTopologySubscription',
  full_name='lnrpc.GraphTopologySubscription',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=7883,
  serialized_end=7910,
)


_GRAPHTOPOLOGYUPDATE = _descriptor.Descriptor(
  name='GraphTopologyUpdate',
  full_name='lnrpc.GraphTopologyUpdate',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='node_updates', full_name='lnrpc.GraphTopologyUpdate.node_updates', index=0,
      number=1, type=11, cpp_type=10, label=3,
      has_default_value=False, default_value=[],
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='channel_updates', full_name='lnrpc.GraphTopologyUpdate.channel_updates', index=1,
      number=2, type=11, cpp_type=10, label=3,
      has_default_value=False, default_value=[],
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='closed_chans', full_name='lnrpc.GraphTopologyUpdate.closed_chans', index=2,
      number=3, type=11, cpp_type=10, label=3,
      has_default_value=False, default_value=[],
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=7913,
  serialized_end=8076,
)


_NODEUPDATE = _descriptor.Descriptor(
  name='NodeUpdate',
  full_name='lnrpc.NodeUpdate',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='addresses', full_name='lnrpc.NodeUpdate.addresses', index=0,
      number=1, type=9, cpp_type=9, label=3,
      has_default_value=False, default_value=[],
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='identity_key', full_name='lnrpc.NodeUpdate.identity_key', index=1,
      number=2, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='global_features', full_name='lnrpc.NodeUpdate.global_features', index=2,
      number=3, type=12, cpp_type=9, label=1,
      has_default_value=False, default_value=_b(""),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='alias', full_name='lnrpc.NodeUpdate.alias', index=3,
      number=4, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=8078,
  serialized_end=8171,
)


_CHANNELEDGEUPDATE = _descriptor.Descriptor(
  name='ChannelEdgeUpdate',
  full_name='lnrpc.ChannelEdgeUpdate',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='chan_id', full_name='lnrpc.ChannelEdgeUpdate.chan_id', index=0,
      number=1, type=4, cpp_type=4, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='chan_point', full_name='lnrpc.ChannelEdgeUpdate.chan_point', index=1,
      number=2, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='capacity', full_name='lnrpc.ChannelEdgeUpdate.capacity', index=2,
      number=3, type=3, cpp_type=2, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='routing_policy', full_name='lnrpc.ChannelEdgeUpdate.routing_policy', index=3,
      number=4, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='advertising_node', full_name='lnrpc.ChannelEdgeUpdate.advertising_node', index=4,
      number=5, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='connecting_node', full_name='lnrpc.ChannelEdgeUpdate.connecting_node', index=5,
      number=6, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=8174,
  serialized_end=8366,
)


_CLOSEDCHANNELUPDATE = _descriptor.Descriptor(
  name='ClosedChannelUpdate',
  full_name='lnrpc.ClosedChannelUpdate',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='chan_id', full_name='lnrpc.ClosedChannelUpdate.chan_id', index=0,
      number=1, type=4, cpp_type=4, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='capacity', full_name='lnrpc.ClosedChannelUpdate.capacity', index=1,
      number=2, type=3, cpp_type=2, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='closed_height', full_name='lnrpc.ClosedChannelUpdate.closed_height', index=2,
      number=3, type=13, cpp_type=3, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='chan_point', full_name='lnrpc.ClosedChannelUpdate.chan_point', index=3,
      number=4, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=8368,
  serialized_end=8488,
)


_SETALIASREQUEST = _descriptor.Descriptor(
  name='SetAliasRequest',
  full_name='lnrpc.SetAliasRequest',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='new_alias', full_name='lnrpc.SetAliasRequest.new_alias', index=0,
      number=1, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=8490,
  serialized_end=8526,
)


_SETALIASRESPONSE = _descriptor.Descriptor(
  name='SetAliasResponse',
  full_name='lnrpc.SetAliasResponse',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=8528,
  serialized_end=8546,
)


_INVOICE = _descriptor.Descriptor(
  name='Invoice',
  full_name='lnrpc.Invoice',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='memo', full_name='lnrpc.Invoice.memo', index=0,
      number=1, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None, json_name='memo'),
    _descriptor.FieldDescriptor(
      name='receipt', full_name='lnrpc.Invoice.receipt', index=1,
      number=2, type=12, cpp_type=9, label=1,
      has_default_value=False, default_value=_b(""),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None, json_name='receipt'),
    _descriptor.FieldDescriptor(
      name='r_preimage', full_name='lnrpc.Invoice.r_preimage', index=2,
      number=3, type=12, cpp_type=9, label=1,
      has_default_value=False, default_value=_b(""),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None, json_name='r_preimage'),
    _descriptor.FieldDescriptor(
      name='r_hash', full_name='lnrpc.Invoice.r_hash', index=3,
      number=4, type=12, cpp_type=9, label=1,
      has_default_value=False, default_value=_b(""),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None, json_name='r_hash'),
    _descriptor.FieldDescriptor(
      name='value', full_name='lnrpc.Invoice.value', index=4,
      number=5, type=3, cpp_type=2, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None, json_name='value'),
    _descriptor.FieldDescriptor(
      name='settled', full_name='lnrpc.Invoice.settled', index=5,
      number=6, type=8, cpp_type=7, label=1,
      has_default_value=False, default_value=False,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None, json_name='settled'),
    _descriptor.FieldDescriptor(
      name='creation_date', full_name='lnrpc.Invoice.creation_date', index=6,
      number=7, type=3, cpp_type=2, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None, json_name='creation_date'),
    _descriptor.FieldDescriptor(
      name='settle_date', full_name='lnrpc.Invoice.settle_date', index=7,
      number=8, type=3, cpp_type=2, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None, json_name='settle_date'),
    _descriptor.FieldDescriptor(
      name='payment_request', full_name='lnrpc.Invoice.payment_request', index=8,
      number=9, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None, json_name='payment_request'),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=8549,
  serialized_end=8822,
)


_ADDINVOICERESPONSE = _descriptor.Descriptor(
  name='AddInvoiceResponse',
  full_name='lnrpc.AddInvoiceResponse',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='r_hash', full_name='lnrpc.AddInvoiceResponse.r_hash', index=0,
      number=1, type=12, cpp_type=9, label=1,
      has_default_value=False, default_value=_b(""),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None, json_name='r_hash'),
    _descriptor.FieldDescriptor(
      name='payment_request', full_name='lnrpc.AddInvoiceResponse.payment_request', index=1,
      number=2, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None, json_name='payment_request'),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=8824,
  serialized_end=8910,
)


_PAYMENTHASH = _descriptor.Descriptor(
  name='PaymentHash',
  full_name='lnrpc.PaymentHash',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='r_hash_str', full_name='lnrpc.PaymentHash.r_hash_str', index=0,
      number=1, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None, json_name='r_hash_str'),
    _descriptor.FieldDescriptor(
      name='r_hash', full_name='lnrpc.PaymentHash.r_hash', index=1,
      number=2, type=12, cpp_type=9, label=1,
      has_default_value=False, default_value=_b(""),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None, json_name='r_hash'),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=8912,
  serialized_end=8981,
)


_LISTINVOICEREQUEST = _descriptor.Descriptor(
  name='ListInvoiceRequest',
  full_name='lnrpc.ListInvoiceRequest',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='pending_only', full_name='lnrpc.ListInvoiceRequest.pending_only', index=0,
      number=1, type=8, cpp_type=7, label=1,
      has_default_value=False, default_value=False,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=8983,
  serialized_end=9025,
)


_LISTINVOICERESPONSE = _descriptor.Descriptor(
  name='ListInvoiceResponse',
  full_name='lnrpc.ListInvoiceResponse',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='invoices', full_name='lnrpc.ListInvoiceResponse.invoices', index=0,
      number=1, type=11, cpp_type=10, label=3,
      has_default_value=False, default_value=[],
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None, json_name='invoices'),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=9027,
  serialized_end=9092,
)


_INVOICESUBSCRIPTION = _descriptor.Descriptor(
  name='InvoiceSubscription',
  full_name='lnrpc.InvoiceSubscription',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=9094,
  serialized_end=9115,
)


_PAYMENT = _descriptor.Descriptor(
  name='Payment',
  full_name='lnrpc.Payment',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='payment_hash', full_name='lnrpc.Payment.payment_hash', index=0,
      number=1, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None, json_name='payment_hash'),
    _descriptor.FieldDescriptor(
      name='value', full_name='lnrpc.Payment.value', index=1,
      number=2, type=3, cpp_type=2, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None, json_name='value'),
    _descriptor.FieldDescriptor(
      name='creation_date', full_name='lnrpc.Payment.creation_date', index=2,
      number=3, type=3, cpp_type=2, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None, json_name='creation_date'),
    _descriptor.FieldDescriptor(
      name='path', full_name='lnrpc.Payment.path', index=3,
      number=4, type=9, cpp_type=9, label=3,
      has_default_value=False, default_value=[],
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None, json_name='path'),
    _descriptor.FieldDescriptor(
      name='fee', full_name='lnrpc.Payment.fee', index=4,
      number=5, type=3, cpp_type=2, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None, json_name='fee'),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=9118,
  serialized_end=9261,
)


_LISTPAYMENTSREQUEST = _descriptor.Descriptor(
  name='ListPaymentsRequest',
  full_name='lnrpc.ListPaymentsRequest',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=9263,
  serialized_end=9284,
)


_LISTPAYMENTSRESPONSE = _descriptor.Descriptor(
  name='ListPaymentsResponse',
  full_name='lnrpc.ListPaymentsResponse',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='payments', full_name='lnrpc.ListPaymentsResponse.payments', index=0,
      number=1, type=11, cpp_type=10, label=3,
      has_default_value=False, default_value=[],
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None, json_name='payments'),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=9286,
  serialized_end=9352,
)


_DELETEALLPAYMENTSREQUEST = _descriptor.Descriptor(
  name='DeleteAllPaymentsRequest',
  full_name='lnrpc.DeleteAllPaymentsRequest',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=9354,
  serialized_end=9380,
)


_DELETEALLPAYMENTSRESPONSE = _descriptor.Descriptor(
  name='DeleteAllPaymentsResponse',
  full_name='lnrpc.DeleteAllPaymentsResponse',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=9382,
  serialized_end=9409,
)


_DEBUGLEVELREQUEST = _descriptor.Descriptor(
  name='DebugLevelRequest',
  full_name='lnrpc.DebugLevelRequest',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='show', full_name='lnrpc.DebugLevelRequest.show', index=0,
      number=1, type=8, cpp_type=7, label=1,
      has_default_value=False, default_value=False,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='level_spec', full_name='lnrpc.DebugLevelRequest.level_spec', index=1,
      number=2, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=9411,
  serialized_end=9464,
)


_DEBUGLEVELRESPONSE = _descriptor.Descriptor(
  name='DebugLevelResponse',
  full_name='lnrpc.DebugLevelResponse',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='sub_systems', full_name='lnrpc.DebugLevelResponse.sub_systems', index=0,
      number=1, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None, json_name='sub_systems'),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=9466,
  serialized_end=9520,
)


_PAYREQSTRING = _descriptor.Descriptor(
  name='PayReqString',
  full_name='lnrpc.PayReqString',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='pay_req', full_name='lnrpc.PayReqString.pay_req', index=0,
      number=1, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=9522,
  serialized_end=9553,
)


_PAYREQ = _descriptor.Descriptor(
  name='PayReq',
  full_name='lnrpc.PayReq',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='destination', full_name='lnrpc.PayReq.destination', index=0,
      number=1, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None, json_name='destination'),
    _descriptor.FieldDescriptor(
      name='payment_hash', full_name='lnrpc.PayReq.payment_hash', index=1,
      number=2, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None, json_name='payment_hash'),
    _descriptor.FieldDescriptor(
      name='num_satoshis', full_name='lnrpc.PayReq.num_satoshis', index=2,
      number=3, type=3, cpp_type=2, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None, json_name='num_satoshis'),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=9555,
  serialized_end=9669,
)

_TRANSACTIONDETAILS.fields_by_name['transactions'].message_type = _TRANSACTION
_SENDRESPONSE.fields_by_name['payment_route'].message_type = _ROUTE
_SENDMANYREQUEST_ADDRTOAMOUNTENTRY.containing_type = _SENDMANYREQUEST
_SENDMANYREQUEST.fields_by_name['AddrToAmount'].message_type = _SENDMANYREQUEST_ADDRTOAMOUNTENTRY
_NEWADDRESSREQUEST.fields_by_name['type'].enum_type = _NEWADDRESSREQUEST_ADDRESSTYPE
_NEWADDRESSREQUEST_ADDRESSTYPE.containing_type = _NEWADDRESSREQUEST
_CONNECTPEERREQUEST.fields_by_name['addr'].message_type = _LIGHTNINGADDRESS
_ACTIVECHANNEL.fields_by_name['pending_htlcs'].message_type = _HTLC
_LISTCHANNELSRESPONSE.fields_by_name['channels'].message_type = _ACTIVECHANNEL
_LISTPEERSRESPONSE.fields_by_name['peers'].message_type = _PEER
_CHANNELOPENUPDATE.fields_by_name['channel_point'].message_type = _CHANNELPOINT
_CLOSECHANNELREQUEST.fields_by_name['channel_point'].message_type = _CHANNELPOINT
_CLOSESTATUSUPDATE.fields_by_name['close_pending'].message_type = _PENDINGUPDATE
_CLOSESTATUSUPDATE.fields_by_name['confirmation'].message_type = _CONFIRMATIONUPDATE
_CLOSESTATUSUPDATE.fields_by_name['chan_close'].message_type = _CHANNELCLOSEUPDATE
_CLOSESTATUSUPDATE.oneofs_by_name['update'].fields.append(
  _CLOSESTATUSUPDATE.fields_by_name['close_pending'])
_CLOSESTATUSUPDATE.fields_by_name['close_pending'].containing_oneof = _CLOSESTATUSUPDATE.oneofs_by_name['update']
_CLOSESTATUSUPDATE.oneofs_by_name['update'].fields.append(
  _CLOSESTATUSUPDATE.fields_by_name['confirmation'])
_CLOSESTATUSUPDATE.fields_by_name['confirmation'].containing_oneof = _CLOSESTATUSUPDATE.oneofs_by_name['update']
_CLOSESTATUSUPDATE.oneofs_by_name['update'].fields.append(
  _CLOSESTATUSUPDATE.fields_by_name['chan_close'])
_CLOSESTATUSUPDATE.fields_by_name['chan_close'].containing_oneof = _CLOSESTATUSUPDATE.oneofs_by_name['update']
_OPENSTATUSUPDATE.fields_by_name['chan_pending'].message_type = _PENDINGUPDATE
_OPENSTATUSUPDATE.fields_by_name['confirmation'].message_type = _CONFIRMATIONUPDATE
_OPENSTATUSUPDATE.fields_by_name['chan_open'].message_type = _CHANNELOPENUPDATE
_OPENSTATUSUPDATE.oneofs_by_name['update'].fields.append(
  _OPENSTATUSUPDATE.fields_by_name['chan_pending'])
_OPENSTATUSUPDATE.fields_by_name['chan_pending'].containing_oneof = _OPENSTATUSUPDATE.oneofs_by_name['update']
_OPENSTATUSUPDATE.oneofs_by_name['update'].fields.append(
  _OPENSTATUSUPDATE.fields_by_name['confirmation'])
_OPENSTATUSUPDATE.fields_by_name['confirmation'].containing_oneof = _OPENSTATUSUPDATE.oneofs_by_name['update']
_OPENSTATUSUPDATE.oneofs_by_name['update'].fields.append(
  _OPENSTATUSUPDATE.fields_by_name['chan_open'])
_OPENSTATUSUPDATE.fields_by_name['chan_open'].containing_oneof = _OPENSTATUSUPDATE.oneofs_by_name['update']
_PENDINGCHANNELRESPONSE_PENDINGCHANNEL.containing_type = _PENDINGCHANNELRESPONSE
_PENDINGCHANNELRESPONSE_PENDINGOPENCHANNEL.fields_by_name['channel'].message_type = _PENDINGCHANNELRESPONSE_PENDINGCHANNEL
_PENDINGCHANNELRESPONSE_PENDINGOPENCHANNEL.containing_type = _PENDINGCHANNELRESPONSE
_PENDINGCHANNELRESPONSE_CLOSEDCHANNEL.fields_by_name['channel'].message_type = _PENDINGCHANNELRESPONSE_PENDINGCHANNEL
_PENDINGCHANNELRESPONSE_CLOSEDCHANNEL.containing_type = _PENDINGCHANNELRESPONSE
_PENDINGCHANNELRESPONSE_FORCECLOSEDCHANNEL.fields_by_name['channel'].message_type = _PENDINGCHANNELRESPONSE_PENDINGCHANNEL
_PENDINGCHANNELRESPONSE_FORCECLOSEDCHANNEL.containing_type = _PENDINGCHANNELRESPONSE
_PENDINGCHANNELRESPONSE.fields_by_name['pending_open_channels'].message_type = _PENDINGCHANNELRESPONSE_PENDINGOPENCHANNEL
_PENDINGCHANNELRESPONSE.fields_by_name['pending_closing_channels'].message_type = _PENDINGCHANNELRESPONSE_CLOSEDCHANNEL
_PENDINGCHANNELRESPONSE.fields_by_name['pending_force_closing_channels'].message_type = _PENDINGCHANNELRESPONSE_FORCECLOSEDCHANNEL
_QUERYROUTESRESPONSE.fields_by_name['routes'].message_type = _ROUTE
_ROUTE.fields_by_name['hops'].message_type = _HOP
_NODEINFO.fields_by_name['node'].message_type = _LIGHTNINGNODE
_LIGHTNINGNODE.fields_by_name['addresses'].message_type = _NODEADDRESS
_CHANNELEDGE.fields_by_name['node1_policy'].message_type = _ROUTINGPOLICY
_CHANNELEDGE.fields_by_name['node2_policy'].message_type = _ROUTINGPOLICY
_CHANNELGRAPH.fields_by_name['nodes'].message_type = _LIGHTNINGNODE
_CHANNELGRAPH.fields_by_name['edges'].message_type = _CHANNELEDGE
_GRAPHTOPOLOGYUPDATE.fields_by_name['node_updates'].message_type = _NODEUPDATE
_GRAPHTOPOLOGYUPDATE.fields_by_name['channel_updates'].message_type = _CHANNELEDGEUPDATE
_GRAPHTOPOLOGYUPDATE.fields_by_name['closed_chans'].message_type = _CLOSEDCHANNELUPDATE
_CHANNELEDGEUPDATE.fields_by_name['chan_point'].message_type = _CHANNELPOINT
_CHANNELEDGEUPDATE.fields_by_name['routing_policy'].message_type = _ROUTINGPOLICY
_CLOSEDCHANNELUPDATE.fields_by_name['chan_point'].message_type = _CHANNELPOINT
_LISTINVOICERESPONSE.fields_by_name['invoices'].message_type = _INVOICE
_LISTPAYMENTSRESPONSE.fields_by_name['payments'].message_type = _PAYMENT
DESCRIPTOR.message_types_by_name['Transaction'] = _TRANSACTION
DESCRIPTOR.message_types_by_name['GetTransactionsRequest'] = _GETTRANSACTIONSREQUEST
DESCRIPTOR.message_types_by_name['TransactionDetails'] = _TRANSACTIONDETAILS
DESCRIPTOR.message_types_by_name['SendRequest'] = _SENDREQUEST
DESCRIPTOR.message_types_by_name['SendResponse'] = _SENDRESPONSE
DESCRIPTOR.message_types_by_name['ChannelPoint'] = _CHANNELPOINT
DESCRIPTOR.message_types_by_name['LightningAddress'] = _LIGHTNINGADDRESS
DESCRIPTOR.message_types_by_name['SendManyRequest'] = _SENDMANYREQUEST
DESCRIPTOR.message_types_by_name['SendManyResponse'] = _SENDMANYRESPONSE
DESCRIPTOR.message_types_by_name['SendCoinsRequest'] = _SENDCOINSREQUEST
DESCRIPTOR.message_types_by_name['SendCoinsResponse'] = _SENDCOINSRESPONSE
DESCRIPTOR.message_types_by_name['NewAddressRequest'] = _NEWADDRESSREQUEST
DESCRIPTOR.message_types_by_name['NewWitnessAddressRequest'] = _NEWWITNESSADDRESSREQUEST
DESCRIPTOR.message_types_by_name['NewAddressResponse'] = _NEWADDRESSRESPONSE
DESCRIPTOR.message_types_by_name['SignMessageRequest'] = _SIGNMESSAGEREQUEST
DESCRIPTOR.message_types_by_name['SignMessageResponse'] = _SIGNMESSAGERESPONSE
DESCRIPTOR.message_types_by_name['VerifyMessageRequest'] = _VERIFYMESSAGEREQUEST
DESCRIPTOR.message_types_by_name['VerifyMessageResponse'] = _VERIFYMESSAGERESPONSE
DESCRIPTOR.message_types_by_name['ConnectPeerRequest'] = _CONNECTPEERREQUEST
DESCRIPTOR.message_types_by_name['ConnectPeerResponse'] = _CONNECTPEERRESPONSE
DESCRIPTOR.message_types_by_name['DisconnectPeerRequest'] = _DISCONNECTPEERREQUEST
DESCRIPTOR.message_types_by_name['DisconnectPeerResponse'] = _DISCONNECTPEERRESPONSE
DESCRIPTOR.message_types_by_name['HTLC'] = _HTLC
DESCRIPTOR.message_types_by_name['ActiveChannel'] = _ACTIVECHANNEL
DESCRIPTOR.message_types_by_name['ListChannelsRequest'] = _LISTCHANNELSREQUEST
DESCRIPTOR.message_types_by_name['ListChannelsResponse'] = _LISTCHANNELSRESPONSE
DESCRIPTOR.message_types_by_name['Peer'] = _PEER
DESCRIPTOR.message_types_by_name['ListPeersRequest'] = _LISTPEERSREQUEST
DESCRIPTOR.message_types_by_name['ListPeersResponse'] = _LISTPEERSRESPONSE
DESCRIPTOR.message_types_by_name['GetInfoRequest'] = _GETINFOREQUEST
DESCRIPTOR.message_types_by_name['GetInfoResponse'] = _GETINFORESPONSE
DESCRIPTOR.message_types_by_name['ConfirmationUpdate'] = _CONFIRMATIONUPDATE
DESCRIPTOR.message_types_by_name['ChannelOpenUpdate'] = _CHANNELOPENUPDATE
DESCRIPTOR.message_types_by_name['ChannelCloseUpdate'] = _CHANNELCLOSEUPDATE
DESCRIPTOR.message_types_by_name['CloseChannelRequest'] = _CLOSECHANNELREQUEST
DESCRIPTOR.message_types_by_name['CloseStatusUpdate'] = _CLOSESTATUSUPDATE
DESCRIPTOR.message_types_by_name['PendingUpdate'] = _PENDINGUPDATE
DESCRIPTOR.message_types_by_name['OpenChannelRequest'] = _OPENCHANNELREQUEST
DESCRIPTOR.message_types_by_name['OpenStatusUpdate'] = _OPENSTATUSUPDATE
DESCRIPTOR.message_types_by_name['PendingChannelRequest'] = _PENDINGCHANNELREQUEST
DESCRIPTOR.message_types_by_name['PendingChannelResponse'] = _PENDINGCHANNELRESPONSE
DESCRIPTOR.message_types_by_name['WalletBalanceRequest'] = _WALLETBALANCEREQUEST
DESCRIPTOR.message_types_by_name['WalletBalanceResponse'] = _WALLETBALANCERESPONSE
DESCRIPTOR.message_types_by_name['ChannelBalanceRequest'] = _CHANNELBALANCEREQUEST
DESCRIPTOR.message_types_by_name['ChannelBalanceResponse'] = _CHANNELBALANCERESPONSE
DESCRIPTOR.message_types_by_name['QueryRoutesRequest'] = _QUERYROUTESREQUEST
DESCRIPTOR.message_types_by_name['QueryRoutesResponse'] = _QUERYROUTESRESPONSE
DESCRIPTOR.message_types_by_name['Hop'] = _HOP
DESCRIPTOR.message_types_by_name['Route'] = _ROUTE
DESCRIPTOR.message_types_by_name['NodeInfoRequest'] = _NODEINFOREQUEST
DESCRIPTOR.message_types_by_name['NodeInfo'] = _NODEINFO
DESCRIPTOR.message_types_by_name['LightningNode'] = _LIGHTNINGNODE
DESCRIPTOR.message_types_by_name['NodeAddress'] = _NODEADDRESS
DESCRIPTOR.message_types_by_name['RoutingPolicy'] = _ROUTINGPOLICY
DESCRIPTOR.message_types_by_name['ChannelEdge'] = _CHANNELEDGE
DESCRIPTOR.message_types_by_name['ChannelGraphRequest'] = _CHANNELGRAPHREQUEST
DESCRIPTOR.message_types_by_name['ChannelGraph'] = _CHANNELGRAPH
DESCRIPTOR.message_types_by_name['ChanInfoRequest'] = _CHANINFOREQUEST
DESCRIPTOR.message_types_by_name['NetworkInfoRequest'] = _NETWORKINFOREQUEST
DESCRIPTOR.message_types_by_name['NetworkInfo'] = _NETWORKINFO
DESCRIPTOR.message_types_by_name['StopRequest'] = _STOPREQUEST
DESCRIPTOR.message_types_by_name['StopResponse'] = _STOPRESPONSE
DESCRIPTOR.message_types_by_name['GraphTopologySubscription'] = _GRAPHTOPOLOGYSUBSCRIPTION
DESCRIPTOR.message_types_by_name['GraphTopologyUpdate'] = _GRAPHTOPOLOGYUPDATE
DESCRIPTOR.message_types_by_name['NodeUpdate'] = _NODEUPDATE
DESCRIPTOR.message_types_by_name['ChannelEdgeUpdate'] = _CHANNELEDGEUPDATE
DESCRIPTOR.message_types_by_name['ClosedChannelUpdate'] = _CLOSEDCHANNELUPDATE
DESCRIPTOR.message_types_by_name['SetAliasRequest'] = _SETALIASREQUEST
DESCRIPTOR.message_types_by_name['SetAliasResponse'] = _SETALIASRESPONSE
DESCRIPTOR.message_types_by_name['Invoice'] = _INVOICE
DESCRIPTOR.message_types_by_name['AddInvoiceResponse'] = _ADDINVOICERESPONSE
DESCRIPTOR.message_types_by_name['PaymentHash'] = _PAYMENTHASH
DESCRIPTOR.message_types_by_name['ListInvoiceRequest'] = _LISTINVOICEREQUEST
DESCRIPTOR.message_types_by_name['ListInvoiceResponse'] = _LISTINVOICERESPONSE
DESCRIPTOR.message_types_by_name['InvoiceSubscription'] = _INVOICESUBSCRIPTION
DESCRIPTOR.message_types_by_name['Payment'] = _PAYMENT
DESCRIPTOR.message_types_by_name['ListPaymentsRequest'] = _LISTPAYMENTSREQUEST
DESCRIPTOR.message_types_by_name['ListPaymentsResponse'] = _LISTPAYMENTSRESPONSE
DESCRIPTOR.message_types_by_name['DeleteAllPaymentsRequest'] = _DELETEALLPAYMENTSREQUEST
DESCRIPTOR.message_types_by_name['DeleteAllPaymentsResponse'] = _DELETEALLPAYMENTSRESPONSE
DESCRIPTOR.message_types_by_name['DebugLevelRequest'] = _DEBUGLEVELREQUEST
DESCRIPTOR.message_types_by_name['DebugLevelResponse'] = _DEBUGLEVELRESPONSE
DESCRIPTOR.message_types_by_name['PayReqString'] = _PAYREQSTRING
DESCRIPTOR.message_types_by_name['PayReq'] = _PAYREQ
_sym_db.RegisterFileDescriptor(DESCRIPTOR)

Transaction = _reflection.GeneratedProtocolMessageType('Transaction', (_message.Message,), dict(
  DESCRIPTOR = _TRANSACTION,
  __module__ = 'rpc_pb2'
  # @@protoc_insertion_point(class_scope:lnrpc.Transaction)
  ))
_sym_db.RegisterMessage(Transaction)

GetTransactionsRequest = _reflection.GeneratedProtocolMessageType('GetTransactionsRequest', (_message.Message,), dict(
  DESCRIPTOR = _GETTRANSACTIONSREQUEST,
  __module__ = 'rpc_pb2'
  # @@protoc_insertion_point(class_scope:lnrpc.GetTransactionsRequest)
  ))
_sym_db.RegisterMessage(GetTransactionsRequest)

TransactionDetails = _reflection.GeneratedProtocolMessageType('TransactionDetails', (_message.Message,), dict(
  DESCRIPTOR = _TRANSACTIONDETAILS,
  __module__ = 'rpc_pb2'
  # @@protoc_insertion_point(class_scope:lnrpc.TransactionDetails)
  ))
_sym_db.RegisterMessage(TransactionDetails)

SendRequest = _reflection.GeneratedProtocolMessageType('SendRequest', (_message.Message,), dict(
  DESCRIPTOR = _SENDREQUEST,
  __module__ = 'rpc_pb2'
  # @@protoc_insertion_point(class_scope:lnrpc.SendRequest)
  ))
_sym_db.RegisterMessage(SendRequest)

SendResponse = _reflection.GeneratedProtocolMessageType('SendResponse', (_message.Message,), dict(
  DESCRIPTOR = _SENDRESPONSE,
  __module__ = 'rpc_pb2'
  # @@protoc_insertion_point(class_scope:lnrpc.SendResponse)
  ))
_sym_db.RegisterMessage(SendResponse)

ChannelPoint = _reflection.GeneratedProtocolMessageType('ChannelPoint', (_message.Message,), dict(
  DESCRIPTOR = _CHANNELPOINT,
  __module__ = 'rpc_pb2'
  # @@protoc_insertion_point(class_scope:lnrpc.ChannelPoint)
  ))
_sym_db.RegisterMessage(ChannelPoint)

LightningAddress = _reflection.GeneratedProtocolMessageType('LightningAddress', (_message.Message,), dict(
  DESCRIPTOR = _LIGHTNINGADDRESS,
  __module__ = 'rpc_pb2'
  # @@protoc_insertion_point(class_scope:lnrpc.LightningAddress)
  ))
_sym_db.RegisterMessage(LightningAddress)

SendManyRequest = _reflection.GeneratedProtocolMessageType('SendManyRequest', (_message.Message,), dict(

  AddrToAmountEntry = _reflection.GeneratedProtocolMessageType('AddrToAmountEntry', (_message.Message,), dict(
    DESCRIPTOR = _SENDMANYREQUEST_ADDRTOAMOUNTENTRY,
    __module__ = 'rpc_pb2'
    # @@protoc_insertion_point(class_scope:lnrpc.SendManyRequest.AddrToAmountEntry)
    ))
  ,
  DESCRIPTOR = _SENDMANYREQUEST,
  __module__ = 'rpc_pb2'
  # @@protoc_insertion_point(class_scope:lnrpc.SendManyRequest)
  ))
_sym_db.RegisterMessage(SendManyRequest)
_sym_db.RegisterMessage(SendManyRequest.AddrToAmountEntry)

SendManyResponse = _reflection.GeneratedProtocolMessageType('SendManyResponse', (_message.Message,), dict(
  DESCRIPTOR = _SENDMANYRESPONSE,
  __module__ = 'rpc_pb2'
  # @@protoc_insertion_point(class_scope:lnrpc.SendManyResponse)
  ))
_sym_db.RegisterMessage(SendManyResponse)

SendCoinsRequest = _reflection.GeneratedProtocolMessageType('SendCoinsRequest', (_message.Message,), dict(
  DESCRIPTOR = _SENDCOINSREQUEST,
  __module__ = 'rpc_pb2'
  # @@protoc_insertion_point(class_scope:lnrpc.SendCoinsRequest)
  ))
_sym_db.RegisterMessage(SendCoinsRequest)

SendCoinsResponse = _reflection.GeneratedProtocolMessageType('SendCoinsResponse', (_message.Message,), dict(
  DESCRIPTOR = _SENDCOINSRESPONSE,
  __module__ = 'rpc_pb2'
  # @@protoc_insertion_point(class_scope:lnrpc.SendCoinsResponse)
  ))
_sym_db.RegisterMessage(SendCoinsResponse)

NewAddressRequest = _reflection.GeneratedProtocolMessageType('NewAddressRequest', (_message.Message,), dict(
  DESCRIPTOR = _NEWADDRESSREQUEST,
  __module__ = 'rpc_pb2'
  # @@protoc_insertion_point(class_scope:lnrpc.NewAddressRequest)
  ))
_sym_db.RegisterMessage(NewAddressRequest)

NewWitnessAddressRequest = _reflection.GeneratedProtocolMessageType('NewWitnessAddressRequest', (_message.Message,), dict(
  DESCRIPTOR = _NEWWITNESSADDRESSREQUEST,
  __module__ = 'rpc_pb2'
  # @@protoc_insertion_point(class_scope:lnrpc.NewWitnessAddressRequest)
  ))
_sym_db.RegisterMessage(NewWitnessAddressRequest)

NewAddressResponse = _reflection.GeneratedProtocolMessageType('NewAddressResponse', (_message.Message,), dict(
  DESCRIPTOR = _NEWADDRESSRESPONSE,
  __module__ = 'rpc_pb2'
  # @@protoc_insertion_point(class_scope:lnrpc.NewAddressResponse)
  ))
_sym_db.RegisterMessage(NewAddressResponse)

SignMessageRequest = _reflection.GeneratedProtocolMessageType('SignMessageRequest', (_message.Message,), dict(
  DESCRIPTOR = _SIGNMESSAGEREQUEST,
  __module__ = 'rpc_pb2'
  # @@protoc_insertion_point(class_scope:lnrpc.SignMessageRequest)
  ))
_sym_db.RegisterMessage(SignMessageRequest)

SignMessageResponse = _reflection.GeneratedProtocolMessageType('SignMessageResponse', (_message.Message,), dict(
  DESCRIPTOR = _SIGNMESSAGERESPONSE,
  __module__ = 'rpc_pb2'
  # @@protoc_insertion_point(class_scope:lnrpc.SignMessageResponse)
  ))
_sym_db.RegisterMessage(SignMessageResponse)

VerifyMessageRequest = _reflection.GeneratedProtocolMessageType('VerifyMessageRequest', (_message.Message,), dict(
  DESCRIPTOR = _VERIFYMESSAGEREQUEST,
  __module__ = 'rpc_pb2'
  # @@protoc_insertion_point(class_scope:lnrpc.VerifyMessageRequest)
  ))
_sym_db.RegisterMessage(VerifyMessageRequest)

VerifyMessageResponse = _reflection.GeneratedProtocolMessageType('VerifyMessageResponse', (_message.Message,), dict(
  DESCRIPTOR = _VERIFYMESSAGERESPONSE,
  __module__ = 'rpc_pb2'
  # @@protoc_insertion_point(class_scope:lnrpc.VerifyMessageResponse)
  ))
_sym_db.RegisterMessage(VerifyMessageResponse)

ConnectPeerRequest = _reflection.GeneratedProtocolMessageType('ConnectPeerRequest', (_message.Message,), dict(
  DESCRIPTOR = _CONNECTPEERREQUEST,
  __module__ = 'rpc_pb2'
  # @@protoc_insertion_point(class_scope:lnrpc.ConnectPeerRequest)
  ))
_sym_db.RegisterMessage(ConnectPeerRequest)

ConnectPeerResponse = _reflection.GeneratedProtocolMessageType('ConnectPeerResponse', (_message.Message,), dict(
  DESCRIPTOR = _CONNECTPEERRESPONSE,
  __module__ = 'rpc_pb2'
  # @@protoc_insertion_point(class_scope:lnrpc.ConnectPeerResponse)
  ))
_sym_db.RegisterMessage(ConnectPeerResponse)

DisconnectPeerRequest = _reflection.GeneratedProtocolMessageType('DisconnectPeerRequest', (_message.Message,), dict(
  DESCRIPTOR = _DISCONNECTPEERREQUEST,
  __module__ = 'rpc_pb2'
  # @@protoc_insertion_point(class_scope:lnrpc.DisconnectPeerRequest)
  ))
_sym_db.RegisterMessage(DisconnectPeerRequest)

DisconnectPeerResponse = _reflection.GeneratedProtocolMessageType('DisconnectPeerResponse', (_message.Message,), dict(
  DESCRIPTOR = _DISCONNECTPEERRESPONSE,
  __module__ = 'rpc_pb2'
  # @@protoc_insertion_point(class_scope:lnrpc.DisconnectPeerResponse)
  ))
_sym_db.RegisterMessage(DisconnectPeerResponse)

HTLC = _reflection.GeneratedProtocolMessageType('HTLC', (_message.Message,), dict(
  DESCRIPTOR = _HTLC,
  __module__ = 'rpc_pb2'
  # @@protoc_insertion_point(class_scope:lnrpc.HTLC)
  ))
_sym_db.RegisterMessage(HTLC)

ActiveChannel = _reflection.GeneratedProtocolMessageType('ActiveChannel', (_message.Message,), dict(
  DESCRIPTOR = _ACTIVECHANNEL,
  __module__ = 'rpc_pb2'
  # @@protoc_insertion_point(class_scope:lnrpc.ActiveChannel)
  ))
_sym_db.RegisterMessage(ActiveChannel)

ListChannelsRequest = _reflection.GeneratedProtocolMessageType('ListChannelsRequest', (_message.Message,), dict(
  DESCRIPTOR = _LISTCHANNELSREQUEST,
  __module__ = 'rpc_pb2'
  # @@protoc_insertion_point(class_scope:lnrpc.ListChannelsRequest)
  ))
_sym_db.RegisterMessage(ListChannelsRequest)

ListChannelsResponse = _reflection.GeneratedProtocolMessageType('ListChannelsResponse', (_message.Message,), dict(
  DESCRIPTOR = _LISTCHANNELSRESPONSE,
  __module__ = 'rpc_pb2'
  # @@protoc_insertion_point(class_scope:lnrpc.ListChannelsResponse)
  ))
_sym_db.RegisterMessage(ListChannelsResponse)

Peer = _reflection.GeneratedProtocolMessageType('Peer', (_message.Message,), dict(
  DESCRIPTOR = _PEER,
  __module__ = 'rpc_pb2'
  # @@protoc_insertion_point(class_scope:lnrpc.Peer)
  ))
_sym_db.RegisterMessage(Peer)

ListPeersRequest = _reflection.GeneratedProtocolMessageType('ListPeersRequest', (_message.Message,), dict(
  DESCRIPTOR = _LISTPEERSREQUEST,
  __module__ = 'rpc_pb2'
  # @@protoc_insertion_point(class_scope:lnrpc.ListPeersRequest)
  ))
_sym_db.RegisterMessage(ListPeersRequest)

ListPeersResponse = _reflection.GeneratedProtocolMessageType('ListPeersResponse', (_message.Message,), dict(
  DESCRIPTOR = _LISTPEERSRESPONSE,
  __module__ = 'rpc_pb2'
  # @@protoc_insertion_point(class_scope:lnrpc.ListPeersResponse)
  ))
_sym_db.RegisterMessage(ListPeersResponse)

GetInfoRequest = _reflection.GeneratedProtocolMessageType('GetInfoRequest', (_message.Message,), dict(
  DESCRIPTOR = _GETINFOREQUEST,
  __module__ = 'rpc_pb2'
  # @@protoc_insertion_point(class_scope:lnrpc.GetInfoRequest)
  ))
_sym_db.RegisterMessage(GetInfoRequest)

GetInfoResponse = _reflection.GeneratedProtocolMessageType('GetInfoResponse', (_message.Message,), dict(
  DESCRIPTOR = _GETINFORESPONSE,
  __module__ = 'rpc_pb2'
  # @@protoc_insertion_point(class_scope:lnrpc.GetInfoResponse)
  ))
_sym_db.RegisterMessage(GetInfoResponse)

ConfirmationUpdate = _reflection.GeneratedProtocolMessageType('ConfirmationUpdate', (_message.Message,), dict(
  DESCRIPTOR = _CONFIRMATIONUPDATE,
  __module__ = 'rpc_pb2'
  # @@protoc_insertion_point(class_scope:lnrpc.ConfirmationUpdate)
  ))
_sym_db.RegisterMessage(ConfirmationUpdate)

ChannelOpenUpdate = _reflection.GeneratedProtocolMessageType('ChannelOpenUpdate', (_message.Message,), dict(
  DESCRIPTOR = _CHANNELOPENUPDATE,
  __module__ = 'rpc_pb2'
  # @@protoc_insertion_point(class_scope:lnrpc.ChannelOpenUpdate)
  ))
_sym_db.RegisterMessage(ChannelOpenUpdate)

ChannelCloseUpdate = _reflection.GeneratedProtocolMessageType('ChannelCloseUpdate', (_message.Message,), dict(
  DESCRIPTOR = _CHANNELCLOSEUPDATE,
  __module__ = 'rpc_pb2'
  # @@protoc_insertion_point(class_scope:lnrpc.ChannelCloseUpdate)
  ))
_sym_db.RegisterMessage(ChannelCloseUpdate)

CloseChannelRequest = _reflection.GeneratedProtocolMessageType('CloseChannelRequest', (_message.Message,), dict(
  DESCRIPTOR = _CLOSECHANNELREQUEST,
  __module__ = 'rpc_pb2'
  # @@protoc_insertion_point(class_scope:lnrpc.CloseChannelRequest)
  ))
_sym_db.RegisterMessage(CloseChannelRequest)

CloseStatusUpdate = _reflection.GeneratedProtocolMessageType('CloseStatusUpdate', (_message.Message,), dict(
  DESCRIPTOR = _CLOSESTATUSUPDATE,
  __module__ = 'rpc_pb2'
  # @@protoc_insertion_point(class_scope:lnrpc.CloseStatusUpdate)
  ))
_sym_db.RegisterMessage(CloseStatusUpdate)

PendingUpdate = _reflection.GeneratedProtocolMessageType('PendingUpdate', (_message.Message,), dict(
  DESCRIPTOR = _PENDINGUPDATE,
  __module__ = 'rpc_pb2'
  # @@protoc_insertion_point(class_scope:lnrpc.PendingUpdate)
  ))
_sym_db.RegisterMessage(PendingUpdate)

OpenChannelRequest = _reflection.GeneratedProtocolMessageType('OpenChannelRequest', (_message.Message,), dict(
  DESCRIPTOR = _OPENCHANNELREQUEST,
  __module__ = 'rpc_pb2'
  # @@protoc_insertion_point(class_scope:lnrpc.OpenChannelRequest)
  ))
_sym_db.RegisterMessage(OpenChannelRequest)

OpenStatusUpdate = _reflection.GeneratedProtocolMessageType('OpenStatusUpdate', (_message.Message,), dict(
  DESCRIPTOR = _OPENSTATUSUPDATE,
  __module__ = 'rpc_pb2'
  # @@protoc_insertion_point(class_scope:lnrpc.OpenStatusUpdate)
  ))
_sym_db.RegisterMessage(OpenStatusUpdate)

PendingChannelRequest = _reflection.GeneratedProtocolMessageType('PendingChannelRequest', (_message.Message,), dict(
  DESCRIPTOR = _PENDINGCHANNELREQUEST,
  __module__ = 'rpc_pb2'
  # @@protoc_insertion_point(class_scope:lnrpc.PendingChannelRequest)
  ))
_sym_db.RegisterMessage(PendingChannelRequest)

PendingChannelResponse = _reflection.GeneratedProtocolMessageType('PendingChannelResponse', (_message.Message,), dict(

  PendingChannel = _reflection.GeneratedProtocolMessageType('PendingChannel', (_message.Message,), dict(
    DESCRIPTOR = _PENDINGCHANNELRESPONSE_PENDINGCHANNEL,
    __module__ = 'rpc_pb2'
    # @@protoc_insertion_point(class_scope:lnrpc.PendingChannelResponse.PendingChannel)
    ))
  ,

  PendingOpenChannel = _reflection.GeneratedProtocolMessageType('PendingOpenChannel', (_message.Message,), dict(
    DESCRIPTOR = _PENDINGCHANNELRESPONSE_PENDINGOPENCHANNEL,
    __module__ = 'rpc_pb2'
    # @@protoc_insertion_point(class_scope:lnrpc.PendingChannelResponse.PendingOpenChannel)
    ))
  ,

  ClosedChannel = _reflection.GeneratedProtocolMessageType('ClosedChannel', (_message.Message,), dict(
    DESCRIPTOR = _PENDINGCHANNELRESPONSE_CLOSEDCHANNEL,
    __module__ = 'rpc_pb2'
    # @@protoc_insertion_point(class_scope:lnrpc.PendingChannelResponse.ClosedChannel)
    ))
  ,

  ForceClosedChannel = _reflection.GeneratedProtocolMessageType('ForceClosedChannel', (_message.Message,), dict(
    DESCRIPTOR = _PENDINGCHANNELRESPONSE_FORCECLOSEDCHANNEL,
    __module__ = 'rpc_pb2'
    # @@protoc_insertion_point(class_scope:lnrpc.PendingChannelResponse.ForceClosedChannel)
    ))
  ,
  DESCRIPTOR = _PENDINGCHANNELRESPONSE,
  __module__ = 'rpc_pb2'
  # @@protoc_insertion_point(class_scope:lnrpc.PendingChannelResponse)
  ))
_sym_db.RegisterMessage(PendingChannelResponse)
_sym_db.RegisterMessage(PendingChannelResponse.PendingChannel)
_sym_db.RegisterMessage(PendingChannelResponse.PendingOpenChannel)
_sym_db.RegisterMessage(PendingChannelResponse.ClosedChannel)
_sym_db.RegisterMessage(PendingChannelResponse.ForceClosedChannel)

WalletBalanceRequest = _reflection.GeneratedProtocolMessageType('WalletBalanceRequest', (_message.Message,), dict(
  DESCRIPTOR = _WALLETBALANCEREQUEST,
  __module__ = 'rpc_pb2'
  # @@protoc_insertion_point(class_scope:lnrpc.WalletBalanceRequest)
  ))
_sym_db.RegisterMessage(WalletBalanceRequest)

WalletBalanceResponse = _reflection.GeneratedProtocolMessageType('WalletBalanceResponse', (_message.Message,), dict(
  DESCRIPTOR = _WALLETBALANCERESPONSE,
  __module__ = 'rpc_pb2'
  # @@protoc_insertion_point(class_scope:lnrpc.WalletBalanceResponse)
  ))
_sym_db.RegisterMessage(WalletBalanceResponse)

ChannelBalanceRequest = _reflection.GeneratedProtocolMessageType('ChannelBalanceRequest', (_message.Message,), dict(
  DESCRIPTOR = _CHANNELBALANCEREQUEST,
  __module__ = 'rpc_pb2'
  # @@protoc_insertion_point(class_scope:lnrpc.ChannelBalanceRequest)
  ))
_sym_db.RegisterMessage(ChannelBalanceRequest)

ChannelBalanceResponse = _reflection.GeneratedProtocolMessageType('ChannelBalanceResponse', (_message.Message,), dict(
  DESCRIPTOR = _CHANNELBALANCERESPONSE,
  __module__ = 'rpc_pb2'
  # @@protoc_insertion_point(class_scope:lnrpc.ChannelBalanceResponse)
  ))
_sym_db.RegisterMessage(ChannelBalanceResponse)

QueryRoutesRequest = _reflection.GeneratedProtocolMessageType('QueryRoutesRequest', (_message.Message,), dict(
  DESCRIPTOR = _QUERYROUTESREQUEST,
  __module__ = 'rpc_pb2'
  # @@protoc_insertion_point(class_scope:lnrpc.QueryRoutesRequest)
  ))
_sym_db.RegisterMessage(QueryRoutesRequest)

QueryRoutesResponse = _reflection.GeneratedProtocolMessageType('QueryRoutesResponse', (_message.Message,), dict(
  DESCRIPTOR = _QUERYROUTESRESPONSE,
  __module__ = 'rpc_pb2'
  # @@protoc_insertion_point(class_scope:lnrpc.QueryRoutesResponse)
  ))
_sym_db.RegisterMessage(QueryRoutesResponse)

Hop = _reflection.GeneratedProtocolMessageType('Hop', (_message.Message,), dict(
  DESCRIPTOR = _HOP,
  __module__ = 'rpc_pb2'
  # @@protoc_insertion_point(class_scope:lnrpc.Hop)
  ))
_sym_db.RegisterMessage(Hop)

Route = _reflection.GeneratedProtocolMessageType('Route', (_message.Message,), dict(
  DESCRIPTOR = _ROUTE,
  __module__ = 'rpc_pb2'
  # @@protoc_insertion_point(class_scope:lnrpc.Route)
  ))
_sym_db.RegisterMessage(Route)

NodeInfoRequest = _reflection.GeneratedProtocolMessageType('NodeInfoRequest', (_message.Message,), dict(
  DESCRIPTOR = _NODEINFOREQUEST,
  __module__ = 'rpc_pb2'
  # @@protoc_insertion_point(class_scope:lnrpc.NodeInfoRequest)
  ))
_sym_db.RegisterMessage(NodeInfoRequest)

NodeInfo = _reflection.GeneratedProtocolMessageType('NodeInfo', (_message.Message,), dict(
  DESCRIPTOR = _NODEINFO,
  __module__ = 'rpc_pb2'
  # @@protoc_insertion_point(class_scope:lnrpc.NodeInfo)
  ))
_sym_db.RegisterMessage(NodeInfo)

LightningNode = _reflection.GeneratedProtocolMessageType('LightningNode', (_message.Message,), dict(
  DESCRIPTOR = _LIGHTNINGNODE,
  __module__ = 'rpc_pb2'
  # @@protoc_insertion_point(class_scope:lnrpc.LightningNode)
  ))
_sym_db.RegisterMessage(LightningNode)

NodeAddress = _reflection.GeneratedProtocolMessageType('NodeAddress', (_message.Message,), dict(
  DESCRIPTOR = _NODEADDRESS,
  __module__ = 'rpc_pb2'
  # @@protoc_insertion_point(class_scope:lnrpc.NodeAddress)
  ))
_sym_db.RegisterMessage(NodeAddress)

RoutingPolicy = _reflection.GeneratedProtocolMessageType('RoutingPolicy', (_message.Message,), dict(
  DESCRIPTOR = _ROUTINGPOLICY,
  __module__ = 'rpc_pb2'
  # @@protoc_insertion_point(class_scope:lnrpc.RoutingPolicy)
  ))
_sym_db.RegisterMessage(RoutingPolicy)

ChannelEdge = _reflection.GeneratedProtocolMessageType('ChannelEdge', (_message.Message,), dict(
  DESCRIPTOR = _CHANNELEDGE,
  __module__ = 'rpc_pb2'
  # @@protoc_insertion_point(class_scope:lnrpc.ChannelEdge)
  ))
_sym_db.RegisterMessage(ChannelEdge)

ChannelGraphRequest = _reflection.GeneratedProtocolMessageType('ChannelGraphRequest', (_message.Message,), dict(
  DESCRIPTOR = _CHANNELGRAPHREQUEST,
  __module__ = 'rpc_pb2'
  # @@protoc_insertion_point(class_scope:lnrpc.ChannelGraphRequest)
  ))
_sym_db.RegisterMessage(ChannelGraphRequest)

ChannelGraph = _reflection.GeneratedProtocolMessageType('ChannelGraph', (_message.Message,), dict(
  DESCRIPTOR = _CHANNELGRAPH,
  __module__ = 'rpc_pb2'
  # @@protoc_insertion_point(class_scope:lnrpc.ChannelGraph)
  ))
_sym_db.RegisterMessage(ChannelGraph)

ChanInfoRequest = _reflection.GeneratedProtocolMessageType('ChanInfoRequest', (_message.Message,), dict(
  DESCRIPTOR = _CHANINFOREQUEST,
  __module__ = 'rpc_pb2'
  # @@protoc_insertion_point(class_scope:lnrpc.ChanInfoRequest)
  ))
_sym_db.RegisterMessage(ChanInfoRequest)

NetworkInfoRequest = _reflection.GeneratedProtocolMessageType('NetworkInfoRequest', (_message.Message,), dict(
  DESCRIPTOR = _NETWORKINFOREQUEST,
  __module__ = 'rpc_pb2'
  # @@protoc_insertion_point(class_scope:lnrpc.NetworkInfoRequest)
  ))
_sym_db.RegisterMessage(NetworkInfoRequest)

NetworkInfo = _reflection.GeneratedProtocolMessageType('NetworkInfo', (_message.Message,), dict(
  DESCRIPTOR = _NETWORKINFO,
  __module__ = 'rpc_pb2'
  # @@protoc_insertion_point(class_scope:lnrpc.NetworkInfo)
  ))
_sym_db.RegisterMessage(NetworkInfo)

StopRequest = _reflection.GeneratedProtocolMessageType('StopRequest', (_message.Message,), dict(
  DESCRIPTOR = _STOPREQUEST,
  __module__ = 'rpc_pb2'
  # @@protoc_insertion_point(class_scope:lnrpc.StopRequest)
  ))
_sym_db.RegisterMessage(StopRequest)

StopResponse = _reflection.GeneratedProtocolMessageType('StopResponse', (_message.Message,), dict(
  DESCRIPTOR = _STOPRESPONSE,
  __module__ = 'rpc_pb2'
  # @@protoc_insertion_point(class_scope:lnrpc.StopResponse)
  ))
_sym_db.RegisterMessage(StopResponse)

GraphTopologySubscription = _reflection.GeneratedProtocolMessageType('GraphTopologySubscription', (_message.Message,), dict(
  DESCRIPTOR = _GRAPHTOPOLOGYSUBSCRIPTION,
  __module__ = 'rpc_pb2'
  # @@protoc_insertion_point(class_scope:lnrpc.GraphTopologySubscription)
  ))
_sym_db.RegisterMessage(GraphTopologySubscription)

GraphTopologyUpdate = _reflection.GeneratedProtocolMessageType('GraphTopologyUpdate', (_message.Message,), dict(
  DESCRIPTOR = _GRAPHTOPOLOGYUPDATE,
  __module__ = 'rpc_pb2'
  # @@protoc_insertion_point(class_scope:lnrpc.GraphTopologyUpdate)
  ))
_sym_db.RegisterMessage(GraphTopologyUpdate)

NodeUpdate = _reflection.GeneratedProtocolMessageType('NodeUpdate', (_message.Message,), dict(
  DESCRIPTOR = _NODEUPDATE,
  __module__ = 'rpc_pb2'
  # @@protoc_insertion_point(class_scope:lnrpc.NodeUpdate)
  ))
_sym_db.RegisterMessage(NodeUpdate)

ChannelEdgeUpdate = _reflection.GeneratedProtocolMessageType('ChannelEdgeUpdate', (_message.Message,), dict(
  DESCRIPTOR = _CHANNELEDGEUPDATE,
  __module__ = 'rpc_pb2'
  # @@protoc_insertion_point(class_scope:lnrpc.ChannelEdgeUpdate)
  ))
_sym_db.RegisterMessage(ChannelEdgeUpdate)

ClosedChannelUpdate = _reflection.GeneratedProtocolMessageType('ClosedChannelUpdate', (_message.Message,), dict(
  DESCRIPTOR = _CLOSEDCHANNELUPDATE,
  __module__ = 'rpc_pb2'
  # @@protoc_insertion_point(class_scope:lnrpc.ClosedChannelUpdate)
  ))
_sym_db.RegisterMessage(ClosedChannelUpdate)

SetAliasRequest = _reflection.GeneratedProtocolMessageType('SetAliasRequest', (_message.Message,), dict(
  DESCRIPTOR = _SETALIASREQUEST,
  __module__ = 'rpc_pb2'
  # @@protoc_insertion_point(class_scope:lnrpc.SetAliasRequest)
  ))
_sym_db.RegisterMessage(SetAliasRequest)

SetAliasResponse = _reflection.GeneratedProtocolMessageType('SetAliasResponse', (_message.Message,), dict(
  DESCRIPTOR = _SETALIASRESPONSE,
  __module__ = 'rpc_pb2'
  # @@protoc_insertion_point(class_scope:lnrpc.SetAliasResponse)
  ))
_sym_db.RegisterMessage(SetAliasResponse)

Invoice = _reflection.GeneratedProtocolMessageType('Invoice', (_message.Message,), dict(
  DESCRIPTOR = _INVOICE,
  __module__ = 'rpc_pb2'
  # @@protoc_insertion_point(class_scope:lnrpc.Invoice)
  ))
_sym_db.RegisterMessage(Invoice)

AddInvoiceResponse = _reflection.GeneratedProtocolMessageType('AddInvoiceResponse', (_message.Message,), dict(
  DESCRIPTOR = _ADDINVOICERESPONSE,
  __module__ = 'rpc_pb2'
  # @@protoc_insertion_point(class_scope:lnrpc.AddInvoiceResponse)
  ))
_sym_db.RegisterMessage(AddInvoiceResponse)

PaymentHash = _reflection.GeneratedProtocolMessageType('PaymentHash', (_message.Message,), dict(
  DESCRIPTOR = _PAYMENTHASH,
  __module__ = 'rpc_pb2'
  # @@protoc_insertion_point(class_scope:lnrpc.PaymentHash)
  ))
_sym_db.RegisterMessage(PaymentHash)

ListInvoiceRequest = _reflection.GeneratedProtocolMessageType('ListInvoiceRequest', (_message.Message,), dict(
  DESCRIPTOR = _LISTINVOICEREQUEST,
  __module__ = 'rpc_pb2'
  # @@protoc_insertion_point(class_scope:lnrpc.ListInvoiceRequest)
  ))
_sym_db.RegisterMessage(ListInvoiceRequest)

ListInvoiceResponse = _reflection.GeneratedProtocolMessageType('ListInvoiceResponse', (_message.Message,), dict(
  DESCRIPTOR = _LISTINVOICERESPONSE,
  __module__ = 'rpc_pb2'
  # @@protoc_insertion_point(class_scope:lnrpc.ListInvoiceResponse)
  ))
_sym_db.RegisterMessage(ListInvoiceResponse)

InvoiceSubscription = _reflection.GeneratedProtocolMessageType('InvoiceSubscription', (_message.Message,), dict(
  DESCRIPTOR = _INVOICESUBSCRIPTION,
  __module__ = 'rpc_pb2'
  # @@protoc_insertion_point(class_scope:lnrpc.InvoiceSubscription)
  ))
_sym_db.RegisterMessage(InvoiceSubscription)

Payment = _reflection.GeneratedProtocolMessageType('Payment', (_message.Message,), dict(
  DESCRIPTOR = _PAYMENT,
  __module__ = 'rpc_pb2'
  # @@protoc_insertion_point(class_scope:lnrpc.Payment)
  ))
_sym_db.RegisterMessage(Payment)

ListPaymentsRequest = _reflection.GeneratedProtocolMessageType('ListPaymentsRequest', (_message.Message,), dict(
  DESCRIPTOR = _LISTPAYMENTSREQUEST,
  __module__ = 'rpc_pb2'
  # @@protoc_insertion_point(class_scope:lnrpc.ListPaymentsRequest)
  ))
_sym_db.RegisterMessage(ListPaymentsRequest)

ListPaymentsResponse = _reflection.GeneratedProtocolMessageType('ListPaymentsResponse', (_message.Message,), dict(
  DESCRIPTOR = _LISTPAYMENTSRESPONSE,
  __module__ = 'rpc_pb2'
  # @@protoc_insertion_point(class_scope:lnrpc.ListPaymentsResponse)
  ))
_sym_db.RegisterMessage(ListPaymentsResponse)

DeleteAllPaymentsRequest = _reflection.GeneratedProtocolMessageType('DeleteAllPaymentsRequest', (_message.Message,), dict(
  DESCRIPTOR = _DELETEALLPAYMENTSREQUEST,
  __module__ = 'rpc_pb2'
  # @@protoc_insertion_point(class_scope:lnrpc.DeleteAllPaymentsRequest)
  ))
_sym_db.RegisterMessage(DeleteAllPaymentsRequest)

DeleteAllPaymentsResponse = _reflection.GeneratedProtocolMessageType('DeleteAllPaymentsResponse', (_message.Message,), dict(
  DESCRIPTOR = _DELETEALLPAYMENTSRESPONSE,
  __module__ = 'rpc_pb2'
  # @@protoc_insertion_point(class_scope:lnrpc.DeleteAllPaymentsResponse)
  ))
_sym_db.RegisterMessage(DeleteAllPaymentsResponse)

DebugLevelRequest = _reflection.GeneratedProtocolMessageType('DebugLevelRequest', (_message.Message,), dict(
  DESCRIPTOR = _DEBUGLEVELREQUEST,
  __module__ = 'rpc_pb2'
  # @@protoc_insertion_point(class_scope:lnrpc.DebugLevelRequest)
  ))
_sym_db.RegisterMessage(DebugLevelRequest)

DebugLevelResponse = _reflection.GeneratedProtocolMessageType('DebugLevelResponse', (_message.Message,), dict(
  DESCRIPTOR = _DEBUGLEVELRESPONSE,
  __module__ = 'rpc_pb2'
  # @@protoc_insertion_point(class_scope:lnrpc.DebugLevelResponse)
  ))
_sym_db.RegisterMessage(DebugLevelResponse)

PayReqString = _reflection.GeneratedProtocolMessageType('PayReqString', (_message.Message,), dict(
  DESCRIPTOR = _PAYREQSTRING,
  __module__ = 'rpc_pb2'
  # @@protoc_insertion_point(class_scope:lnrpc.PayReqString)
  ))
_sym_db.RegisterMessage(PayReqString)

PayReq = _reflection.GeneratedProtocolMessageType('PayReq', (_message.Message,), dict(
  DESCRIPTOR = _PAYREQ,
  __module__ = 'rpc_pb2'
  # @@protoc_insertion_point(class_scope:lnrpc.PayReq)
  ))
_sym_db.RegisterMessage(PayReq)


_SENDMANYREQUEST_ADDRTOAMOUNTENTRY.has_options = True
_SENDMANYREQUEST_ADDRTOAMOUNTENTRY._options = _descriptor._ParseOptions(descriptor_pb2.MessageOptions(), _b('8\001'))
try:
  # THESE ELEMENTS WILL BE DEPRECATED.
  # Please use the generated *_pb2_grpc.py files instead.
  import grpc
  from grpc.beta import implementations as beta_implementations
  from grpc.beta import interfaces as beta_interfaces
  from grpc.framework.common import cardinality
  from grpc.framework.interfaces.face import utilities as face_utilities


  class LightningStub(object):
    # missing associated documentation comment in .proto file
    pass

    def __init__(self, channel):
      """Constructor.

      Args:
        channel: A grpc.Channel.
      """
      self.WalletBalance = channel.unary_unary(
          '/lnrpc.Lightning/WalletBalance',
          request_serializer=WalletBalanceRequest.SerializeToString,
          response_deserializer=WalletBalanceResponse.FromString,
          )
      self.ChannelBalance = channel.unary_unary(
          '/lnrpc.Lightning/ChannelBalance',
          request_serializer=ChannelBalanceRequest.SerializeToString,
          response_deserializer=ChannelBalanceResponse.FromString,
          )
      self.GetTransactions = channel.unary_unary(
          '/lnrpc.Lightning/GetTransactions',
          request_serializer=GetTransactionsRequest.SerializeToString,
          response_deserializer=TransactionDetails.FromString,
          )
      self.SendCoins = channel.unary_unary(
          '/lnrpc.Lightning/SendCoins',
          request_serializer=SendCoinsRequest.SerializeToString,
          response_deserializer=SendCoinsResponse.FromString,
          )
      self.SubscribeTransactions = channel.unary_stream(
          '/lnrpc.Lightning/SubscribeTransactions',
          request_serializer=GetTransactionsRequest.SerializeToString,
          response_deserializer=Transaction.FromString,
          )
      self.SendMany = channel.unary_unary(
          '/lnrpc.Lightning/SendMany',
          request_serializer=SendManyRequest.SerializeToString,
          response_deserializer=SendManyResponse.FromString,
          )
      self.NewAddress = channel.unary_unary(
          '/lnrpc.Lightning/NewAddress',
          request_serializer=NewAddressRequest.SerializeToString,
          response_deserializer=NewAddressResponse.FromString,
          )
      self.NewWitnessAddress = channel.unary_unary(
          '/lnrpc.Lightning/NewWitnessAddress',
          request_serializer=NewWitnessAddressRequest.SerializeToString,
          response_deserializer=NewAddressResponse.FromString,
          )
      self.SignMessage = channel.unary_unary(
          '/lnrpc.Lightning/SignMessage',
          request_serializer=SignMessageRequest.SerializeToString,
          response_deserializer=SignMessageResponse.FromString,
          )
      self.VerifyMessage = channel.unary_unary(
          '/lnrpc.Lightning/VerifyMessage',
          request_serializer=VerifyMessageRequest.SerializeToString,
          response_deserializer=VerifyMessageResponse.FromString,
          )
      self.ConnectPeer = channel.unary_unary(
          '/lnrpc.Lightning/ConnectPeer',
          request_serializer=ConnectPeerRequest.SerializeToString,
          response_deserializer=ConnectPeerResponse.FromString,
          )
      self.DisconnectPeer = channel.unary_unary(
          '/lnrpc.Lightning/DisconnectPeer',
          request_serializer=DisconnectPeerRequest.SerializeToString,
          response_deserializer=DisconnectPeerResponse.FromString,
          )
      self.ListPeers = channel.unary_unary(
          '/lnrpc.Lightning/ListPeers',
          request_serializer=ListPeersRequest.SerializeToString,
          response_deserializer=ListPeersResponse.FromString,
          )
      self.GetInfo = channel.unary_unary(
          '/lnrpc.Lightning/GetInfo',
          request_serializer=GetInfoRequest.SerializeToString,
          response_deserializer=GetInfoResponse.FromString,
          )
      self.PendingChannels = channel.unary_unary(
          '/lnrpc.Lightning/PendingChannels',
          request_serializer=PendingChannelRequest.SerializeToString,
          response_deserializer=PendingChannelResponse.FromString,
          )
      self.ListChannels = channel.unary_unary(
          '/lnrpc.Lightning/ListChannels',
          request_serializer=ListChannelsRequest.SerializeToString,
          response_deserializer=ListChannelsResponse.FromString,
          )
      self.OpenChannelSync = channel.unary_unary(
          '/lnrpc.Lightning/OpenChannelSync',
          request_serializer=OpenChannelRequest.SerializeToString,
          response_deserializer=ChannelPoint.FromString,
          )
      self.OpenChannel = channel.unary_stream(
          '/lnrpc.Lightning/OpenChannel',
          request_serializer=OpenChannelRequest.SerializeToString,
          response_deserializer=OpenStatusUpdate.FromString,
          )
      self.CloseChannel = channel.unary_stream(
          '/lnrpc.Lightning/CloseChannel',
          request_serializer=CloseChannelRequest.SerializeToString,
          response_deserializer=CloseStatusUpdate.FromString,
          )
      self.SendPayment = channel.stream_stream(
          '/lnrpc.Lightning/SendPayment',
          request_serializer=SendRequest.SerializeToString,
          response_deserializer=SendResponse.FromString,
          )
      self.SendPaymentSync = channel.unary_unary(
          '/lnrpc.Lightning/SendPaymentSync',
          request_serializer=SendRequest.SerializeToString,
          response_deserializer=SendResponse.FromString,
          )
      self.AddInvoice = channel.unary_unary(
          '/lnrpc.Lightning/AddInvoice',
          request_serializer=Invoice.SerializeToString,
          response_deserializer=AddInvoiceResponse.FromString,
          )
      self.ListInvoices = channel.unary_unary(
          '/lnrpc.Lightning/ListInvoices',
          request_serializer=ListInvoiceRequest.SerializeToString,
          response_deserializer=ListInvoiceResponse.FromString,
          )
      self.LookupInvoice = channel.unary_unary(
          '/lnrpc.Lightning/LookupInvoice',
          request_serializer=PaymentHash.SerializeToString,
          response_deserializer=Invoice.FromString,
          )
      self.SubscribeInvoices = channel.unary_stream(
          '/lnrpc.Lightning/SubscribeInvoices',
          request_serializer=InvoiceSubscription.SerializeToString,
          response_deserializer=Invoice.FromString,
          )
      self.DecodePayReq = channel.unary_unary(
          '/lnrpc.Lightning/DecodePayReq',
          request_serializer=PayReqString.SerializeToString,
          response_deserializer=PayReq.FromString,
          )
      self.ListPayments = channel.unary_unary(
          '/lnrpc.Lightning/ListPayments',
          request_serializer=ListPaymentsRequest.SerializeToString,
          response_deserializer=ListPaymentsResponse.FromString,
          )
      self.DeleteAllPayments = channel.unary_unary(
          '/lnrpc.Lightning/DeleteAllPayments',
          request_serializer=DeleteAllPaymentsRequest.SerializeToString,
          response_deserializer=DeleteAllPaymentsResponse.FromString,
          )
      self.DescribeGraph = channel.unary_unary(
          '/lnrpc.Lightning/DescribeGraph',
          request_serializer=ChannelGraphRequest.SerializeToString,
          response_deserializer=ChannelGraph.FromString,
          )
      self.GetChanInfo = channel.unary_unary(
          '/lnrpc.Lightning/GetChanInfo',
          request_serializer=ChanInfoRequest.SerializeToString,
          response_deserializer=ChannelEdge.FromString,
          )
      self.GetNodeInfo = channel.unary_unary(
          '/lnrpc.Lightning/GetNodeInfo',
          request_serializer=NodeInfoRequest.SerializeToString,
          response_deserializer=NodeInfo.FromString,
          )
      self.QueryRoutes = channel.unary_unary(
          '/lnrpc.Lightning/QueryRoutes',
          request_serializer=QueryRoutesRequest.SerializeToString,
          response_deserializer=QueryRoutesResponse.FromString,
          )
      self.GetNetworkInfo = channel.unary_unary(
          '/lnrpc.Lightning/GetNetworkInfo',
          request_serializer=NetworkInfoRequest.SerializeToString,
          response_deserializer=NetworkInfo.FromString,
          )
      self.StopDaemon = channel.unary_unary(
          '/lnrpc.Lightning/StopDaemon',
          request_serializer=StopRequest.SerializeToString,
          response_deserializer=StopResponse.FromString,
          )
      self.SubscribeChannelGraph = channel.unary_stream(
          '/lnrpc.Lightning/SubscribeChannelGraph',
          request_serializer=GraphTopologySubscription.SerializeToString,
          response_deserializer=GraphTopologyUpdate.FromString,
          )
      self.SetAlias = channel.unary_unary(
          '/lnrpc.Lightning/SetAlias',
          request_serializer=SetAliasRequest.SerializeToString,
          response_deserializer=SetAliasResponse.FromString,
          )
      self.DebugLevel = channel.unary_unary(
          '/lnrpc.Lightning/DebugLevel',
          request_serializer=DebugLevelRequest.SerializeToString,
          response_deserializer=DebugLevelResponse.FromString,
          )


  class LightningServicer(object):
    # missing associated documentation comment in .proto file
    pass

    def WalletBalance(self, request, context):
      # missing associated documentation comment in .proto file
      pass
      context.set_code(grpc.StatusCode.UNIMPLEMENTED)
      context.set_details('Method not implemented!')
      raise NotImplementedError('Method not implemented!')

    def ChannelBalance(self, request, context):
      # missing associated documentation comment in .proto file
      pass
      context.set_code(grpc.StatusCode.UNIMPLEMENTED)
      context.set_details('Method not implemented!')
      raise NotImplementedError('Method not implemented!')

    def GetTransactions(self, request, context):
      # missing associated documentation comment in .proto file
      pass
      context.set_code(grpc.StatusCode.UNIMPLEMENTED)
      context.set_details('Method not implemented!')
      raise NotImplementedError('Method not implemented!')

    def SendCoins(self, request, context):
      # missing associated documentation comment in .proto file
      pass
      context.set_code(grpc.StatusCode.UNIMPLEMENTED)
      context.set_details('Method not implemented!')
      raise NotImplementedError('Method not implemented!')

    def SubscribeTransactions(self, request, context):
      # missing associated documentation comment in .proto file
      pass
      context.set_code(grpc.StatusCode.UNIMPLEMENTED)
      context.set_details('Method not implemented!')
      raise NotImplementedError('Method not implemented!')

    def SendMany(self, request, context):
      # missing associated documentation comment in .proto file
      pass
      context.set_code(grpc.StatusCode.UNIMPLEMENTED)
      context.set_details('Method not implemented!')
      raise NotImplementedError('Method not implemented!')

    def NewAddress(self, request, context):
      # missing associated documentation comment in .proto file
      pass
      context.set_code(grpc.StatusCode.UNIMPLEMENTED)
      context.set_details('Method not implemented!')
      raise NotImplementedError('Method not implemented!')

    def NewWitnessAddress(self, request, context):
      # missing associated documentation comment in .proto file
      pass
      context.set_code(grpc.StatusCode.UNIMPLEMENTED)
      context.set_details('Method not implemented!')
      raise NotImplementedError('Method not implemented!')

    def SignMessage(self, request, context):
      # missing associated documentation comment in .proto file
      pass
      context.set_code(grpc.StatusCode.UNIMPLEMENTED)
      context.set_details('Method not implemented!')
      raise NotImplementedError('Method not implemented!')

    def VerifyMessage(self, request, context):
      # missing associated documentation comment in .proto file
      pass
      context.set_code(grpc.StatusCode.UNIMPLEMENTED)
      context.set_details('Method not implemented!')
      raise NotImplementedError('Method not implemented!')

    def ConnectPeer(self, request, context):
      # missing associated documentation comment in .proto file
      pass
      context.set_code(grpc.StatusCode.UNIMPLEMENTED)
      context.set_details('Method not implemented!')
      raise NotImplementedError('Method not implemented!')

    def DisconnectPeer(self, request, context):
      # missing associated documentation comment in .proto file
      pass
      context.set_code(grpc.StatusCode.UNIMPLEMENTED)
      context.set_details('Method not implemented!')
      raise NotImplementedError('Method not implemented!')

    def ListPeers(self, request, context):
      # missing associated documentation comment in .proto file
      pass
      context.set_code(grpc.StatusCode.UNIMPLEMENTED)
      context.set_details('Method not implemented!')
      raise NotImplementedError('Method not implemented!')

    def GetInfo(self, request, context):
      # missing associated documentation comment in .proto file
      pass
      context.set_code(grpc.StatusCode.UNIMPLEMENTED)
      context.set_details('Method not implemented!')
      raise NotImplementedError('Method not implemented!')

    def PendingChannels(self, request, context):
      """TODO(roasbeef): merge with below with bool?
      """
      context.set_code(grpc.StatusCode.UNIMPLEMENTED)
      context.set_details('Method not implemented!')
      raise NotImplementedError('Method not implemented!')

    def ListChannels(self, request, context):
      # missing associated documentation comment in .proto file
      pass
      context.set_code(grpc.StatusCode.UNIMPLEMENTED)
      context.set_details('Method not implemented!')
      raise NotImplementedError('Method not implemented!')

    def OpenChannelSync(self, request, context):
      # missing associated documentation comment in .proto file
      pass
      context.set_code(grpc.StatusCode.UNIMPLEMENTED)
      context.set_details('Method not implemented!')
      raise NotImplementedError('Method not implemented!')

    def OpenChannel(self, request, context):
      # missing associated documentation comment in .proto file
      pass
      context.set_code(grpc.StatusCode.UNIMPLEMENTED)
      context.set_details('Method not implemented!')
      raise NotImplementedError('Method not implemented!')

    def CloseChannel(self, request, context):
      # missing associated documentation comment in .proto file
      pass
      context.set_code(grpc.StatusCode.UNIMPLEMENTED)
      context.set_details('Method not implemented!')
      raise NotImplementedError('Method not implemented!')

    def SendPayment(self, request_iterator, context):
      # missing associated documentation comment in .proto file
      pass
      context.set_code(grpc.StatusCode.UNIMPLEMENTED)
      context.set_details('Method not implemented!')
      raise NotImplementedError('Method not implemented!')

    def SendPaymentSync(self, request, context):
      # missing associated documentation comment in .proto file
      pass
      context.set_code(grpc.StatusCode.UNIMPLEMENTED)
      context.set_details('Method not implemented!')
      raise NotImplementedError('Method not implemented!')

    def AddInvoice(self, request, context):
      # missing associated documentation comment in .proto file
      pass
      context.set_code(grpc.StatusCode.UNIMPLEMENTED)
      context.set_details('Method not implemented!')
      raise NotImplementedError('Method not implemented!')

    def ListInvoices(self, request, context):
      # missing associated documentation comment in .proto file
      pass
      context.set_code(grpc.StatusCode.UNIMPLEMENTED)
      context.set_details('Method not implemented!')
      raise NotImplementedError('Method not implemented!')

    def LookupInvoice(self, request, context):
      # missing associated documentation comment in .proto file
      pass
      context.set_code(grpc.StatusCode.UNIMPLEMENTED)
      context.set_details('Method not implemented!')
      raise NotImplementedError('Method not implemented!')

    def SubscribeInvoices(self, request, context):
      # missing associated documentation comment in .proto file
      pass
      context.set_code(grpc.StatusCode.UNIMPLEMENTED)
      context.set_details('Method not implemented!')
      raise NotImplementedError('Method not implemented!')

    def DecodePayReq(self, request, context):
      # missing associated documentation comment in .proto file
      pass
      context.set_code(grpc.StatusCode.UNIMPLEMENTED)
      context.set_details('Method not implemented!')
      raise NotImplementedError('Method not implemented!')

    def ListPayments(self, request, context):
      # missing associated documentation comment in .proto file
      pass
      context.set_code(grpc.StatusCode.UNIMPLEMENTED)
      context.set_details('Method not implemented!')
      raise NotImplementedError('Method not implemented!')

    def DeleteAllPayments(self, request, context):
      # missing associated documentation comment in .proto file
      pass
      context.set_code(grpc.StatusCode.UNIMPLEMENTED)
      context.set_details('Method not implemented!')
      raise NotImplementedError('Method not implemented!')

    def DescribeGraph(self, request, context):
      # missing associated documentation comment in .proto file
      pass
      context.set_code(grpc.StatusCode.UNIMPLEMENTED)
      context.set_details('Method not implemented!')
      raise NotImplementedError('Method not implemented!')

    def GetChanInfo(self, request, context):
      # missing associated documentation comment in .proto file
      pass
      context.set_code(grpc.StatusCode.UNIMPLEMENTED)
      context.set_details('Method not implemented!')
      raise NotImplementedError('Method not implemented!')

    def GetNodeInfo(self, request, context):
      # missing associated documentation comment in .proto file
      pass
      context.set_code(grpc.StatusCode.UNIMPLEMENTED)
      context.set_details('Method not implemented!')
      raise NotImplementedError('Method not implemented!')

    def QueryRoutes(self, request, context):
      # missing associated documentation comment in .proto file
      pass
      context.set_code(grpc.StatusCode.UNIMPLEMENTED)
      context.set_details('Method not implemented!')
      raise NotImplementedError('Method not implemented!')

    def GetNetworkInfo(self, request, context):
      # missing associated documentation comment in .proto file
      pass
      context.set_code(grpc.StatusCode.UNIMPLEMENTED)
      context.set_details('Method not implemented!')
      raise NotImplementedError('Method not implemented!')

    def StopDaemon(self, request, context):
      # missing associated documentation comment in .proto file
      pass
      context.set_code(grpc.StatusCode.UNIMPLEMENTED)
      context.set_details('Method not implemented!')
      raise NotImplementedError('Method not implemented!')

    def SubscribeChannelGraph(self, request, context):
      # missing associated documentation comment in .proto file
      pass
      context.set_code(grpc.StatusCode.UNIMPLEMENTED)
      context.set_details('Method not implemented!')
      raise NotImplementedError('Method not implemented!')

    def SetAlias(self, request, context):
      # missing associated documentation comment in .proto file
      pass
      context.set_code(grpc.StatusCode.UNIMPLEMENTED)
      context.set_details('Method not implemented!')
      raise NotImplementedError('Method not implemented!')

    def DebugLevel(self, request, context):
      # missing associated documentation comment in .proto file
      pass
      context.set_code(grpc.StatusCode.UNIMPLEMENTED)
      context.set_details('Method not implemented!')
      raise NotImplementedError('Method not implemented!')


  def add_LightningServicer_to_server(servicer, server):
    rpc_method_handlers = {
        'WalletBalance': grpc.unary_unary_rpc_method_handler(
            servicer.WalletBalance,
            request_deserializer=WalletBalanceRequest.FromString,
            response_serializer=WalletBalanceResponse.SerializeToString,
        ),
        'ChannelBalance': grpc.unary_unary_rpc_method_handler(
            servicer.ChannelBalance,
            request_deserializer=ChannelBalanceRequest.FromString,
            response_serializer=ChannelBalanceResponse.SerializeToString,
        ),
        'GetTransactions': grpc.unary_unary_rpc_method_handler(
            servicer.GetTransactions,
            request_deserializer=GetTransactionsRequest.FromString,
            response_serializer=TransactionDetails.SerializeToString,
        ),
        'SendCoins': grpc.unary_unary_rpc_method_handler(
            servicer.SendCoins,
            request_deserializer=SendCoinsRequest.FromString,
            response_serializer=SendCoinsResponse.SerializeToString,
        ),
        'SubscribeTransactions': grpc.unary_stream_rpc_method_handler(
            servicer.SubscribeTransactions,
            request_deserializer=GetTransactionsRequest.FromString,
            response_serializer=Transaction.SerializeToString,
        ),
        'SendMany': grpc.unary_unary_rpc_method_handler(
            servicer.SendMany,
            request_deserializer=SendManyRequest.FromString,
            response_serializer=SendManyResponse.SerializeToString,
        ),
        'NewAddress': grpc.unary_unary_rpc_method_handler(
            servicer.NewAddress,
            request_deserializer=NewAddressRequest.FromString,
            response_serializer=NewAddressResponse.SerializeToString,
        ),
        'NewWitnessAddress': grpc.unary_unary_rpc_method_handler(
            servicer.NewWitnessAddress,
            request_deserializer=NewWitnessAddressRequest.FromString,
            response_serializer=NewAddressResponse.SerializeToString,
        ),
        'SignMessage': grpc.unary_unary_rpc_method_handler(
            servicer.SignMessage,
            request_deserializer=SignMessageRequest.FromString,
            response_serializer=SignMessageResponse.SerializeToString,
        ),
        'VerifyMessage': grpc.unary_unary_rpc_method_handler(
            servicer.VerifyMessage,
            request_deserializer=VerifyMessageRequest.FromString,
            response_serializer=VerifyMessageResponse.SerializeToString,
        ),
        'ConnectPeer': grpc.unary_unary_rpc_method_handler(
            servicer.ConnectPeer,
            request_deserializer=ConnectPeerRequest.FromString,
            response_serializer=ConnectPeerResponse.SerializeToString,
        ),
        'DisconnectPeer': grpc.unary_unary_rpc_method_handler(
            servicer.DisconnectPeer,
            request_deserializer=DisconnectPeerRequest.FromString,
            response_serializer=DisconnectPeerResponse.SerializeToString,
        ),
        'ListPeers': grpc.unary_unary_rpc_method_handler(
            servicer.ListPeers,
            request_deserializer=ListPeersRequest.FromString,
            response_serializer=ListPeersResponse.SerializeToString,
        ),
        'GetInfo': grpc.unary_unary_rpc_method_handler(
            servicer.GetInfo,
            request_deserializer=GetInfoRequest.FromString,
            response_serializer=GetInfoResponse.SerializeToString,
        ),
        'PendingChannels': grpc.unary_unary_rpc_method_handler(
            servicer.PendingChannels,
            request_deserializer=PendingChannelRequest.FromString,
            response_serializer=PendingChannelResponse.SerializeToString,
        ),
        'ListChannels': grpc.unary_unary_rpc_method_handler(
            servicer.ListChannels,
            request_deserializer=ListChannelsRequest.FromString,
            response_serializer=ListChannelsResponse.SerializeToString,
        ),
        'OpenChannelSync': grpc.unary_unary_rpc_method_handler(
            servicer.OpenChannelSync,
            request_deserializer=OpenChannelRequest.FromString,
            response_serializer=ChannelPoint.SerializeToString,
        ),
        'OpenChannel': grpc.unary_stream_rpc_method_handler(
            servicer.OpenChannel,
            request_deserializer=OpenChannelRequest.FromString,
            response_serializer=OpenStatusUpdate.SerializeToString,
        ),
        'CloseChannel': grpc.unary_stream_rpc_method_handler(
            servicer.CloseChannel,
            request_deserializer=CloseChannelRequest.FromString,
            response_serializer=CloseStatusUpdate.SerializeToString,
        ),
        'SendPayment': grpc.stream_stream_rpc_method_handler(
            servicer.SendPayment,
            request_deserializer=SendRequest.FromString,
            response_serializer=SendResponse.SerializeToString,
        ),
        'SendPaymentSync': grpc.unary_unary_rpc_method_handler(
            servicer.SendPaymentSync,
            request_deserializer=SendRequest.FromString,
            response_serializer=SendResponse.SerializeToString,
        ),
        'AddInvoice': grpc.unary_unary_rpc_method_handler(
            servicer.AddInvoice,
            request_deserializer=Invoice.FromString,
            response_serializer=AddInvoiceResponse.SerializeToString,
        ),
        'ListInvoices': grpc.unary_unary_rpc_method_handler(
            servicer.ListInvoices,
            request_deserializer=ListInvoiceRequest.FromString,
            response_serializer=ListInvoiceResponse.SerializeToString,
        ),
        'LookupInvoice': grpc.unary_unary_rpc_method_handler(
            servicer.LookupInvoice,
            request_deserializer=PaymentHash.FromString,
            response_serializer=Invoice.SerializeToString,
        ),
        'SubscribeInvoices': grpc.unary_stream_rpc_method_handler(
            servicer.SubscribeInvoices,
            request_deserializer=InvoiceSubscription.FromString,
            response_serializer=Invoice.SerializeToString,
        ),
        'DecodePayReq': grpc.unary_unary_rpc_method_handler(
            servicer.DecodePayReq,
            request_deserializer=PayReqString.FromString,
            response_serializer=PayReq.SerializeToString,
        ),
        'ListPayments': grpc.unary_unary_rpc_method_handler(
            servicer.ListPayments,
            request_deserializer=ListPaymentsRequest.FromString,
            response_serializer=ListPaymentsResponse.SerializeToString,
        ),
        'DeleteAllPayments': grpc.unary_unary_rpc_method_handler(
            servicer.DeleteAllPayments,
            request_deserializer=DeleteAllPaymentsRequest.FromString,
            response_serializer=DeleteAllPaymentsResponse.SerializeToString,
        ),
        'DescribeGraph': grpc.unary_unary_rpc_method_handler(
            servicer.DescribeGraph,
            request_deserializer=ChannelGraphRequest.FromString,
            response_serializer=ChannelGraph.SerializeToString,
        ),
        'GetChanInfo': grpc.unary_unary_rpc_method_handler(
            servicer.GetChanInfo,
            request_deserializer=ChanInfoRequest.FromString,
            response_serializer=ChannelEdge.SerializeToString,
        ),
        'GetNodeInfo': grpc.unary_unary_rpc_method_handler(
            servicer.GetNodeInfo,
            request_deserializer=NodeInfoRequest.FromString,
            response_serializer=NodeInfo.SerializeToString,
        ),
        'QueryRoutes': grpc.unary_unary_rpc_method_handler(
            servicer.QueryRoutes,
            request_deserializer=QueryRoutesRequest.FromString,
            response_serializer=QueryRoutesResponse.SerializeToString,
        ),
        'GetNetworkInfo': grpc.unary_unary_rpc_method_handler(
            servicer.GetNetworkInfo,
            request_deserializer=NetworkInfoRequest.FromString,
            response_serializer=NetworkInfo.SerializeToString,
        ),
        'StopDaemon': grpc.unary_unary_rpc_method_handler(
            servicer.StopDaemon,
            request_deserializer=StopRequest.FromString,
            response_serializer=StopResponse.SerializeToString,
        ),
        'SubscribeChannelGraph': grpc.unary_stream_rpc_method_handler(
            servicer.SubscribeChannelGraph,
            request_deserializer=GraphTopologySubscription.FromString,
            response_serializer=GraphTopologyUpdate.SerializeToString,
        ),
        'SetAlias': grpc.unary_unary_rpc_method_handler(
            servicer.SetAlias,
            request_deserializer=SetAliasRequest.FromString,
            response_serializer=SetAliasResponse.SerializeToString,
        ),
        'DebugLevel': grpc.unary_unary_rpc_method_handler(
            servicer.DebugLevel,
            request_deserializer=DebugLevelRequest.FromString,
            response_serializer=DebugLevelResponse.SerializeToString,
        ),
    }
    generic_handler = grpc.method_handlers_generic_handler(
        'lnrpc.Lightning', rpc_method_handlers)
    server.add_generic_rpc_handlers((generic_handler,))


  class BetaLightningServicer(object):
    """The Beta API is deprecated for 0.15.0 and later.

    It is recommended to use the GA API (classes and functions in this
    file not marked beta) for all further purposes. This class was generated
    only to ease transition from grpcio<0.15.0 to grpcio>=0.15.0."""
    # missing associated documentation comment in .proto file
    pass
    def WalletBalance(self, request, context):
      # missing associated documentation comment in .proto file
      pass
      context.code(beta_interfaces.StatusCode.UNIMPLEMENTED)
    def ChannelBalance(self, request, context):
      # missing associated documentation comment in .proto file
      pass
      context.code(beta_interfaces.StatusCode.UNIMPLEMENTED)
    def GetTransactions(self, request, context):
      # missing associated documentation comment in .proto file
      pass
      context.code(beta_interfaces.StatusCode.UNIMPLEMENTED)
    def SendCoins(self, request, context):
      # missing associated documentation comment in .proto file
      pass
      context.code(beta_interfaces.StatusCode.UNIMPLEMENTED)
    def SubscribeTransactions(self, request, context):
      # missing associated documentation comment in .proto file
      pass
      context.code(beta_interfaces.StatusCode.UNIMPLEMENTED)
    def SendMany(self, request, context):
      # missing associated documentation comment in .proto file
      pass
      context.code(beta_interfaces.StatusCode.UNIMPLEMENTED)
    def NewAddress(self, request, context):
      # missing associated documentation comment in .proto file
      pass
      context.code(beta_interfaces.StatusCode.UNIMPLEMENTED)
    def NewWitnessAddress(self, request, context):
      # missing associated documentation comment in .proto file
      pass
      context.code(beta_interfaces.StatusCode.UNIMPLEMENTED)
    def SignMessage(self, request, context):
      # missing associated documentation comment in .proto file
      pass
      context.code(beta_interfaces.StatusCode.UNIMPLEMENTED)
    def VerifyMessage(self, request, context):
      # missing associated documentation comment in .proto file
      pass
      context.code(beta_interfaces.StatusCode.UNIMPLEMENTED)
    def ConnectPeer(self, request, context):
      # missing associated documentation comment in .proto file
      pass
      context.code(beta_interfaces.StatusCode.UNIMPLEMENTED)
    def DisconnectPeer(self, request, context):
      # missing associated documentation comment in .proto file
      pass
      context.code(beta_interfaces.StatusCode.UNIMPLEMENTED)
    def ListPeers(self, request, context):
      # missing associated documentation comment in .proto file
      pass
      context.code(beta_interfaces.StatusCode.UNIMPLEMENTED)
    def GetInfo(self, request, context):
      # missing associated documentation comment in .proto file
      pass
      context.code(beta_interfaces.StatusCode.UNIMPLEMENTED)
    def PendingChannels(self, request, context):
      """TODO(roasbeef): merge with below with bool?
      """
      context.code(beta_interfaces.StatusCode.UNIMPLEMENTED)
    def ListChannels(self, request, context):
      # missing associated documentation comment in .proto file
      pass
      context.code(beta_interfaces.StatusCode.UNIMPLEMENTED)
    def OpenChannelSync(self, request, context):
      # missing associated documentation comment in .proto file
      pass
      context.code(beta_interfaces.StatusCode.UNIMPLEMENTED)
    def OpenChannel(self, request, context):
      # missing associated documentation comment in .proto file
      pass
      context.code(beta_interfaces.StatusCode.UNIMPLEMENTED)
    def CloseChannel(self, request, context):
      # missing associated documentation comment in .proto file
      pass
      context.code(beta_interfaces.StatusCode.UNIMPLEMENTED)
    def SendPayment(self, request_iterator, context):
      # missing associated documentation comment in .proto file
      pass
      context.code(beta_interfaces.StatusCode.UNIMPLEMENTED)
    def SendPaymentSync(self, request, context):
      # missing associated documentation comment in .proto file
      pass
      context.code(beta_interfaces.StatusCode.UNIMPLEMENTED)
    def AddInvoice(self, request, context):
      # missing associated documentation comment in .proto file
      pass
      context.code(beta_interfaces.StatusCode.UNIMPLEMENTED)
    def ListInvoices(self, request, context):
      # missing associated documentation comment in .proto file
      pass
      context.code(beta_interfaces.StatusCode.UNIMPLEMENTED)
    def LookupInvoice(self, request, context):
      # missing associated documentation comment in .proto file
      pass
      context.code(beta_interfaces.StatusCode.UNIMPLEMENTED)
    def SubscribeInvoices(self, request, context):
      # missing associated documentation comment in .proto file
      pass
      context.code(beta_interfaces.StatusCode.UNIMPLEMENTED)
    def DecodePayReq(self, request, context):
      # missing associated documentation comment in .proto file
      pass
      context.code(beta_interfaces.StatusCode.UNIMPLEMENTED)
    def ListPayments(self, request, context):
      # missing associated documentation comment in .proto file
      pass
      context.code(beta_interfaces.StatusCode.UNIMPLEMENTED)
    def DeleteAllPayments(self, request, context):
      # missing associated documentation comment in .proto file
      pass
      context.code(beta_interfaces.StatusCode.UNIMPLEMENTED)
    def DescribeGraph(self, request, context):
      # missing associated documentation comment in .proto file
      pass
      context.code(beta_interfaces.StatusCode.UNIMPLEMENTED)
    def GetChanInfo(self, request, context):
      # missing associated documentation comment in .proto file
      pass
      context.code(beta_interfaces.StatusCode.UNIMPLEMENTED)
    def GetNodeInfo(self, request, context):
      # missing associated documentation comment in .proto file
      pass
      context.code(beta_interfaces.StatusCode.UNIMPLEMENTED)
    def QueryRoutes(self, request, context):
      # missing associated documentation comment in .proto file
      pass
      context.code(beta_interfaces.StatusCode.UNIMPLEMENTED)
    def GetNetworkInfo(self, request, context):
      # missing associated documentation comment in .proto file
      pass
      context.code(beta_interfaces.StatusCode.UNIMPLEMENTED)
    def StopDaemon(self, request, context):
      # missing associated documentation comment in .proto file
      pass
      context.code(beta_interfaces.StatusCode.UNIMPLEMENTED)
    def SubscribeChannelGraph(self, request, context):
      # missing associated documentation comment in .proto file
      pass
      context.code(beta_interfaces.StatusCode.UNIMPLEMENTED)
    def SetAlias(self, request, context):
      # missing associated documentation comment in .proto file
      pass
      context.code(beta_interfaces.StatusCode.UNIMPLEMENTED)
    def DebugLevel(self, request, context):
      # missing associated documentation comment in .proto file
      pass
      context.code(beta_interfaces.StatusCode.UNIMPLEMENTED)


  class BetaLightningStub(object):
    """The Beta API is deprecated for 0.15.0 and later.

    It is recommended to use the GA API (classes and functions in this
    file not marked beta) for all further purposes. This class was generated
    only to ease transition from grpcio<0.15.0 to grpcio>=0.15.0."""
    # missing associated documentation comment in .proto file
    pass
    def WalletBalance(self, request, timeout, metadata=None, with_call=False, protocol_options=None):
      # missing associated documentation comment in .proto file
      pass
      raise NotImplementedError()
    WalletBalance.future = None
    def ChannelBalance(self, request, timeout, metadata=None, with_call=False, protocol_options=None):
      # missing associated documentation comment in .proto file
      pass
      raise NotImplementedError()
    ChannelBalance.future = None
    def GetTransactions(self, request, timeout, metadata=None, with_call=False, protocol_options=None):
      # missing associated documentation comment in .proto file
      pass
      raise NotImplementedError()
    GetTransactions.future = None
    def SendCoins(self, request, timeout, metadata=None, with_call=False, protocol_options=None):
      # missing associated documentation comment in .proto file
      pass
      raise NotImplementedError()
    SendCoins.future = None
    def SubscribeTransactions(self, request, timeout, metadata=None, with_call=False, protocol_options=None):
      # missing associated documentation comment in .proto file
      pass
      raise NotImplementedError()
    def SendMany(self, request, timeout, metadata=None, with_call=False, protocol_options=None):
      # missing associated documentation comment in .proto file
      pass
      raise NotImplementedError()
    SendMany.future = None
    def NewAddress(self, request, timeout, metadata=None, with_call=False, protocol_options=None):
      # missing associated documentation comment in .proto file
      pass
      raise NotImplementedError()
    NewAddress.future = None
    def NewWitnessAddress(self, request, timeout, metadata=None, with_call=False, protocol_options=None):
      # missing associated documentation comment in .proto file
      pass
      raise NotImplementedError()
    NewWitnessAddress.future = None
    def SignMessage(self, request, timeout, metadata=None, with_call=False, protocol_options=None):
      # missing associated documentation comment in .proto file
      pass
      raise NotImplementedError()
    SignMessage.future = None
    def VerifyMessage(self, request, timeout, metadata=None, with_call=False, protocol_options=None):
      # missing associated documentation comment in .proto file
      pass
      raise NotImplementedError()
    VerifyMessage.future = None
    def ConnectPeer(self, request, timeout, metadata=None, with_call=False, protocol_options=None):
      # missing associated documentation comment in .proto file
      pass
      raise NotImplementedError()
    ConnectPeer.future = None
    def DisconnectPeer(self, request, timeout, metadata=None, with_call=False, protocol_options=None):
      # missing associated documentation comment in .proto file
      pass
      raise NotImplementedError()
    DisconnectPeer.future = None
    def ListPeers(self, request, timeout, metadata=None, with_call=False, protocol_options=None):
      # missing associated documentation comment in .proto file
      pass
      raise NotImplementedError()
    ListPeers.future = None
    def GetInfo(self, request, timeout, metadata=None, with_call=False, protocol_options=None):
      # missing associated documentation comment in .proto file
      pass
      raise NotImplementedError()
    GetInfo.future = None
    def PendingChannels(self, request, timeout, metadata=None, with_call=False, protocol_options=None):
      """TODO(roasbeef): merge with below with bool?
      """
      raise NotImplementedError()
    PendingChannels.future = None
    def ListChannels(self, request, timeout, metadata=None, with_call=False, protocol_options=None):
      # missing associated documentation comment in .proto file
      pass
      raise NotImplementedError()
    ListChannels.future = None
    def OpenChannelSync(self, request, timeout, metadata=None, with_call=False, protocol_options=None):
      # missing associated documentation comment in .proto file
      pass
      raise NotImplementedError()
    OpenChannelSync.future = None
    def OpenChannel(self, request, timeout, metadata=None, with_call=False, protocol_options=None):
      # missing associated documentation comment in .proto file
      pass
      raise NotImplementedError()
    def CloseChannel(self, request, timeout, metadata=None, with_call=False, protocol_options=None):
      # missing associated documentation comment in .proto file
      pass
      raise NotImplementedError()
    def SendPayment(self, request_iterator, timeout, metadata=None, with_call=False, protocol_options=None):
      # missing associated documentation comment in .proto file
      pass
      raise NotImplementedError()
    def SendPaymentSync(self, request, timeout, metadata=None, with_call=False, protocol_options=None):
      # missing associated documentation comment in .proto file
      pass
      raise NotImplementedError()
    SendPaymentSync.future = None
    def AddInvoice(self, request, timeout, metadata=None, with_call=False, protocol_options=None):
      # missing associated documentation comment in .proto file
      pass
      raise NotImplementedError()
    AddInvoice.future = None
    def ListInvoices(self, request, timeout, metadata=None, with_call=False, protocol_options=None):
      # missing associated documentation comment in .proto file
      pass
      raise NotImplementedError()
    ListInvoices.future = None
    def LookupInvoice(self, request, timeout, metadata=None, with_call=False, protocol_options=None):
      # missing associated documentation comment in .proto file
      pass
      raise NotImplementedError()
    LookupInvoice.future = None
    def SubscribeInvoices(self, request, timeout, metadata=None, with_call=False, protocol_options=None):
      # missing associated documentation comment in .proto file
      pass
      raise NotImplementedError()
    def DecodePayReq(self, request, timeout, metadata=None, with_call=False, protocol_options=None):
      # missing associated documentation comment in .proto file
      pass
      raise NotImplementedError()
    DecodePayReq.future = None
    def ListPayments(self, request, timeout, metadata=None, with_call=False, protocol_options=None):
      # missing associated documentation comment in .proto file
      pass
      raise NotImplementedError()
    ListPayments.future = None
    def DeleteAllPayments(self, request, timeout, metadata=None, with_call=False, protocol_options=None):
      # missing associated documentation comment in .proto file
      pass
      raise NotImplementedError()
    DeleteAllPayments.future = None
    def DescribeGraph(self, request, timeout, metadata=None, with_call=False, protocol_options=None):
      # missing associated documentation comment in .proto file
      pass
      raise NotImplementedError()
    DescribeGraph.future = None
    def GetChanInfo(self, request, timeout, metadata=None, with_call=False, protocol_options=None):
      # missing associated documentation comment in .proto file
      pass
      raise NotImplementedError()
    GetChanInfo.future = None
    def GetNodeInfo(self, request, timeout, metadata=None, with_call=False, protocol_options=None):
      # missing associated documentation comment in .proto file
      pass
      raise NotImplementedError()
    GetNodeInfo.future = None
    def QueryRoutes(self, request, timeout, metadata=None, with_call=False, protocol_options=None):
      # missing associated documentation comment in .proto file
      pass
      raise NotImplementedError()
    QueryRoutes.future = None
    def GetNetworkInfo(self, request, timeout, metadata=None, with_call=False, protocol_options=None):
      # missing associated documentation comment in .proto file
      pass
      raise NotImplementedError()
    GetNetworkInfo.future = None
    def StopDaemon(self, request, timeout, metadata=None, with_call=False, protocol_options=None):
      # missing associated documentation comment in .proto file
      pass
      raise NotImplementedError()
    StopDaemon.future = None
    def SubscribeChannelGraph(self, request, timeout, metadata=None, with_call=False, protocol_options=None):
      # missing associated documentation comment in .proto file
      pass
      raise NotImplementedError()
    def SetAlias(self, request, timeout, metadata=None, with_call=False, protocol_options=None):
      # missing associated documentation comment in .proto file
      pass
      raise NotImplementedError()
    SetAlias.future = None
    def DebugLevel(self, request, timeout, metadata=None, with_call=False, protocol_options=None):
      # missing associated documentation comment in .proto file
      pass
      raise NotImplementedError()
    DebugLevel.future = None


  def beta_create_Lightning_server(servicer, pool=None, pool_size=None, default_timeout=None, maximum_timeout=None):
    """The Beta API is deprecated for 0.15.0 and later.

    It is recommended to use the GA API (classes and functions in this
    file not marked beta) for all further purposes. This function was
    generated only to ease transition from grpcio<0.15.0 to grpcio>=0.15.0"""
    request_deserializers = {
      ('lnrpc.Lightning', 'AddInvoice'): Invoice.FromString,
      ('lnrpc.Lightning', 'ChannelBalance'): ChannelBalanceRequest.FromString,
      ('lnrpc.Lightning', 'CloseChannel'): CloseChannelRequest.FromString,
      ('lnrpc.Lightning', 'ConnectPeer'): ConnectPeerRequest.FromString,
      ('lnrpc.Lightning', 'DebugLevel'): DebugLevelRequest.FromString,
      ('lnrpc.Lightning', 'DecodePayReq'): PayReqString.FromString,
      ('lnrpc.Lightning', 'DeleteAllPayments'): DeleteAllPaymentsRequest.FromString,
      ('lnrpc.Lightning', 'DescribeGraph'): ChannelGraphRequest.FromString,
      ('lnrpc.Lightning', 'DisconnectPeer'): DisconnectPeerRequest.FromString,
      ('lnrpc.Lightning', 'GetChanInfo'): ChanInfoRequest.FromString,
      ('lnrpc.Lightning', 'GetInfo'): GetInfoRequest.FromString,
      ('lnrpc.Lightning', 'GetNetworkInfo'): NetworkInfoRequest.FromString,
      ('lnrpc.Lightning', 'GetNodeInfo'): NodeInfoRequest.FromString,
      ('lnrpc.Lightning', 'GetTransactions'): GetTransactionsRequest.FromString,
      ('lnrpc.Lightning', 'ListChannels'): ListChannelsRequest.FromString,
      ('lnrpc.Lightning', 'ListInvoices'): ListInvoiceRequest.FromString,
      ('lnrpc.Lightning', 'ListPayments'): ListPaymentsRequest.FromString,
      ('lnrpc.Lightning', 'ListPeers'): ListPeersRequest.FromString,
      ('lnrpc.Lightning', 'LookupInvoice'): PaymentHash.FromString,
      ('lnrpc.Lightning', 'NewAddress'): NewAddressRequest.FromString,
      ('lnrpc.Lightning', 'NewWitnessAddress'): NewWitnessAddressRequest.FromString,
      ('lnrpc.Lightning', 'OpenChannel'): OpenChannelRequest.FromString,
      ('lnrpc.Lightning', 'OpenChannelSync'): OpenChannelRequest.FromString,
      ('lnrpc.Lightning', 'PendingChannels'): PendingChannelRequest.FromString,
      ('lnrpc.Lightning', 'QueryRoutes'): QueryRoutesRequest.FromString,
      ('lnrpc.Lightning', 'SendCoins'): SendCoinsRequest.FromString,
      ('lnrpc.Lightning', 'SendMany'): SendManyRequest.FromString,
      ('lnrpc.Lightning', 'SendPayment'): SendRequest.FromString,
      ('lnrpc.Lightning', 'SendPaymentSync'): SendRequest.FromString,
      ('lnrpc.Lightning', 'SetAlias'): SetAliasRequest.FromString,
      ('lnrpc.Lightning', 'SignMessage'): SignMessageRequest.FromString,
      ('lnrpc.Lightning', 'StopDaemon'): StopRequest.FromString,
      ('lnrpc.Lightning', 'SubscribeChannelGraph'): GraphTopologySubscription.FromString,
      ('lnrpc.Lightning', 'SubscribeInvoices'): InvoiceSubscription.FromString,
      ('lnrpc.Lightning', 'SubscribeTransactions'): GetTransactionsRequest.FromString,
      ('lnrpc.Lightning', 'VerifyMessage'): VerifyMessageRequest.FromString,
      ('lnrpc.Lightning', 'WalletBalance'): WalletBalanceRequest.FromString,
    }
    response_serializers = {
      ('lnrpc.Lightning', 'AddInvoice'): AddInvoiceResponse.SerializeToString,
      ('lnrpc.Lightning', 'ChannelBalance'): ChannelBalanceResponse.SerializeToString,
      ('lnrpc.Lightning', 'CloseChannel'): CloseStatusUpdate.SerializeToString,
      ('lnrpc.Lightning', 'ConnectPeer'): ConnectPeerResponse.SerializeToString,
      ('lnrpc.Lightning', 'DebugLevel'): DebugLevelResponse.SerializeToString,
      ('lnrpc.Lightning', 'DecodePayReq'): PayReq.SerializeToString,
      ('lnrpc.Lightning', 'DeleteAllPayments'): DeleteAllPaymentsResponse.SerializeToString,
      ('lnrpc.Lightning', 'DescribeGraph'): ChannelGraph.SerializeToString,
      ('lnrpc.Lightning', 'DisconnectPeer'): DisconnectPeerResponse.SerializeToString,
      ('lnrpc.Lightning', 'GetChanInfo'): ChannelEdge.SerializeToString,
      ('lnrpc.Lightning', 'GetInfo'): GetInfoResponse.SerializeToString,
      ('lnrpc.Lightning', 'GetNetworkInfo'): NetworkInfo.SerializeToString,
      ('lnrpc.Lightning', 'GetNodeInfo'): NodeInfo.SerializeToString,
      ('lnrpc.Lightning', 'GetTransactions'): TransactionDetails.SerializeToString,
      ('lnrpc.Lightning', 'ListChannels'): ListChannelsResponse.SerializeToString,
      ('lnrpc.Lightning', 'ListInvoices'): ListInvoiceResponse.SerializeToString,
      ('lnrpc.Lightning', 'ListPayments'): ListPaymentsResponse.SerializeToString,
      ('lnrpc.Lightning', 'ListPeers'): ListPeersResponse.SerializeToString,
      ('lnrpc.Lightning', 'LookupInvoice'): Invoice.SerializeToString,
      ('lnrpc.Lightning', 'NewAddress'): NewAddressResponse.SerializeToString,
      ('lnrpc.Lightning', 'NewWitnessAddress'): NewAddressResponse.SerializeToString,
      ('lnrpc.Lightning', 'OpenChannel'): OpenStatusUpdate.SerializeToString,
      ('lnrpc.Lightning', 'OpenChannelSync'): ChannelPoint.SerializeToString,
      ('lnrpc.Lightning', 'PendingChannels'): PendingChannelResponse.SerializeToString,
      ('lnrpc.Lightning', 'QueryRoutes'): QueryRoutesResponse.SerializeToString,
      ('lnrpc.Lightning', 'SendCoins'): SendCoinsResponse.SerializeToString,
      ('lnrpc.Lightning', 'SendMany'): SendManyResponse.SerializeToString,
      ('lnrpc.Lightning', 'SendPayment'): SendResponse.SerializeToString,
      ('lnrpc.Lightning', 'SendPaymentSync'): SendResponse.SerializeToString,
      ('lnrpc.Lightning', 'SetAlias'): SetAliasResponse.SerializeToString,
      ('lnrpc.Lightning', 'SignMessage'): SignMessageResponse.SerializeToString,
      ('lnrpc.Lightning', 'StopDaemon'): StopResponse.SerializeToString,
      ('lnrpc.Lightning', 'SubscribeChannelGraph'): GraphTopologyUpdate.SerializeToString,
      ('lnrpc.Lightning', 'SubscribeInvoices'): Invoice.SerializeToString,
      ('lnrpc.Lightning', 'SubscribeTransactions'): Transaction.SerializeToString,
      ('lnrpc.Lightning', 'VerifyMessage'): VerifyMessageResponse.SerializeToString,
      ('lnrpc.Lightning', 'WalletBalance'): WalletBalanceResponse.SerializeToString,
    }
    method_implementations = {
      ('lnrpc.Lightning', 'AddInvoice'): face_utilities.unary_unary_inline(servicer.AddInvoice),
      ('lnrpc.Lightning', 'ChannelBalance'): face_utilities.unary_unary_inline(servicer.ChannelBalance),
      ('lnrpc.Lightning', 'CloseChannel'): face_utilities.unary_stream_inline(servicer.CloseChannel),
      ('lnrpc.Lightning', 'ConnectPeer'): face_utilities.unary_unary_inline(servicer.ConnectPeer),
      ('lnrpc.Lightning', 'DebugLevel'): face_utilities.unary_unary_inline(servicer.DebugLevel),
      ('lnrpc.Lightning', 'DecodePayReq'): face_utilities.unary_unary_inline(servicer.DecodePayReq),
      ('lnrpc.Lightning', 'DeleteAllPayments'): face_utilities.unary_unary_inline(servicer.DeleteAllPayments),
      ('lnrpc.Lightning', 'DescribeGraph'): face_utilities.unary_unary_inline(servicer.DescribeGraph),
      ('lnrpc.Lightning', 'DisconnectPeer'): face_utilities.unary_unary_inline(servicer.DisconnectPeer),
      ('lnrpc.Lightning', 'GetChanInfo'): face_utilities.unary_unary_inline(servicer.GetChanInfo),
      ('lnrpc.Lightning', 'GetInfo'): face_utilities.unary_unary_inline(servicer.GetInfo),
      ('lnrpc.Lightning', 'GetNetworkInfo'): face_utilities.unary_unary_inline(servicer.GetNetworkInfo),
      ('lnrpc.Lightning', 'GetNodeInfo'): face_utilities.unary_unary_inline(servicer.GetNodeInfo),
      ('lnrpc.Lightning', 'GetTransactions'): face_utilities.unary_unary_inline(servicer.GetTransactions),
      ('lnrpc.Lightning', 'ListChannels'): face_utilities.unary_unary_inline(servicer.ListChannels),
      ('lnrpc.Lightning', 'ListInvoices'): face_utilities.unary_unary_inline(servicer.ListInvoices),
      ('lnrpc.Lightning', 'ListPayments'): face_utilities.unary_unary_inline(servicer.ListPayments),
      ('lnrpc.Lightning', 'ListPeers'): face_utilities.unary_unary_inline(servicer.ListPeers),
      ('lnrpc.Lightning', 'LookupInvoice'): face_utilities.unary_unary_inline(servicer.LookupInvoice),
      ('lnrpc.Lightning', 'NewAddress'): face_utilities.unary_unary_inline(servicer.NewAddress),
      ('lnrpc.Lightning', 'NewWitnessAddress'): face_utilities.unary_unary_inline(servicer.NewWitnessAddress),
      ('lnrpc.Lightning', 'OpenChannel'): face_utilities.unary_stream_inline(servicer.OpenChannel),
      ('lnrpc.Lightning', 'OpenChannelSync'): face_utilities.unary_unary_inline(servicer.OpenChannelSync),
      ('lnrpc.Lightning', 'PendingChannels'): face_utilities.unary_unary_inline(servicer.PendingChannels),
      ('lnrpc.Lightning', 'QueryRoutes'): face_utilities.unary_unary_inline(servicer.QueryRoutes),
      ('lnrpc.Lightning', 'SendCoins'): face_utilities.unary_unary_inline(servicer.SendCoins),
      ('lnrpc.Lightning', 'SendMany'): face_utilities.unary_unary_inline(servicer.SendMany),
      ('lnrpc.Lightning', 'SendPayment'): face_utilities.stream_stream_inline(servicer.SendPayment),
      ('lnrpc.Lightning', 'SendPaymentSync'): face_utilities.unary_unary_inline(servicer.SendPaymentSync),
      ('lnrpc.Lightning', 'SetAlias'): face_utilities.unary_unary_inline(servicer.SetAlias),
      ('lnrpc.Lightning', 'SignMessage'): face_utilities.unary_unary_inline(servicer.SignMessage),
      ('lnrpc.Lightning', 'StopDaemon'): face_utilities.unary_unary_inline(servicer.StopDaemon),
      ('lnrpc.Lightning', 'SubscribeChannelGraph'): face_utilities.unary_stream_inline(servicer.SubscribeChannelGraph),
      ('lnrpc.Lightning', 'SubscribeInvoices'): face_utilities.unary_stream_inline(servicer.SubscribeInvoices),
      ('lnrpc.Lightning', 'SubscribeTransactions'): face_utilities.unary_stream_inline(servicer.SubscribeTransactions),
      ('lnrpc.Lightning', 'VerifyMessage'): face_utilities.unary_unary_inline(servicer.VerifyMessage),
      ('lnrpc.Lightning', 'WalletBalance'): face_utilities.unary_unary_inline(servicer.WalletBalance),
    }
    server_options = beta_implementations.server_options(request_deserializers=request_deserializers, response_serializers=response_serializers, thread_pool=pool, thread_pool_size=pool_size, default_timeout=default_timeout, maximum_timeout=maximum_timeout)
    return beta_implementations.server(method_implementations, options=server_options)


  def beta_create_Lightning_stub(channel, host=None, metadata_transformer=None, pool=None, pool_size=None):
    """The Beta API is deprecated for 0.15.0 and later.

    It is recommended to use the GA API (classes and functions in this
    file not marked beta) for all further purposes. This function was
    generated only to ease transition from grpcio<0.15.0 to grpcio>=0.15.0"""
    request_serializers = {
      ('lnrpc.Lightning', 'AddInvoice'): Invoice.SerializeToString,
      ('lnrpc.Lightning', 'ChannelBalance'): ChannelBalanceRequest.SerializeToString,
      ('lnrpc.Lightning', 'CloseChannel'): CloseChannelRequest.SerializeToString,
      ('lnrpc.Lightning', 'ConnectPeer'): ConnectPeerRequest.SerializeToString,
      ('lnrpc.Lightning', 'DebugLevel'): DebugLevelRequest.SerializeToString,
      ('lnrpc.Lightning', 'DecodePayReq'): PayReqString.SerializeToString,
      ('lnrpc.Lightning', 'DeleteAllPayments'): DeleteAllPaymentsRequest.SerializeToString,
      ('lnrpc.Lightning', 'DescribeGraph'): ChannelGraphRequest.SerializeToString,
      ('lnrpc.Lightning', 'DisconnectPeer'): DisconnectPeerRequest.SerializeToString,
      ('lnrpc.Lightning', 'GetChanInfo'): ChanInfoRequest.SerializeToString,
      ('lnrpc.Lightning', 'GetInfo'): GetInfoRequest.SerializeToString,
      ('lnrpc.Lightning', 'GetNetworkInfo'): NetworkInfoRequest.SerializeToString,
      ('lnrpc.Lightning', 'GetNodeInfo'): NodeInfoRequest.SerializeToString,
      ('lnrpc.Lightning', 'GetTransactions'): GetTransactionsRequest.SerializeToString,
      ('lnrpc.Lightning', 'ListChannels'): ListChannelsRequest.SerializeToString,
      ('lnrpc.Lightning', 'ListInvoices'): ListInvoiceRequest.SerializeToString,
      ('lnrpc.Lightning', 'ListPayments'): ListPaymentsRequest.SerializeToString,
      ('lnrpc.Lightning', 'ListPeers'): ListPeersRequest.SerializeToString,
      ('lnrpc.Lightning', 'LookupInvoice'): PaymentHash.SerializeToString,
      ('lnrpc.Lightning', 'NewAddress'): NewAddressRequest.SerializeToString,
      ('lnrpc.Lightning', 'NewWitnessAddress'): NewWitnessAddressRequest.SerializeToString,
      ('lnrpc.Lightning', 'OpenChannel'): OpenChannelRequest.SerializeToString,
      ('lnrpc.Lightning', 'OpenChannelSync'): OpenChannelRequest.SerializeToString,
      ('lnrpc.Lightning', 'PendingChannels'): PendingChannelRequest.SerializeToString,
      ('lnrpc.Lightning', 'QueryRoutes'): QueryRoutesRequest.SerializeToString,
      ('lnrpc.Lightning', 'SendCoins'): SendCoinsRequest.SerializeToString,
      ('lnrpc.Lightning', 'SendMany'): SendManyRequest.SerializeToString,
      ('lnrpc.Lightning', 'SendPayment'): SendRequest.SerializeToString,
      ('lnrpc.Lightning', 'SendPaymentSync'): SendRequest.SerializeToString,
      ('lnrpc.Lightning', 'SetAlias'): SetAliasRequest.SerializeToString,
      ('lnrpc.Lightning', 'SignMessage'): SignMessageRequest.SerializeToString,
      ('lnrpc.Lightning', 'StopDaemon'): StopRequest.SerializeToString,
      ('lnrpc.Lightning', 'SubscribeChannelGraph'): GraphTopologySubscription.SerializeToString,
      ('lnrpc.Lightning', 'SubscribeInvoices'): InvoiceSubscription.SerializeToString,
      ('lnrpc.Lightning', 'SubscribeTransactions'): GetTransactionsRequest.SerializeToString,
      ('lnrpc.Lightning', 'VerifyMessage'): VerifyMessageRequest.SerializeToString,
      ('lnrpc.Lightning', 'WalletBalance'): WalletBalanceRequest.SerializeToString,
    }
    response_deserializers = {
      ('lnrpc.Lightning', 'AddInvoice'): AddInvoiceResponse.FromString,
      ('lnrpc.Lightning', 'ChannelBalance'): ChannelBalanceResponse.FromString,
      ('lnrpc.Lightning', 'CloseChannel'): CloseStatusUpdate.FromString,
      ('lnrpc.Lightning', 'ConnectPeer'): ConnectPeerResponse.FromString,
      ('lnrpc.Lightning', 'DebugLevel'): DebugLevelResponse.FromString,
      ('lnrpc.Lightning', 'DecodePayReq'): PayReq.FromString,
      ('lnrpc.Lightning', 'DeleteAllPayments'): DeleteAllPaymentsResponse.FromString,
      ('lnrpc.Lightning', 'DescribeGraph'): ChannelGraph.FromString,
      ('lnrpc.Lightning', 'DisconnectPeer'): DisconnectPeerResponse.FromString,
      ('lnrpc.Lightning', 'GetChanInfo'): ChannelEdge.FromString,
      ('lnrpc.Lightning', 'GetInfo'): GetInfoResponse.FromString,
      ('lnrpc.Lightning', 'GetNetworkInfo'): NetworkInfo.FromString,
      ('lnrpc.Lightning', 'GetNodeInfo'): NodeInfo.FromString,
      ('lnrpc.Lightning', 'GetTransactions'): TransactionDetails.FromString,
      ('lnrpc.Lightning', 'ListChannels'): ListChannelsResponse.FromString,
      ('lnrpc.Lightning', 'ListInvoices'): ListInvoiceResponse.FromString,
      ('lnrpc.Lightning', 'ListPayments'): ListPaymentsResponse.FromString,
      ('lnrpc.Lightning', 'ListPeers'): ListPeersResponse.FromString,
      ('lnrpc.Lightning', 'LookupInvoice'): Invoice.FromString,
      ('lnrpc.Lightning', 'NewAddress'): NewAddressResponse.FromString,
      ('lnrpc.Lightning', 'NewWitnessAddress'): NewAddressResponse.FromString,
      ('lnrpc.Lightning', 'OpenChannel'): OpenStatusUpdate.FromString,
      ('lnrpc.Lightning', 'OpenChannelSync'): ChannelPoint.FromString,
      ('lnrpc.Lightning', 'PendingChannels'): PendingChannelResponse.FromString,
      ('lnrpc.Lightning', 'QueryRoutes'): QueryRoutesResponse.FromString,
      ('lnrpc.Lightning', 'SendCoins'): SendCoinsResponse.FromString,
      ('lnrpc.Lightning', 'SendMany'): SendManyResponse.FromString,
      ('lnrpc.Lightning', 'SendPayment'): SendResponse.FromString,
      ('lnrpc.Lightning', 'SendPaymentSync'): SendResponse.FromString,
      ('lnrpc.Lightning', 'SetAlias'): SetAliasResponse.FromString,
      ('lnrpc.Lightning', 'SignMessage'): SignMessageResponse.FromString,
      ('lnrpc.Lightning', 'StopDaemon'): StopResponse.FromString,
      ('lnrpc.Lightning', 'SubscribeChannelGraph'): GraphTopologyUpdate.FromString,
      ('lnrpc.Lightning', 'SubscribeInvoices'): Invoice.FromString,
      ('lnrpc.Lightning', 'SubscribeTransactions'): Transaction.FromString,
      ('lnrpc.Lightning', 'VerifyMessage'): VerifyMessageResponse.FromString,
      ('lnrpc.Lightning', 'WalletBalance'): WalletBalanceResponse.FromString,
    }
    cardinalities = {
      'AddInvoice': cardinality.Cardinality.UNARY_UNARY,
      'ChannelBalance': cardinality.Cardinality.UNARY_UNARY,
      'CloseChannel': cardinality.Cardinality.UNARY_STREAM,
      'ConnectPeer': cardinality.Cardinality.UNARY_UNARY,
      'DebugLevel': cardinality.Cardinality.UNARY_UNARY,
      'DecodePayReq': cardinality.Cardinality.UNARY_UNARY,
      'DeleteAllPayments': cardinality.Cardinality.UNARY_UNARY,
      'DescribeGraph': cardinality.Cardinality.UNARY_UNARY,
      'DisconnectPeer': cardinality.Cardinality.UNARY_UNARY,
      'GetChanInfo': cardinality.Cardinality.UNARY_UNARY,
      'GetInfo': cardinality.Cardinality.UNARY_UNARY,
      'GetNetworkInfo': cardinality.Cardinality.UNARY_UNARY,
      'GetNodeInfo': cardinality.Cardinality.UNARY_UNARY,
      'GetTransactions': cardinality.Cardinality.UNARY_UNARY,
      'ListChannels': cardinality.Cardinality.UNARY_UNARY,
      'ListInvoices': cardinality.Cardinality.UNARY_UNARY,
      'ListPayments': cardinality.Cardinality.UNARY_UNARY,
      'ListPeers': cardinality.Cardinality.UNARY_UNARY,
      'LookupInvoice': cardinality.Cardinality.UNARY_UNARY,
      'NewAddress': cardinality.Cardinality.UNARY_UNARY,
      'NewWitnessAddress': cardinality.Cardinality.UNARY_UNARY,
      'OpenChannel': cardinality.Cardinality.UNARY_STREAM,
      'OpenChannelSync': cardinality.Cardinality.UNARY_UNARY,
      'PendingChannels': cardinality.Cardinality.UNARY_UNARY,
      'QueryRoutes': cardinality.Cardinality.UNARY_UNARY,
      'SendCoins': cardinality.Cardinality.UNARY_UNARY,
      'SendMany': cardinality.Cardinality.UNARY_UNARY,
      'SendPayment': cardinality.Cardinality.STREAM_STREAM,
      'SendPaymentSync': cardinality.Cardinality.UNARY_UNARY,
      'SetAlias': cardinality.Cardinality.UNARY_UNARY,
      'SignMessage': cardinality.Cardinality.UNARY_UNARY,
      'StopDaemon': cardinality.Cardinality.UNARY_UNARY,
      'SubscribeChannelGraph': cardinality.Cardinality.UNARY_STREAM,
      'SubscribeInvoices': cardinality.Cardinality.UNARY_STREAM,
      'SubscribeTransactions': cardinality.Cardinality.UNARY_STREAM,
      'VerifyMessage': cardinality.Cardinality.UNARY_UNARY,
      'WalletBalance': cardinality.Cardinality.UNARY_UNARY,
    }
    stub_options = beta_implementations.stub_options(host=host, metadata_transformer=metadata_transformer, request_serializers=request_serializers, response_deserializers=response_deserializers, thread_pool=pool, thread_pool_size=pool_size)
    return beta_implementations.dynamic_stub(channel, 'lnrpc.Lightning', cardinalities, options=stub_options)
except ImportError:
  pass
# @@protoc_insertion_point(module_scope)
